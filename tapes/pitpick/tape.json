{
  "name":"Pitpick",
  "author":"KesieV",
  "year":2018,
  "genre":"Platformer",
  "description":"<p>Today I'm leaving here my tiny tribute to the gaming legend <a href='http://www.mobygames.com/developer/sheet/view/developerId,267882/'>Ed Averett</a>, the man I like to call <i>the one-man console generation</i>.</p><p>At the dawn of the 80s, the <a href='https://en.wikipedia.org/wiki/Magnavox'>Magnavox</a> company published its new videogame console, the <a href='https://en.wikipedia.org/wiki/Magnavox_Odyssey%C2%B2'>Magnavox Odyssey<sup>2</sup></a>. It was the second iteration of the most important console in history: the <a href='https://en.wikipedia.org/wiki/Magnavox_Odyssey'>Magnavox Odyssey</a>, the first gaming console ever.</p><p>This time the Odyssey<sup>2</sup> had to face a rapidly growing and competitive market, with nowadays legends the caliber of the <a href='https://en.wikipedia.org/wiki/Atari_2600'>Atari 2600</a> and the <a href='https://en.wikipedia.org/wiki/Intellivision'>Intellivision</a>. Despite everything, it managed to became one of the major three home consoles. But how?</p><p>In the <a href='https://www.dadgum.com/halcyon/'>Halcyon Days</a> project, a collection of classic videogame programmer interviews, James Hague wrote that <i>\"Ed Averett basically <b>was</b> the Odyssey 2, writing <b>the entirely library of games</b>, excepting some early releases: twenty-four games in four years.\"</i></p><p>Wow. Ed Averett, formerly an Intel employee, was asked by Magnavox to basically write a <i>full videogame lineup</i> for its videogame console. That's already incredible but what striked me was the <i>variety</i> of videogame genres he brought up and the incredible creativity behind some of his works.</p><p>Along with classic games like <a href='http://www.mobygames.com/game/pocket-billiards'>Pocket Billiards!</a>, <a href='http://www.mobygames.com/game/electronic-table-soccer'>Electronic Table Soccer!</a> and <a href='http://www.mobygames.com/game/casino-slot-machine'>Casino Slot Machine!</a> and game inspired by that year blockbusters like <a href='http://www.mobygames.com/game/alien-invaders-plus'>Alien Invaders - Plus!</a> and <a href='http://www.mobygames.com/game/kc-munchkin'>K.C. Munchkin!</a>, there are even videogame <i>collections</i> like <a href='http://www.mobygames.com/game/speedway-spin-out-crypto-logic'>Speedway! / Spin-Out! / Crypto-Logic!</a> and brand new genres, like that <a href='http://www.mobygames.com/game/war-of-nerves'>War of Nerves!</a>, which is that first Real Time Strategy game in history we talked about in the <a href='planetarian'>Planetarian</a> article.</p><p>But my favourite one is <a href='https://en.wikipedia.org/wiki/Pickaxe_Pete'>Pick Axe Pete!</a> for his random success: born as a <a href='https://en.wikipedia.org/wiki/Donkey_Kong'>Donkey Kong</a> replacement for the Odyssey<sup>2</sup>, it became a major <i>unintended</i> tie-in game success in Brazil (?) since it has been rebranded after the brazilian humorous character <a href='https://pt.wikipedia.org/wiki/Didi_Moc%C3%B3'>Didi Moc&oacute;</a> with the title <i>Didi na Mina Encantada</i>, and it had a national competition (?) in the US, the <a href='http://www.digitpress.com/archives/kunkel_pickaxepete.htm'>The Pick Axe Pete Pick-Off</a>, at the <a href='https://en.wikipedia.org/wiki/1982_World%27s_Fair'>1982 World's Fair</a> in Knoxville, which received over 11 million visitors.</p><p>The gaming world of 80s-90s was surely a strange and fascinating one, wasn't that?</p><p>Plot!</p><p>This Wright! game allows a glimpse into the life of that legendary miner Pit and his fabulous gold mines somewhere in the Open Mountains!</p><p>Your screen shows a network of tunnels and shafts. It's one of mines where Pit struck it rich, a different mine for each stage.</p><p>The actual secret of those Open Mountain mines lies hidden behind three coloured doors: one at the top level, one at the very bottom and the third in the centre. Huge boulders come bursting from those doors at irregular intervals, bouncing through the narrow tunnels. When two boulders collide, they can explode, show a power up or a key for a coloured door!</p><p>Watch out! The boulders can squash you, so get ready to dodge them or break them with your pickaxe!</p><p>Use LEFT/RIGHT for moving, the A BUTTON for jumping and the DOWN button for crouching down. Use the UP key for climbing the floating ladders. Good luck!</p>",
  "screenshots":[ "pitpick-1.png", "pitpick-2.png" ],
  "hardware":{
    "width":256,
    "height":224,
    "filter":"retro"
  },
  "audioChannels":{
    "sfx":{ "volume":1, "samples":[ "break", "start", "message", "rockbreak", "jump", "climb", "key", "bonus", "dead", "notify", "door", "fall", "gameover" ] }
  },
  "cheats":{},
  "resources":{
    "arcade":"arcade.font",
    "sprites":"sprites.png",
    "bonus":{ "attack":0.009, "decay":0.15, "frequencyJump1amount":0.1, "frequencyJump1onset":0.14, "frequencyJump2amount":0.24, "frequencyJump2onset":0.3, "release":0.2, "sustain":0.2, "wave":"saw" },
    "break":{ "decay":0.006, "release":0.084, "wave":"whitenoise" },
    "climb":{ "attack":0.009, "decay":0, "pitch":-0.002, "sustain":0.024, "wave":"square" },
    "dead":{ "attack":0.021, "decay":0.3, "frequencyJump1amount":-0.4, "frequencyJump1onset":0.44, "pitch":-0.0009, "release":0.4, "sustain":0.4, "tremoloDepth":1, "tremoloFrequency":32.5, "wave":"square" },
    "door":{ "decay":0.3, "frequency":310, "pitch":0.0006, "release":0.4, "sustain":0.4, "tremoloDepth":1, "tremoloFrequency":50, "wave":"square" },
    "fall":{ "attack":0.009, "decay":0.3, "frequency":1600, "pitch":-0.0002, "release":0.4, "sustain":5, "wave":"sine" },
    "gameover":{ "attack":0.015, "decay":0.3, "frequency":400, "frequencyJump1amount":0.22, "frequencyJump1onset":0.19, "frequencyJump2amount":-0.34, "frequencyJump2onset":0.39, "release":0.032, "sustain":0.4, "wave":"square" },
    "jump":{ "attack":0.006, "decay":0.084, "pitch":0.0003, "release":0.108, "sustain":0.076, "wave":"square" },
    "key":{ "attack":0.003, "decay":0.15, "frequencyJump1amount":0.34, "frequencyJump1onset":0.21, "release":0.2, "sustain":0.2, "wave":"square" },
    "message":{ "attack":0.015, "decay":0.3, "frequency":400, "frequencyJump1amount":-0.22, "frequencyJump1onset":0.19, "frequencyJump2amount":0.34, "frequencyJump2onset":0.39, "release":0.032, "sustain":0.4, "wave":"square" },
    "notify":{ "attack":0.021, "decay":0.102, "pitch":0.002, "tremoloDepth":1, "tremoloFrequency":32.5, "wave":"square" },
    "rockbreak":{ "decay":0.084, "frequency":100, "pitch":-0.002, "release":0.092, "wave":"saw" }
  },
  "stencils":{
    "codeFreezeGameElements":{ "as":{ "_":[ "object", "gameelement" ] }, "set":{ "animation":"none", "state":"frozen" } },
    "codeNextStage":[
      {
        "as":{ "_":"variable" },
        "set":{
          "boulderSpeed":{ "_":[ "this", "cave", "/", 10, "limitValue", [ 0, 2 ], "+", 2 ] },
          "holesCount":{ "_":[ "this", "cave", "/", 5, "floor", "limitValue", [ 0, 3 ], "+", 1 ] },
          "spawnBoulders":{ "_":[ "this", "cave", "/", 2, "floor", "limitValue", [ 0, 3 ], "+", 1 ] },
          "stageSeed":{ "_":[ "variable", "randomSeed" ] }
        }
      },
      { "sum":1, "to":{ "_":[ "variable", "cave" ] } }
    ],
    "codePlayer":[
      {
        "when":{ "_":[ "this", "collidesWith", { "_":[ "object", "key" ] } ] },
        "execute":[
          {
            "object":{
              "type":"message",
              "width":240, "height":24,
              "zIndex":50, "x":8, "y":100,
              "bgcolor":"#000", "color":"#f60000",
              "font":"arcade", "fontSize":8, "lineHeight":24, "textAlign":"center", "html":"GO FOR THE DOOR!",
              "states":{
                "code":{ "name":"Sequence", "data":[ { "set":{ "visible":{ "_":[ "this", "visible", "not" ] } }, "wait":10, "loop":1, "cycles":6 }, { "remove":1 } ] }
              }
            },
            "playAudio":"key"
          },
          { "as":{ "_":"scene" }, "set":{ "haskey":1 } },
          { "sum":10, "to":{ "_":[ "variable", "score" ] } },
          { "object":{ "set":{ "_":[ "stencil", "modelPopupLabel" ] }, "html":"10PTS." } },
          { "as":{ "_":"that" }, "remove":1 }
        ]
      },
      {
        "when":{ "_":[ "this", "collidesWith", { "_":[ "object", "pickaxe" ] } ] },
        "execute":[
          { "set":{ "pickaxeTimer":375 } },
          { "sum":5, "to":{ "_":[ "variable", "score" ] } },
          { "object":{ "set":{ "_":[ "stencil", "modelPopupLabel" ] }, "html":"5PTS." } },
          { "as":{ "_":"that" }, "remove":1 }
        ]
      },
      {
        "when":{ "_":[ "scene", "haskey" ] },
        "execute":{
          "when":{ "_":[ "this", "collidesWith", { "_":[ "object", "door" ] } ] },
          "execute":[
            { "sum":20, "to":{ "_":[ "variable", "score" ] } },
            { "object":{ "set":{ "_":[ "stencil", "modelPopupLabel" ] }, "html":"20PTS." } },
            { "set":{ "door":{ "_":"that" } } },
            {
              "as":{ "_":"variable" },
              "set":{ "nextStageColor":{ "_":[ "that", "door", "bgcolor" ] }, "skinX":{ "_":[ "that", "door", "skinX" ] }, "skinY":{ "_":[ "that", "door", "skinY" ] } }
            },
            { "as":{ "_":"scene" }, "set":{ "state":"clear" } },
            { "set":{ "animation":"none", "state":"frozen" } }
          ]
        }
      },
      {
        "when":{ "_":[ "this", "pickaxeTimer" ] },
        "execute":[
          { "subtract":1, "to":{ "_":[ "this", "pickaxeTimer" ] } },
          {
            "as":{ "_":[ "this", "pickaxe" ] },
            "execute":[
              { "when":{ "_":[ "that", "pickaxeTimer", "%", 4, "not" ] }, "playAudio":"break" },
              {
                "when":{ "_":[ "that", "pickaxeTimer", "/", 2, "floor", "%", 2 ] },
                "set":{
                  "tileX":96, "tileY":56, "width":16, "height":32,
                  "x":{ "_":[ "that", "x" ] }, "y":{ "_":[ "that", "y", "-", 16 ] },
                  "flipX":{ "_":[ "that", "flipX" ] }
                },
                "elseExecute":{
                  "when":{ "_":[ "that", "flipX" ] },
                  "set":{ "tileX":112, "tileY":56, "width":32, "height":16, "x":{ "_":[ "that", "x", "-", 16 ] }, "y":{ "_":[ "that", "y" ] }, "flipX":1 },
                  "elseExecute":{ "set":{ "tileX":112, "tileY":56, "width":32, "height":16, "x":{ "_":[ "that", "x" ] }, "y":{ "_":[ "that", "y" ] }, "flipX":0 } }
                }
              },
              {
                "when":{ "_":[ "that", "pickaxeTimer", "isLessThan", 25 ] },
                "set":{ "visible":{ "_":[ "this", "visible", "not" ] } },
                "elseExecute":{ "set":{ "visible":1 } }
              },
              {
                "when":{ "_":[ "this", "collidesWith", { "_":[ "object", "breakable" ] } ] },
                "as":{ "_":"that" },
                "execute":[
                  { "sum":{ "_":[ "this", "score" ] }, "to":{ "_":[ "variable", "score" ] } },
                  {
                    "object":{ "set":{ "_":[ "stencil", "modelPopupLabel" ] }, "html":{ "_":[ "that", "score", ".", "PTS." ] } },
                    "as":{ "_":"that" },
                    "playAudio":"rockbreak"
                  },
                  { "_":[ "stencil", "codeRemoveWithSpark" ] }
                ]
              }
            ]
          },
          { "set":{ "tileY":24 } }
        ],
        "elseExecute":[
          { "as":{ "_":[ "this", "pickaxe" ] }, "set":{ "visible":0 } },
          { "set":{ "tileY":8 } },
          { "when":{ "_":[ "this", "collidesWith", { "_":[ "object", "killplayer" ] } ] }, "set":{ "state":"dying" } }
        ]
      }
    ],
    "codeRemoveWithSpark":[ { "object":{ "_":[ "stencil", "spark" ] } }, { "remove":1 } ],
    "spark":{
      "image":"sprites", "tileY":72, "width":16, "height":16,
      "zIndex":8, "at":{ "_":"that" },
      "states":{ "code":{ "name":"Sequence", "data":[ { "sum":1, "to":{ "_":[ "this", "frame" ] }, "wait":2, "loop":1, "cycles":2 }, { "remove":1 } ] } }
    },
    "modelPopupLabel":{
      "width":100, "height":10,
      "zIndex":10000, "x":{ "_":[ "this", "xCenteredWith", { "_":"that" } ] }, "y":{ "_":[ "that", "y", "-", 10 ] },
      "color":"#e0ddff",
      "font":"arcade", "fontSize":8, "lineHeight":12, "textAlign":"center",
      "speed":0.5,
      "states":{
        "code":{
          "name":"Sequence",
          "data":[ { "subtract":{ "_":[ "this", "speed" ] }, "to":{ "_":[ "this", "y" ] }, "wait":1, "loop":1, "cycles":15 }, { "remove":1 } ]
        }
      }
    },
    "player":{
      "type":"tostart",
      "image":"sprites", "tileY":8, "width":16, "height":16,
      "zIndex":10,
      "execute":{ "object":{ "image":"sprites", "zIndex":11, "visible":0 }, "assign":{ "_":"that" }, "to":{ "_":[ "this", "pickaxe" ] } },
      "animations":{
        "climb":{ "frames":[ 5, 6 ], "speed":2, "loopTo":0 },
        "couch":{ "frame":4 },
        "dead":{ "frames":[ 7, 8 ], "loopTo":0 },
        "dying":{ "frame":7 },
        "fly":{ "frame":3 },
        "jump":{ "frame":2 },
        "still":{ "frame":0 },
        "walk":{ "frames":2, "speed":2, "loopTo":0 }
      },
      "animation":"still",
      "jumpOverBonus":0,
      "pickaxeTimer":375,
      "soundTimer":0,
      "states":[
        {
          "name":"play",
          "code":[
            {
              "name":"Physics",
              "data":{
                "walls":{ "type":"wall", "restitutionX":0, "execute":{ "when":{ "_":[ "this", "touchDown" ] }, "set":{ "forceY":0 } } },
                "gravityY":0.2,
                "limitX":[ -2, 2 ],
                "limitY":[ -9, 5 ]
              }
            },
            {
              "name":"Execute",
              "data":[
                {
                  "when":{ "_":[ "keyRight", "isDown" ] },
                  "sum":1,
                  "to":{ "_":[ "this", "forceX" ] },
                  "elseExecute":{
                    "when":{ "_":[ "keyLeft", "isDown" ] },
                    "subtract":1,
                    "to":{ "_":[ "this", "forceX" ] },
                    "elseExecute":[
                      { "set":{ "forceX":{ "_":[ "this", "forceX", "*", 0.5 ] } } },
                      { "when":{ "_":[ "this", "forceX", "abs", "isLessThan", 0.2 ] }, "set":{ "forceX":0 } }
                    ]
                  }
                },
                { "set":{ "couchAnimation":"couch", "couched":0 } },
                {
                  "when":{ "_":[ "this", "touchDown" ] },
                  "execute":[
                    {
                      "when":{ "_":[ "this", "jumpOverBonus" ] },
                      "execute":[
                        { "sum":{ "_":[ "this", "jumpOverBonus" ] }, "to":{ "_":[ "variable", "score" ] } },
                        { "object":{ "set":{ "_":[ "stencil", "modelPopupLabel" ] }, "html":{ "_":[ "that", "jumpOverBonus", ".", "PTS." ] } }, "playAudio":"notify" },
                        { "set":{ "jumpOverBonus":0 } }
                      ]
                    },
                    {
                      "when":{ "_":[ "keyDown", "isDown" ] },
                      "set":{ "forceX":0, "couched":1 },
                      "elseExecute":{
                        "when":{ "_":[ "keyA", "isHit" ] },
                        "set":{ "forceY":-2.5, "playAudio":"jump" },
                        "elseExecute":{
                          "when":{ "_":[ "this", "collidesWith", { "_":[ "object", "stair" ] } ] },
                          "execute":{
                            "when":{ "_":[ "keyUp", "isDown" ] },
                            "execute":[ { "as":{ "_":"that" }, "set":{ "state":"climb" } }, { "set":{ "x":{ "_":[ "that", "x" ] }, "state":"climb" } } ]
                          }
                        }
                      }
                    }
                  ],
                  "elseExecute":{
                    "when":{ "_":[ "this", "forceY", "abs", "isLessThan", 1.5 ] },
                    "execute":[
                      {
                        "when":{ "_":[ "this", "complexCollidesWith", { "subject":{ "_":[ "object", "boulder" ] }, "hitbox":{ "width":2, "height":2, "x":7, "y":20 } } ] },
                        "set":{ "jumpOverBonus":1 }
                      },
                      { "set":{ "couchAnimation":"fly", "couched":1 } }
                    ]
                  }
                },
                {
                  "when":{ "_":[ "this", "couched" ] },
                  "set":{ "hitbox":{ "width":8, "height":6, "x":4, "y":10 }, "animation":{ "_":[ "this", "couchAnimation" ] } },
                  "elseExecute":[
                    { "set":{ "hitbox":{ "width":8, "height":16, "x":4, "y":0 } } },
                    {
                      "when":{ "_":[ "this", "touchDown" ] },
                      "execute":{
                        "when":{ "_":[ "this", "forceX" ] },
                        "set":{ "flipX":{ "_":[ "this", "forceX", "isLessThan", 0 ] }, "animation":"walk" },
                        "elseExecute":{ "set":{ "animation":"still" } }
                      },
                      "elseExecute":{ "set":{ "animation":"jump" } }
                    }
                  ]
                },
                {
                  "when":{ "_":[ "objectTyped", "stair", "not" ] },
                  "execute":{
                    "as":{
                      "_":[
                        "randomValue",
                        {
                          "_":[ "this", "complexCollidesWith", { "subject":{ "_":[ "object", "stairspawn" ] }, "all":1, "hitbox":{ "width":512, "height":16, "x":-256, "y":-16 } } ]
                        }
                      ]
                    },
                    "execute":{ "object":{ "set":{ "_":[ "stencil", "stair" ] }, "x":{ "_":[ "that", "x" ] }, "y":{ "_":[ "that", "y", "+", 8 ] } } }
                  }
                },
                { "_":[ "stencil", "codePlayer" ] }
              ]
            }
          ]
        },
        {
          "name":"climb",
          "set":{ "animation":"climb" },
          "code":{
            "name":"Execute",
            "data":[
              { "sum":1, "to":{ "_":[ "this", "soundTimer" ] } },
              { "when":{ "_":[ "this", "soundTimer", "%", 4, "not" ] }, "playAudio":"climb" },
              { "subtract":2, "to":{ "_":[ "this", "y" ] } },
              {
                "when":{ "_":[ "this", "collidesWith", { "_":[ "object", "climbable" ] }, "not" ] },
                "execute":[ { "set":{ "state":"play" } }, { "as":{ "_":[ "object", "climbingstair" ] }, "set":{ "state":"remove" } } ]
              },
              { "_":[ "stencil", "codePlayer" ] }
            ]
          }
        },
        {
          "name":"dying",
          "set":{ "hitbox":0, "flipX":0, "forceX":0, "forceY":-2, "animation":"dying", "playAudio":"dead" },
          "execute":[
            { "execute":{ "as":{ "_":[ "object", "message" ] }, "remove":1 } },
            { "as":{ "_":[ "this", "pickaxe" ] }, "set":{ "visible":0 } },
            { "_":[ "stencil", "codeFreezeGameElements" ] }
          ],
          "code":[
            { "name":"Physics", "data":{ "walls":{ "type":"wall", "restitutionX":0 }, "gravityY":0.2, "limitX":[ -2, 2 ], "limitY":[ -9, 5 ] } },
            { "name":"Execute", "data":[ { "when":{ "_":[ "this", "touchDown" ] }, "set":{ "state":"dead" } }, { "sum":90, "to":{ "_":[ "this", "angle" ] } } ] }
          ]
        },
        {
          "name":"dead",
          "set":{ "angle":0, "animation":"dead" },
          "code":{
            "name":"Sequence",
            "data":[
              { "wait":75 },
              {
                "when":{ "_":[ "variable", "lives" ] },
                "execute":[ { "subtract":1, "to":{ "_":[ "variable", "lives" ] } }, { "gotoScene":"stage", "withTransition":3 } ],
                "elseExecute":{ "gotoScene":"gameover", "withTransition":3 }
              }
            ]
          }
        }
      ]
    },
    "blinkingBehaviour":{ "code":{ "name":"Sequence", "data":[ { "set":{ "tileY":56 }, "wait":2 }, { "set":{ "tileY":72 }, "wait":2, "loopTo":0 } ] } },
    "bonusModel":{
      "type":"gameelement",
      "image":"sprites", "tileX":48, "tileY":56, "width":16, "height":16,
      "zIndex":4, "at":{ "_":"that" },
      "spin":{ "_":[ "randomValue", [ -90, 90 ] ] },
      "states":[
        {
          "like":[ { "_":[ "stencil", "spinningBehaviour" ] }, { "_":[ "stencil", "blinkingBehaviour" ] } ],
          "code":{
            "name":"Execute",
            "data":{
              "when":{ "_":[ "this", "fallSpeed", "isLessThan", 0 ] },
              "execute":{
                "when":{ "_":[ "this", "y", "isGreaterThan", 8 ] },
                "sum":{ "_":[ "this", "fallSpeed" ] },
                "to":{ "_":[ "this", "y" ] },
                "elseExecute":{ "set":{ "y":8, "state":"wait" } }
              },
              "elseExecute":{
                "when":{ "_":[ "this", "y", "isLessThan", 208 ] },
                "sum":{ "_":[ "this", "fallSpeed" ] },
                "to":{ "_":[ "this", "y" ] },
                "elseExecute":{ "set":{ "y":208, "state":"wait" } }
              }
            }
          }
        },
        {
          "name":"wait",
          "like":{ "_":[ "stencil", "blinkingBehaviour" ] },
          "set":{ "angle":0 },
          "code":{
            "name":"Sequence",
            "data":[ { "wait":75 }, { "set":{ "visible":{ "_":[ "this", "visible", "not" ] } }, "wait":1, "loop":1, "cycles":75 }, { "remove":1 } ]
          }
        }
      ]
    },
    "key":{ "type":"key", "set":{ "_":[ "stencil", "bonusModel" ] }, "frame":1, "fallSpeed":-3 },
    "pickaxe":{ "type":"pickaxe", "set":{ "_":[ "stencil", "bonusModel" ] }, "fallSpeed":3 },
    "boulder":{
      "type":[ "boulder", "killplayer", "breakable", "gameelement" ],
      "image":"sprites", "tileY":56, "width":16, "height":16,
      "zIndex":5, "x":{ "_":[ "that", "x" ] }, "y":{ "_":[ "that", "y" ] }, "frame":{ "_":[ "randomValue", [ 0, 1 ] ] },
      "hitbox":{ "width":12, "height":12, "x":2, "y":4 },
      "forceY":-2,
      "score":3,
      "skipdoors":10,
      "states":{
        "code":[
          {
            "name":"Sequence",
            "data":[
              {
                "when":{ "_":[ "this", "forceX", "isGreaterThan", 0 ] },
                "sum":90,
                "to":{ "_":[ "this", "angle" ] },
                "elseExecute":{ "subtract":90, "to":{ "_":[ "this", "angle" ] } }
              },
              { "wait":2, "loopTo":0 }
            ]
          },
          {
            "name":"Physics",
            "data":{
              "walls":{ "type":"wall", "restitutionX":1, "execute":{ "when":{ "_":[ "this", "touchDown" ] }, "set":{ "forceY":{ "_":[ "this", "forceY", "*", -0.4 ] } } } },
              "gravityY":0.2,
              "limitY":[ -9, 5 ]
            }
          },
          {
            "name":"Execute",
            "data":[
              {
                "when":{ "_":[ "this", "complexCollidesWith", { "subject":{ "_":[ "object", "boulder" ] }, "notThis":1 } ] },
                "execute":[
                  {
                    "when":{ "_":[ "object", "pickaxe", "not", "and", { "_":[ "this", "randomNumber", [ 0, 100 ], "isLessThan", 10 ] } ] },
                    "object":{ "_":[ "stencil", "pickaxe" ] },
                    "elseExecute":{ "object":{ "_":[ "stencil", "fallingBoulder" ] }, "playAudio":"break" },
                    "playAudio":"bonus"
                  },
                  {
                    "when":{
                      "_":[ "object", "key", "not", "and", { "_":[ "scene", "haskey", "not" ] }, "and", { "_":[ "this", "randomNumber", [ 0, 100 ], "isLessThan", 10 ] } ]
                    },
                    "object":{ "_":[ "stencil", "key" ] },
                    "playAudio":"bonus"
                  },
                  { "as":{ "_":"that" }, "execute":{ "_":[ "stencil", "codeRemoveWithSpark" ] } },
                  { "_":[ "stencil", "codeRemoveWithSpark" ] }
                ]
              },
              {
                "when":{ "_":[ "this", "skipdoors" ] },
                "subtract":1,
                "to":{ "_":[ "this", "skipdoors" ] },
                "elseExecute":{
                  "when":{ "_":[ "this", "collidesWith", { "_":[ "object", "door" ] } ] },
                  "execute":[
                    { "sum":1, "to":{ "_":[ "that", "spins" ] } },
                    { "when":{ "_":[ "randomNumber", [ 0, 100 ], "isLessThan", 50 ] }, "sum":1, "to":{ "_":[ "that", "boulders" ] } },
                    { "remove":1 }
                  ]
                }
              }
            ]
          }
        ]
      }
    },
    "dataDoors":[
      { "bgcolor":"#f60000", "skinX":32, "skinY":228 },
      { "bgcolor":"#5271ac", "skinX":0, "skinY":236 },
      { "bgcolor":"#c57100", "skinX":96, "skinY":228 },
      { "bgcolor":"#838183", "skinX":128, "skinY":228 },
      { "bgcolor":"#8381e6", "skinX":64, "skinY":228 },
      { "bgcolor":"#009d00", "skinX":0, "skinY":228 }
    ],
    "door":{
      "type":[ "gameelement", "tostart", "door" ],
      "set":{ "_":[ "randomValue", { "_":[ "stencil", "dataDoors" ] } ] },
      "image":"sprites", "tileY":40, "width":16, "height":16,
      "autospinTimer":50,
      "boulders":0,
      "spinTimer":0,
      "spins":0,
      "states":{
        "name":"play",
        "code":{
          "name":"Execute",
          "data":[
            {
              "when":{ "_":[ "this", "spinTimer" ] },
              "execute":[
                { "subtract":1, "to":{ "_":[ "this", "spinTimer" ] } },
                { "set":{ "frame":{ "_":[ "this", "spinTimer" ] } } },
                {
                  "when":{ "_":[ "this", "frame", "isEqualTo", 3 ] },
                  "execute":{
                    "when":{ "_":[ "this", "boulders" ] },
                    "execute":[
                      { "subtract":1, "to":{ "_":[ "this", "boulders" ] } },
                      {
                        "when":{ "_":[ "object", "boulder", "count", "isLessThan", 10 ] },
                        "execute":[
                          { "object":{ "set":{ "_":[ "stencil", "boulder" ] }, "forceX":{ "_":[ "that", "spawnSide", "*", { "_":[ "variable", "boulderSpeed" ] } ] } } },
                          { "set":{ "spawnSide":{ "_":[ "this", "spawnSide", "*", -1 ] } } }
                        ]
                      }
                    ]
                  }
                }
              ],
              "elseExecute":{ "when":{ "_":[ "this", "spins" ] }, "subtract":1, "to":{ "_":[ "this", "spins" ] }, "set":{ "frame":0, "spinTimer":6 } }
            },
            {
              "when":{ "_":[ "this", "autospinTimer" ] },
              "subtract":1,
              "to":{ "_":[ "this", "autospinTimer" ] },
              "elseExecute":[
                { "set":{ "_":[ "randomValue", { "_":[ "stencil", "dataDoors" ] } ] } },
                {
                  "set":{
                    "autospinTimer":{ "_":[ "randomNumber", [ 25, 75 ] ] },
                    "boulders":{ "_":[ "variable", "spawnBoulders" ] },
                    "spawnSide":{ "_":[ "randomValue", [ -1, 1 ] ] },
                    "spins":{ "_":[ "variable", "spawnBoulders" ] }
                  }
                }
              ]
            }
          ]
        }
      }
    },
    "fallingBoulder":{
      "type":[ "killplayer", "breakable", "gameelement" ],
      "image":"sprites", "tileX":32, "tileY":56, "width":16, "height":16,
      "zIndex":5, "at":{ "_":"that" },
      "score":3,
      "states":{
        "like":{ "_":[ "stencil", "spinningBehaviour" ] },
        "code":{
          "name":"Execute",
          "data":{
            "when":{ "_":[ "this", "y", "isLessThan", 208 ] },
            "execute":[
              { "sum":{ "_":[ "variable", "boulderSpeed" ] }, "to":{ "_":[ "this", "y" ] } },
              {
                "when":{ "_":[ "this", "complexCollidesWith", { "subject":{ "_":[ "object", "boulder" ] }, "notThis":1 } ] },
                "execute":[
                  {
                    "when":{ "_":[ "object", "pickaxe", "not", "and", { "_":[ "this", "randomNumber", [ 0, 100 ], "isLessThan", 10 ] } ] },
                    "object":{ "_":[ "stencil", "pickaxe" ] },
                    "playAudio":"bonus"
                  },
                  {
                    "when":{
                      "_":[ "object", "key", "not", "and", { "_":[ "scene", "haskey", "not" ] }, "and", { "_":[ "this", "randomNumber", [ 0, 100 ], "isLessThan", 10 ] } ]
                    },
                    "object":{ "_":[ "stencil", "key" ] },
                    "playAudio":"bonus"
                  },
                  { "as":{ "_":"that" }, "execute":{ "_":[ "stencil", "codeRemoveWithSpark" ] } },
                  { "_":[ "stencil", "codeRemoveWithSpark" ] }
                ]
              }
            ],
            "elseExecute":{ "_":[ "stencil", "codeRemoveWithSpark" ] }
          }
        }
      }
    },
    "spinningBehaviour":{
      "set":{ "spin":{ "_":[ "randomValue", [ -90, 90 ] ] } },
      "code":{ "name":"Sequence", "data":[ { "sum":{ "_":[ "this", "spin" ] }, "to":{ "_":[ "this", "angle" ] } }, { "wait":2, "loopTo":0 } ] }
    },
    "stair":{
      "type":[ "stair", "climbable", "gameelement" ],
      "image":"sprites", "tileX":80, "tileY":56, "width":16, "height":0,
      "zIndex":3,
      "states":[
        {
          "code":{
            "name":"Sequence",
            "data":[
              { "sum":2, "to":{ "_":[ "this", "height" ] }, "wait":1, "loop":1, "cycles":8 },
              { "wait":25 },
              { "subtract":2, "to":{ "_":[ "this", "height" ] }, "wait":1, "loop":1, "cycles":8 },
              { "remove":1 }
            ]
          }
        },
        { "name":"climb", "set":{ "type":"climbingstair", "removeType":"stair", "height":16 } },
        {
          "name":"remove",
          "code":{ "name":"Sequence", "data":[ { "subtract":2, "to":{ "_":[ "this", "height" ] }, "wait":1, "loop":1, "cycles":8 }, { "remove":1 } ] }
        }
      ]
    },
    "-":{ "type":[ "wall", "climbable" ], "width":8, "height":8 },
    "=":{
      "set":{ "_":[ "stencil", "-" ] },
      "image":"sprites", "tileX":{ "_":[ "variable", "skinX" ] }, "tileY":{ "_":[ "variable", "skinY" ] },
      "frame":{ "_":[ "randomValue", [ 2, 3 ] ] }
    },
    "#":{ "type":"stairslot", "set":{ "_":[ "stencil", "=" ] } },
    "I":{
      "set":{ "_":[ "stencil", "-" ] },
      "image":"sprites", "tileX":{ "_":[ "variable", "skinX" ] }, "tileY":{ "_":[ "variable", "skinY" ] },
      "frame":{ "_":[ "randomValue", [ 0, 1 ] ] }
    }
  },
  "execute":[
    {
      "object":[
        {
          "type":"hud",
          "hudType":"label", "label":"1UP %number|variable.score|0|6%",
          "width":240, "height":10,
          "x":8, "y":0,
          "color":"#dedade",
          "font":"arcade", "fontSize":8, "lineHeight":10
        },
        {
          "image":"sprites", "tileX":8, "height":8,
          "x":216, "y":0,
          "states":{ "code":{ "name":"Execute", "data":{ "set":{ "width":{ "_":[ "variable", "lives", "*", 8 ] } } } } }
        },
        {
          "image":"sprites", "tileX":0, "width":8, "height":8,
          "x":240, "y":0,
          "timer":0,
          "states":{
            "code":{
              "name":"Execute",
              "data":[
                { "set":{ "timer":{ "_":[ "this", "timer", "+", 1, "%", 10 ] } } },
                { "when":{ "_":[ "this", "timer", "isLessThan", 5 ] }, "set":{ "visible":0 }, "elseExecute":{ "set":{ "visible":{ "_":[ "scene", "haskey" ] } } } }
              ]
            }
          }
        },
        {
          "type":"hud",
          "hudType":"label", "label":"HI %number|variable.hiscore|0|6%",
          "width":240, "height":10,
          "x":8, "y":0,
          "color":"#f60000",
          "font":"arcade", "fontSize":8, "lineHeight":10, "textAlign":"center"
        }
      ],
      "into":{ "_":"hud" }
    },
    { "when":{ "_":[ "storage", "hiscore", "not" ] }, "as":{ "_":"storage" }, "set":{ "hiscore":0 } },
    { "as":{ "_":"variable" }, "set":{ "hiscore":{ "_":[ "storage", "hiscore" ] } } }
  ],
  "scenes":{
    "intro":{
      "object":[
        { "image":"sprites", "tileY":120, "width":67, "height":8, "x":94, "y":190 },
        {
          "width":256, "height":50,
          "x":0, "y":200,
          "color":"#dedade",
          "font":"arcade", "fontSize":8, "lineHeight":10, "textAlign":"center", "html":"TM & (c) 2018 KESIEV CORP.<br>LICENSED TO WRIGHT! MAG"
        },
        {
          "width":256, "height":24,
          "x":0, "y":130,
          "color":"#dedade",
          "font":"arcade", "fontSize":8, "lineHeight":24, "textAlign":"center", "html":"PRESS START",
          "states":{ "code":{ "name":"Sequence", "data":{ "set":{ "visible":{ "_":[ "this", "visible", "not" ] } }, "wait":10, "loop":1 } } }
        },
        { "image":"sprites", "tileY":128, "width":162, "height":50, "x":47, "y":40 },
        {
          "image":"sprites", "tileY":178, "width":162, "height":50,
          "zIndex":5, "x":47, "y":40,
          "timer":0,
          "states":{
            "code":{
              "name":"Sequence",
              "data":[
                { "wait":13 },
                { "when":{ "_":[ "this", "timer", "%", 3, "not" ] }, "playAudio":"break" },
                { "sum":1, "to":{ "_":[ "this", "timer" ] } },
                {
                  "object":{
                    "set":{ "_":[ "stencil", "spark" ] },
                    "x":{ "_":[ "that", "x", "+", { "_":[ "that", "width" ] }, "-", 8 ] }, "y":{ "_":[ "randomNumber", [ 32, 89 ] ] }
                  },
                  "subtract":2,
                  "to":{ "_":[ "this", "width" ] }
                },
                { "wait":1, "cycles":81, "loopTo":-3 },
                { "remove":1 }
              ]
            }
          }
        },
        {
          "image":"sprites", "tileY":24, "width":16, "height":16,
          "zIndex":10, "x":244, "y":74,
          "flipX":1,
          "execute":{ "object":{ "image":"sprites", "zIndex":11, "flipX":1 }, "assign":{ "_":"that" }, "to":{ "_":[ "this", "pickaxe" ] } },
          "animations":{ "walk":{ "frames":2, "speed":2, "loopTo":0 } },
          "animation":"walk",
          "pickaxeTimer":0,
          "states":{
            "code":{
              "name":"Execute",
              "data":{
                "when":{ "_":[ "this", "x", "isGreaterThan", -16 ] },
                "execute":[
                  { "subtract":2, "to":{ "_":[ "this", "x" ] } },
                  { "sum":1, "to":{ "_":[ "this", "pickaxeTimer" ] } },
                  {
                    "as":{ "_":[ "this", "pickaxe" ] },
                    "execute":{
                      "when":{ "_":[ "that", "pickaxeTimer", "/", 2, "floor", "%", 2 ] },
                      "set":{ "tileX":96, "tileY":56, "width":16, "height":32, "x":{ "_":[ "that", "x" ] }, "y":{ "_":[ "that", "y", "-", 16 ] } },
                      "elseExecute":{ "set":{ "tileX":112, "tileY":56, "width":32, "height":16, "x":{ "_":[ "that", "x", "-", 16 ] }, "y":{ "_":[ "that", "y" ] } } }
                    }
                  }
                ],
                "elseExecute":[ { "remove":1 }, { "as":{ "_":[ "this", "pickaxe" ] }, "remove":1 } ]
              }
            }
          }
        }
      ],
      "states":{
        "code":{
          "name":"Execute",
          "data":{
            "when":{ "_":[ "keyA", "isHit" ] },
            "execute":[
              {
                "as":{ "_":"variable" },
                "set":{
                  "cave":0,
                  "lives":3,
                  "nextStageColor":{ "_":[ "stencil", "dataDoors", 0, "bgcolor" ] },
                  "score":0,
                  "skinX":{ "_":[ "stencil", "dataDoors", 0, "skinX" ] },
                  "skinY":{ "_":[ "stencil", "dataDoors", 0, "skinY" ] }
                },
                "playAudio":"jump"
              },
              { "_":[ "stencil", "codeNextStage" ] },
              { "gotoScene":"stage", "withTransition":3 }
            ]
          }
        }
      }
    },
    "gameover":{
      "states":{
        "code":{
          "name":"Sequence",
          "data":[
            { "publishScore":{ "_":[ "variable", "score" ] } },
            {
              "object":{
                "width":256, "height":24,
                "x":0, "y":100,
                "bgcolor":"#000", "color":"#f60000",
                "font":"arcade", "fontSize":8, "lineHeight":24, "textAlign":"center", "html":"GAME OVER"
              },
              "playAudio":"gameover"
            },
            {
              "when":{ "_":[ "variable", "score", "isGreaterThan", { "_":[ "variable", "hiscore" ] } ] },
              "elseExecute":{ "set":{ "gameoverColor":"#fff", "gameoverText":"GAME OVER" } },
              "subsequence":[
                { "wait":25 },
                { "set":{ "counter":0 } },
                {
                  "times":16,
                  "execute":[
                    { "object":{ "set":{ "_":[ "stencil", "spark" ] }, "x":{ "_":[ "that", "counter" ] }, "y":{ "_":[ "randomNumber", [ 108, 132 ] ] } } },
                    { "sum":16, "to":{ "_":[ "this", "counter" ] } }
                  ]
                },
                {
                  "object":{
                    "width":256, "height":24,
                    "x":0, "y":116,
                    "bgcolor":"#000", "color":"#dedade",
                    "font":"arcade", "fontSize":8, "lineHeight":24, "textAlign":"center", "html":"NEW HIGH SCORE! GREAT!",
                    "states":{
                      "code":{ "name":"Sequence", "data":{ "set":{ "visible":{ "_":[ "this", "visible", "not" ] } }, "playAudio":"notify", "wait":1, "loop":1, "cycles":20 } }
                    }
                  }
                },
                { "as":{ "_":"variable" }, "set":{ "hiscore":{ "_":[ "variable", "score" ] } } },
                { "as":{ "_":"storage" }, "set":{ "hiscore":{ "_":[ "variable", "score" ] } } },
                { "wait":50 }
              ]
            },
            { "wait":50 },
            { "gotoScene":"intro", "withTransition":3 }
          ]
        }
      }
    },
    "nextStage":{
      "execute":[
        { "_":[ "stencil", "codeNextStage" ] },
        {
          "object":[
            {
              "image":"sprites", "tileY":88, "width":32, "height":32,
              "x":112, "y":96,
              "states":{
                "code":{
                  "name":"Sequence",
                  "data":[
                    { "set":{ "flipX":{ "_":[ "this", "flipX", "not" ] } }, "wait":5, "loop":1, "cycles":10 },
                    { "sum":1, "to":{ "_":[ "this", "frame" ] }, "cycles":3, "loopTo":0 },
                    { "playAudio":"break" },
                    { "set":{ "visible":{ "_":[ "this", "visible", "not" ] } }, "wait":1, "loop":1 }
                  ]
                }
              }
            },
            {
              "width":96, "height":240,
              "x":0, "y":-8,
              "bgcolor":{ "_":[ "variable", "stageColor" ] }, "border":"#000",
              "states":{
                "code":{
                  "name":"Sequence",
                  "data":[
                    { "set":{ "zIndex":10 } },
                    { "subtract":16, "to":{ "_":[ "this", "x" ] }, "wait":1, "loop":1, "cycles":6 },
                    { "set":{ "zIndex":5, "x":0 }, "wait":6, "loopTo":0 }
                  ]
                }
              }
            },
            {
              "width":96, "height":240,
              "x":0, "y":-8,
              "bgcolor":{ "_":[ "variable", "nextStageColor" ] }, "border":"#000",
              "states":{
                "code":{
                  "name":"Sequence",
                  "data":[
                    { "set":{ "zIndex":5, "x":0 }, "wait":6 },
                    { "set":{ "zIndex":10 } },
                    { "subtract":16, "to":{ "_":[ "this", "x" ] }, "wait":1, "loop":1, "cycles":6 },
                    { "loopTo":0 }
                  ]
                }
              }
            },
            {
              "width":96, "height":240,
              "x":160, "y":-8,
              "bgcolor":{ "_":[ "variable", "stageColor" ] }, "border":"#000",
              "states":{
                "code":{
                  "name":"Sequence",
                  "data":[
                    { "set":{ "zIndex":10 } },
                    { "sum":16, "to":{ "_":[ "this", "x" ] }, "wait":1, "loop":1, "cycles":6 },
                    { "set":{ "zIndex":5, "x":160 }, "wait":6, "loopTo":0 }
                  ]
                }
              }
            },
            {
              "width":96, "height":240,
              "x":160, "y":-8,
              "bgcolor":{ "_":[ "variable", "nextStageColor" ] }, "border":"#000",
              "states":{
                "code":{
                  "name":"Sequence",
                  "data":[
                    { "set":{ "set":{ "x":160 }, "zIndex":5 }, "wait":6 },
                    { "set":{ "zIndex":10 } },
                    { "sum":16, "to":{ "_":[ "this", "x" ] }, "wait":1, "loop":1, "cycles":6 },
                    { "loopTo":0 }
                  ]
                }
              }
            },
            {
              "type":"message",
              "width":256, "height":24,
              "zIndex":50, "x":0, "y":184,
              "bgcolor":"#000", "color":"#dedade",
              "font":"arcade", "fontSize":8, "lineHeight":24, "textAlign":"center", "html":{ "_":[ "TRAVELLING TO CAVE ", ".", { "_":[ "variable", "cave" ] }, ".", "!" ] }
            }
          ]
        }
      ],
      "playAudio":"fall",
      "states":{
        "code":[
          { "name":"Sequence", "data":[ { "wait":225 }, { "gotoScene":"stage", "withTransition":3 } ] },
          { "name":"Execute", "data":{ "when":{ "_":[ "keyA", "isHit" ] }, "gotoScene":"stage", "withTransition":3 } }
        ]
      }
    },
    "stage":{
      "object":[
        { "set":{ "_":[ "stencil", "door" ] }, "x":120, "y":16 },
        { "set":{ "_":[ "stencil", "door" ] }, "x":120, "y":112 },
        { "set":{ "_":[ "stencil", "door" ] }, "x":120, "y":208 },
        { "set":{ "_":[ "stencil", "player" ] }, "x":120, "y":144 }
      ],
      "execute":[
        { "set":{ "backupSeed":{ "_":[ "variable", "randomSeed" ] }, "counter":32 } },
        { "as":{ "_":"variable" }, "set":{ "randomSeed":{ "_":[ "variable", "stageSeed" ] }, "stageColor":{ "_":[ "variable", "nextStageColor" ] } } },
        {
          "times":6,
          "execute":[
            {
              "as":{ "_":[ "this", "removebox" ] },
              "execute":[
                { "set":{ "y":{ "_":[ "that", "counter" ] } } },
                {
                  "times":{ "_":[ "randomNumber", [ 1, { "_":[ "variable", "holesCount" ] } ] ] },
                  "execute":[
                    {
                      "when":{ "_":[ "randomValue", [ 0, 1 ] ] },
                      "set":{ "x":{ "_":[ "randomNumber", [ 1, 9 ], "*", 8 ] } },
                      "elseExecute":{ "set":{ "x":{ "_":[ "randomNumber", [ 18, 26 ], "*", 8 ] } } }
                    },
                    { "as":{ "_":[ "this", "complexCollidesWith", { "subject":{ "_":[ "object", "wall" ] }, "all":1 } ] }, "remove":1 }
                  ]
                }
              ]
            },
            { "sum":32, "to":{ "_":[ "this", "counter" ] } }
          ]
        },
        { "as":{ "_":"variable" }, "set":{ "randomSeed":{ "_":[ "that", "backupSeed" ] } } },
        {
          "as":{ "_":[ "object", "stairslot" ] },
          "execute":{
            "when":{ "_":[ "this", "complexCollidesWith", { "subject":{ "_":[ "object", "wall" ] }, "hitbox":{ "width":8, "height":8, "x":8, "y":0 } } ] },
            "set":{ "type":"stairspawn" }
          }
        }
      ],
      "haskey":0,
      "removebox":{ "_":[ "new", { "width":40, "height":8 } ] },
      "states":[
        {
          "code":{
            "name":"Sequence",
            "data":[
              { "wait":25 },
              {
                "object":{
                  "type":"message",
                  "width":240, "height":24,
                  "zIndex":50, "x":8, "y":92,
                  "bgcolor":"#000", "color":"#f60000",
                  "font":"arcade", "fontSize":8, "lineHeight":24, "textAlign":"center", "html":{ "_":[ "CAVE ", ".", { "_":[ "variable", "cave" ] } ] }
                }
              },
              { "wait":25 },
              {
                "object":{
                  "type":"message",
                  "width":240, "height":24,
                  "zIndex":51, "x":8, "y":108,
                  "bgcolor":"#000", "color":"#dedade",
                  "font":"arcade", "fontSize":8, "lineHeight":24, "textAlign":"center", "html":"READY?"
                },
                "playAudio":"message"
              },
              { "wait":50 },
              { "as":{ "_":[ "object", "message" ] }, "remove":1 },
              { "as":{ "_":[ "object", "tostart" ] }, "set":{ "state":"play" } }
            ]
          }
        },
        {
          "name":"clear",
          "execute":[ { "as":{ "_":[ "object", "message" ] }, "remove":1 }, { "playAudio":"jump" } ],
          "code":{
            "name":"Sequence",
            "data":[
              { "_":[ "stencil", "codeFreezeGameElements" ] },
              { "wait":25 },
              {
                "object":[
                  {
                    "width":256, "height":0,
                    "zIndex":100, "x":0, "y":0,
                    "bgcolor":"#000",
                    "states":{ "code":{ "name":"Sequence", "data":{ "sum":8, "to":{ "_":[ "this", "height" ] }, "wait":2, "loop":1, "cycles":14 } } }
                  },
                  {
                    "width":256, "height":0,
                    "zIndex":100, "x":0, "y":224,
                    "bgcolor":"#000",
                    "states":{
                      "code":{
                        "name":"Sequence",
                        "data":[ { "sum":8, "to":{ "_":[ "this", "height" ] } }, { "subtract":8, "to":{ "_":[ "this", "y" ] }, "wait":2, "cycles":14, "loopTo":0 } ]
                      }
                    }
                  }
                ],
                "playAudio":"door"
              },
              { "wait":50 },
              { "gotoScene":"nextStage", "withTransition":3 }
            ]
          }
        }
      ],
      "tilemap":{
        "tileWidth":8,
        "tileHeight":8,
        "map":[
          "I------------------------------I",
          "I                              I",
          "I                              I",
          "I                              I",
          "I#############################=I",
          "I                              I",
          "I                              I",
          "I                              I",
          "I#############################=I",
          "I                              I",
          "I                              I",
          "I                              I",
          "I#############################=I",
          "I                              I",
          "I                              I",
          "I                              I",
          "I#############################=I",
          "I                              I",
          "I                              I",
          "I                              I",
          "I#############################=I",
          "I                              I",
          "I                              I",
          "I                              I",
          "I#############################=I",
          "I                              I",
          "I                              I",
          "I                              I",
          "I==============================I"
        ]
      }
    }
  }
}