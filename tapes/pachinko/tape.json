{
  "name":"Mermaid Pachinko",
  "author":"KesieV",
  "year":2018,
  "genre":"Gambling",
  "description":"<p>Some explanations are in plain sight. You've just to <i>read the patterns</i>.</p><p>In 2018 it's still hard to understand the value of <a href='https://en.wikipedia.org/wiki/Remix_culture'>remixing</a> in our society. Bad news is that's the most effective and natural way to grow and evolve pretty anything. Deal with it.</p><p>First: you can't <i>even avoid</i> to remix yourself. At least, at biological level. As sexual individuals, we perform a <a href='https://en.wikipedia.org/wiki/Genetic_recombination'>genetic reshuffling</a> every time we reproduce, in which data from our DNA is mixed with our partner's in order to create a slightly familiar but brand new version of you.</p><p>And while the idea of <i>you remixing just with yourself</i> and stop stealing others DNA data could be a pretty nice idea - why not? - it looks like nature prefer to drop this approach if possibile, mostly because remixing your parts over and over again may create just <a href='https://en.wikipedia.org/wiki/Muller%27s_ratchet'>many bad versions of you</a>. And even who <i>can't remix</i> like asexual individuals, <a href='https://en.wikipedia.org/wiki/Reproduction#Asexual_vs._sexual_reproduction'>sexual reproduction</a> may still happen as the only option to survive a harsh environment, since it ensures a mixing of the gene pool of the species, in hope to allow some individuals to be better suited for survival and provide a mechanism for selective adaptation to occur.</p><p>And that brings us to a quite obvious and thorny corollary: since you need at least <i>two entities</i> in order to do that, individualism is not an option and variety is a feature. I need an example but I'm not going to bore you with a copy/paste the whole <a href='https://en.wikipedia.org/wiki/Melting_pot'>melting pot</a> Wikipedia page and talk about the assimilation of immigrants here but, since we're talking about games... let's talk about a game!</p><p>As it happens for most of games, we still don't know where the game of <a href='https://en.wikipedia.org/wiki/Croquet'>croquet</a> was born - probably its early versions are from the 1340s - but what's sure is that one of the most important circle of players, the prestigious <i>All England Croquet Club</i>, was formed in the 1868 in Wimbledon: imagine these fine members of this exclusive private club hitting balls with an hammer-shaped bat around 12 hoops, standing on a perfect green flat grass field. It falls in that <i>england things</i> category as you're probably imagining it: Michael Hann, the honorary secretary of the 2015 club’s croquet section, <a href='https://www.nytimes.com/2015/07/06/sports/tennis/once-wimbledons-foundation-croquet-now-lives-in-its-margins.html'>said</a>: <i>\"It’s a pleasure to bring these people to the club and show them around. We play in the morning, then we have lunch in the main clubhouse, and then we play in the afternoon, we have tea, and we all go home.\"</i>. Very very english.</p><p>But while the english gentlemen were playing outdoor, in United States, Abraham Lincoln was challenging on the green field its political rival George B. McClellan. But that green field was indoor instead: they were playing a billiard-like <a href='https://en.wikipedia.org/wiki/Bagatelle'>bagatelle</a> game, pocketing balls in holes. And well - that happened on a <a href='http://www.loc.gov/pictures/item/2008661662/'>1863 political cartoon</a>, in which repubblican and democrats were politely insulting each other - you know, that <i>american things</i>.</p><p>150 years before the Lincoln/McClellan match, most of the billiard tables used to have pins to knock down instead of holes. Pins took to long to reset so they fasten them to the table and added holes. <i>Bagatelle</i> was one of these early games and it was first introduced in the most <i>french thing</i> you can imagine: in 1777, at the Chateau de Bagatelle (which means <i>little decorative nothing</i> in italian), it was thrown a party in honour of Louis XVI (one of the first billiard fanboys). Pratically a <i>foie gras</i> filled <a href='https://it.wikipedia.org/wiki/Electronic_Entertainment_Expo'>E3</a>.</p><p>In the same years and still in western europe, the bagatelle pins became metallic, the table smaller and the cue a metallic spring and a plunger: the <a href='https://en.wikipedia.org/wiki/Pinball#Late_1700s:_Spring_launcher_invented'>japanese billiard</a> was born. It looks like the <a href='https://en.wikipedia.org/wiki/Pinball'>pinball</a> grandfather but... flippers will be added to the game in 1933, nearly <i>160 years later</i>. Inexplicably, the western 1770's <i>japanese billiard</i> appeared in the far east in the 1920's, brought back its croquet ancestor's hammer and became a mainstream game till today.</p><p>It's hard to understand <a href='https://www.wikihow.com/Play-Pachinko'>why</a> these <i>japanese slot machines</i> are fun: in <a href='https://en.wikipedia.org/wiki/Pachinko'>pachinko</a> a tiny mechanical hammer fires tons of small balls from the top of a maze of pins and hoops and the player have to turn an handle in order to change the flow speed. If the balls bounces on the right spots, you win more balls. And that's all.</p><p>But who cares? In 2005 the Pachinko industry generated 34,862 billion yen ($331,189 million USD) and, despite its <a href='https://www.kenkyoinvesting.com/2018/03/30/declining-pachinko-industry-worth-bet/'>recent decline</a> the game is die hard, so it probably falls in that <i>japanese things</i> we can't understand, like the controversial <a href='https://en.wikipedia.org/wiki/Maid_caf%C3%A9'>maid cafes</a> and the ultra-complex <a href='https://en.wikipedia.org/wiki/Mahjongg'>mahjongg</a> game.</p><p>Yeah. Except that <b>it isn't</b> - it's an english thing, an american thing, a french thing and the story can go way back to <a href='https://en.wikipedia.org/wiki/Bowling'>an ancient egyptian thing</a>. Culture works like a genome you can't stop remixing: it's <i>still happening without control everywhere</i> and it's how nature does its best.</p><p>Plot!</p><p>Hey! Do you want to live the thrill of playing pachinko without - well - feeling a little weird? I've made an opensource pachinko-inspired game for you, so you can also <i>change it</i> to another game... and who knows? You'll make the next future <i>thing</i> of a country on the other side of the world!</p><p>Press the A BUTTON for starting a new game and use LEFT/RIGHT for moving the knob and changing the balls speed. Follow the instructions in the middle of the screen to gain more balls and play longer!</p>",
  "screenshots":[ "pachinko-1.png", "pachinko-2.png" ],
  "hardware":{
    "width":256,
    "height":192,
    "filter":"retro"
  },
  "audioChannels":{
    "sfx":{ "volume":1, "samples":[ "rampup", "rampdown", "beep2", "beep", "lose", "shut", "bigfire", "beep3", "open" ] },
    "bump":{ "volume":0.2, "samples":[ "fire" ] }
  },
  "cheats":{},
  "resources":{
    "knob":"knob.png",
    "levels":"levels.png",
    "panel":"panel.png",
    "spectrum":"spectrum.font",
    "sprites":"sprites.png",
    "beep":"../default/zxsounds/beep.ogg",
    "beep2":"../default/zxsounds/beep2.ogg",
    "beep3":"../default/zxsounds/beep3.ogg",
    "bigfire":"../default/zxsounds/bigfire.ogg",
    "fire":"../default/zxsounds/fire.ogg",
    "lose":"../default/zxsounds/lose.ogg",
    "open":"../default/zxsounds/open.ogg",
    "rampdown":"../default/zxsounds/rampdown.ogg",
    "rampup":"../default/zxsounds/rampup.ogg",
    "shut":"../default/zxsounds/shut.ogg"
  },
  "stencils":{
    "stageModel":{
      "object":[
        {
          "image":"knob", "width":59, "height":59,
          "zIndex":10, "x":187, "y":125,
          "states":{ "code":{ "name":"Execute", "data":{ "set":{ "angle":{ "_":[ "scene", "power", "*", 2.25 ] } } } } }
        },
        { "image":"panel", "width":256, "height":192, "x":0, "y":0 },
        {
          "type":"hud",
          "hudType":"label", "label":"%number|scene.balls|0|6%",
          "width":61, "height":10,
          "zIndex":10, "x":187, "y":24,
          "font":"spectrum", "lineHeight":10, "textAlign":"center"
        },
        {
          "type":"hud",
          "hudType":"label", "label":"%number|scene.score|0|6%",
          "width":61, "height":10,
          "zIndex":10, "x":187, "y":48,
          "font":"spectrum", "lineHeight":10, "textAlign":"center"
        },
        {
          "type":"hud",
          "hudType":"label", "label":"%number|variable.hiscore|0|6%",
          "width":61, "height":10,
          "zIndex":10, "x":187, "y":71,
          "font":"spectrum", "lineHeight":10, "textAlign":"center"
        },
        { "_":[ "stencil", "display" ] },
        { "type":"wall", "width":96, "height":3, "x":45, "y":6, "visible":0 },
        { "type":"wall", "width":3, "height":78, "x":6, "y":36, "visible":0 },
        { "type":"wall", "width":3, "height":78, "x":177, "y":36, "visible":0 }
      ],
      "execute":[
        { "set":{ "challengeIndex":{ "_":[ "new", [ 0 ] ] }, "counter":0 } },
        {
          "times":{ "_":[ "stencil", "dataChallenges", "count" ] },
          "execute":[ { "as":{ "_":[ "this", "counter" ] }, "pushInto":{ "_":[ "that", "challengeIndex" ] } }, { "sum":1, "to":{ "_":[ "this", "counter" ] } } ]
        }
      ],
      "balls":0,
      "bumperHits":0,
      "levelId":0,
      "power":20,
      "score":0,
      "states":{
        "execute":{ "set":{ "width":256, "height":192 } },
        "code":[
          {
            "name":"Sequence",
            "data":[
              {
                "when":{ "_":[ "this", "balls" ] },
                "execute":{
                  "when":{ "_":[ "object", "balls", "count", "isLessThan", 30 ] },
                  "execute":[ { "object":{ "_":[ "stencil", "." ] }, "playAudio":"fire" }, { "subtract":1, "to":{ "_":[ "this", "balls" ] } } ]
                }
              },
              { "wait":5, "loopTo":0 }
            ]
          },
          {
            "name":"Execute",
            "data":[
              { "when":{ "_":[ "keyRight", "isDown" ] }, "sum":1, "to":{ "_":[ "this", "power" ] } },
              { "when":{ "_":[ "keyLeft", "isDown" ] }, "subtract":1, "to":{ "_":[ "this", "power" ] } },
              { "set":{ "power":{ "_":[ "this", "power", "limitValue", [ 0, 40 ] ] } } }
            ]
          }
        ]
      }
    },
    "bumper":{
      "image":"sprites", "tileY":15,
      "zIndex":5,
      "states":{
        "execute":[
          { "set":{ "center":{ "_":[ "new", { "width":3, "height":3 } ] } } },
          { "as":{ "_":[ "this", "center" ] }, "set":{ "x":{ "_":[ "that", "x", "+", 3 ] }, "y":{ "_":[ "that", "y", "+", 3 ] } } }
        ],
        "code":{
          "name":"Execute",
          "data":[
            { "set":{ "frame":0 } },
            {
              "when":{ "_":[ "this", "complexCollidesWith", { "subject":{ "_":[ "object", "ball" ] }, "all":1 } ] },
              "execute":{
                "as":{ "_":"that" },
                "execute":{
                  "when":{ "_":[ "this", "distanceTo", { "_":[ "that", "center" ] }, "isLessThan", 6 ] },
                  "execute":[
                    { "sum":1, "to":{ "_":[ "scene", "bumperHits" ] } },
                    { "sum":1, "to":{ "_":[ "scene", "score" ] } },
                    {
                      "applyVector":{ "angle":{ "_":[ "that", "center", "angleTo", { "_":"this" }, "+", { "_":[ "randomNumber", [ -3, 3 ] ] } ] }, "length":5 },
                      "playAudio":"beep"
                    },
                    { "as":{ "_":"that" }, "set":{ "frame":1 } }
                  ]
                }
              }
            }
          ]
        }
      }
    },
    "challengeLabel":{
      "type":"challengelabel",
      "width":99, "height":60,
      "zIndex":5, "y":100,
      "font":"spectrum", "fontSize":20, "lineHeight":20, "outline":"#000", "textAlign":"center",
      "timer":0,
      "states":[
        {
          "code":{
            "name":"Execute",
            "data":[
              { "when":{ "_":[ "this", "y" ] }, "subtract":4, "to":{ "_":[ "this", "y" ] } },
              {
                "when":{ "_":[ "this", "timer" ] },
                "subtract":1,
                "to":{ "_":[ "this", "timer" ] },
                "elseExecute":{ "set":{ "color":{ "_":[ "randomValue", [ "#f00", "#0f0", "#00f", "#ff0", "#0ff", "#f0f" ] ] }, "timer":10 } }
              }
            ]
          }
        },
        {
          "name":"leave",
          "code":{
            "name":"Execute",
            "data":{ "when":{ "_":[ "this", "y", "isGreaterThan", -100 ] }, "subtract":4, "to":{ "_":[ "this", "y" ] }, "elseExecute":{ "remove":1 } }
          }
        }
      ]
    },
    "checkTable":{
      "when":{ "_":[ "objectTyped", "targetup", "not" ] },
      "execute":[
        { "sum":{ "_":[ "object", "targetdown", "count", "*", 2 ] }, "to":{ "_":[ "stage", "score" ] } },
        { "as":{ "_":[ "object", "target" ] }, "set":{ "state":"targetup" } }
      ]
    },
    "dataChallenges":[
      {
        "checkSuccess":{ "when":{ "_":[ "objectTyped", "targetup", "not" ] }, "set":{ "success":1 } },
        "prepareChallenge":[ { "as":{ "_":[ "object", "target" ] }, "set":{ "state":"targetup" } }, { "set":{ "label":"HIT<br>ALL<br>TARGETS" } } ]
      },
      {
        "checkSuccess":{ "when":{ "_":[ "objectTyped", { "_":[ "this", "fillerType" ] }, "level", "isEqualTo", 9 ] }, "set":{ "success":1 } },
        "prepareChallenge":[
          { "set":{ "fillerId":{ "_":[ "randomNumber", [ 1, 6 ] ] } } },
          { "set":{ "fillerType":{ "_":[ "filler", ".", { "_":[ "this", "fillerId" ] } ] } } },
          { "as":{ "_":[ "objectTyped", { "_":[ "this", "fillerType" ] } ] }, "set":{ "level":0 } },
          { "set":{ "label":{ "_":[ "FILL<br>LIGHT<br>", ".", { "_":[ "this", "fillerId" ] } ] } } }
        ]
      },
      {
        "checkSuccess":{ "when":{ "_":[ "scene", "bumperHits", "isGreaterEqualThan", { "_":[ "this", "bumperHits" ] } ] }, "set":{ "success":1 } },
        "prepareChallenge":[
          { "set":{ "bumperHits":{ "_":[ "randomNumber", [ 2, 5 ], "*", 5 ] } } },
          { "as":{ "_":"scene" }, "set":{ "bumperHits":0 } },
          { "set":{ "label":{ "_":[ "HIT<br>BUMPERS<br>", ".", { "_":[ "this", "bumperHits" ] }, ".", " TIMES" ] } } }
        ]
      }
    ],
    "dataLevels":[
      { "balls":15, "bonus":10, "time":875 },
      { "balls":15, "bonus":20, "time":425 },
      { "balls":15, "bonus":40, "time":425 },
      { "balls":15, "bonus":80, "time":425 },
      { "balls":40, "bonus":160, "time":425 },
      { "balls":40, "bonus":320, "time":275 },
      { "balls":40, "bonus":640, "time":275 },
      { "balls":40, "bonus":1280, "time":275 },
      { "balls":40, "bonus":2560, "time":125 },
      { "balls":40, "bonus":5120, "time":125 },
      { "balls":90, "bonus":10240, "time":50 }
    ],
    "display":{
      "width":99, "height":60,
      "zIndex":5, "x":42, "y":60,
      "execute":{
        "object":[
          { "type":"level", "image":"levels", "width":25, "height":25, "zIndex":3, "x":73, "y":34, "lineHeight":25 },
          { "type":"timer", "height":60, "x":0, "y":0, "bgcolor":"#7f007f" }
        ],
        "into":{ "_":"this" }
      },
      "state":"idle",
      "states":[
        {
          "name":"play",
          "code":{
            "name":"Sequence",
            "data":[
              {
                "when":{ "_":[ "stencil", "dataChallenges", { "_":[ "scene", "challengeId" ] }, "not" ] },
                "as":{ "_":"scene" },
                "shuffle":{ "_":[ "scene", "challengeIndex" ] },
                "set":{ "challengeId":0 }
              },
              { "set":{ "level":{ "_":[ "stencil", "dataLevels", { "_":[ "scene", "levelId" ] } ] } } },
              {
                "set":{
                  "challenge":{ "_":[ "stencil", "dataChallenges", { "_":[ "scene", "challengeIndex", { "_":[ "scene", "challengeId" ] } ] } ] },
                  "timer":{ "_":[ "this", "level", "time" ] }
                }
              },
              { "as":{ "_":[ "objectTyped", "level" ] }, "set":{ "frame":{ "_":[ "scene", "levelId" ] } } },
              { "_":[ "this", "challenge", "prepareChallenge" ] },
              { "object":{ "set":{ "_":[ "stencil", "challengeLabel" ] }, "html":{ "_":[ "that", "label" ] } }, "into":{ "_":"this" } },
              { "wait":25 },
              { "playAudio":"open" },
              { "wait":1 },
              { "set":{ "lost":0, "success":0 } },
              { "_":[ "this", "challenge", "checkSuccess" ] },
              {
                "when":{ "_":[ "this", "success" ] },
                "set":{ "state":"success" },
                "elseExecute":{
                  "when":{ "_":[ "this", "fail" ] },
                  "set":{ "state":"fail" },
                  "elseExecute":[
                    { "subtract":1, "to":{ "_":[ "this", "timer" ] } },
                    {
                      "as":{ "_":[ "objectTyped", "timer" ] },
                      "set":{ "width":{ "_":[ "that", "timer", "/", { "_":[ "that", "level", "time" ] }, "*", 100, "floor" ] } }
                    }
                  ]
                }
              },
              { "when":{ "_":[ "objectTyped", "ball", "not", "and", { "_":[ "scene", "balls", "not" ] } ] }, "set":{ "state":"gameover" } },
              { "_":[ "stencil", "checkTable" ] },
              { "loopTo":-6, "until":{ "_":[ "this", "timer", "not" ] } },
              { "set":{ "state":"fail" } }
            ]
          }
        },
        {
          "name":"success",
          "code":{
            "name":"Sequence",
            "data":[
              {
                "object":{
                  "set":{ "_":[ "stencil", "displayMessageModel" ] },
                  "angle":-30,
                  "color":"#f00",
                  "html":"DONE!",
                  "states":{
                    "code":{ "name":"Sequence", "data":[ { "set":{ "visible":1 }, "playAudio":"rampup", "wait":1 }, { "set":{ "visible":0 }, "wait":1, "loopTo":0 } ] }
                  }
                },
                "into":{ "_":"this" }
              },
              { "wait":25 },
              { "as":{ "_":[ "object", "displaymessage" ] }, "remove":1 },
              { "as":{ "_":[ "object", "challengelabel" ] }, "set":{ "state":"leave" } },
              { "object":{ "set":{ "_":[ "stencil", "displayMessageModel" ] }, "color":"#0ff" }, "into":{ "_":"this" } },
              { "set":{ "bonus":{ "_":[ "this", "level", "balls" ] } } },
              { "set":{ "bonusslice":{ "_":[ "this", "bonus", "/", 10, "ceil" ] } }, "playAudio":"beep3" },
              { "sum":{ "_":[ "this", "bonusslice" ] }, "to":{ "_":[ "scene", "balls" ] } },
              { "sum":{ "_":[ "this", "bonusslice" ] }, "to":{ "_":[ "scene", "score" ] } },
              { "subtract":{ "_":[ "this", "bonusslice" ] }, "to":{ "_":[ "this", "bonus" ] } },
              { "as":{ "_":[ "objectTyped", "displaymessage" ] }, "set":{ "html":{ "_":[ "", ".", "+", ".", { "_":[ "that", "bonus" ] } ] } } },
              { "wait":2, "loopTo":-5, "until":{ "_":[ "this", "bonus", "not" ] } },
              { "wait":25 },
              { "as":{ "_":[ "object", "displaymessage" ] }, "remove":1 },
              { "sum":1, "to":{ "_":[ "scene", "challengeId" ] } },
              {
                "when":{ "_":[ "stencil", "dataLevels", { "_":[ "scene", "levelId", "+", 1 ] } ] },
                "subsequence":[
                  { "sum":1, "to":{ "_":[ "scene", "levelId" ] } },
                  {
                    "object":{
                      "set":{ "_":[ "stencil", "displayMessageModel" ] },
                      "lineHeight":30, "html":"LEVEL<br>UP",
                      "code":"#ff0",
                      "states":{
                        "code":{ "name":"Sequence", "data":[ { "set":{ "visible":1 }, "playAudio":"bigfire", "wait":1 }, { "set":{ "visible":0 }, "wait":1, "loopTo":0 } ] }
                      }
                    },
                    "into":{ "_":"this" }
                  },
                  { "wait":25 },
                  { "as":{ "_":[ "object", "displaymessage" ] }, "remove":1 }
                ]
              },
              { "set":{ "state":"play" } }
            ]
          }
        },
        {
          "name":"fail",
          "code":{
            "name":"Sequence",
            "data":[
              {
                "object":{
                  "set":{ "_":[ "stencil", "displayMessageModel" ] },
                  "angle":-30,
                  "color":"#f0f",
                  "html":"FAIL!",
                  "states":{ "code":{ "name":"Sequence", "data":{ "set":{ "visible":{ "_":[ "this", "visible", "not" ] } }, "wait":1, "loop":1 } } }
                },
                "into":{ "_":"this" },
                "playAudio":"rampdown"
              },
              { "wait":25 },
              { "as":{ "_":[ "object", "displaymessage" ] }, "remove":1 },
              { "as":{ "_":[ "object", "challengelabel" ] }, "set":{ "state":"leave" } },
              { "when":{ "_":[ "stencil", "dataLevels", { "_":[ "scene", "levelId", "-", 1 ] } ] }, "subtract":1, "to":{ "_":[ "scene", "levelId" ] } },
              {
                "object":{
                  "set":{ "_":[ "stencil", "displayMessageModel" ] },
                  "color":"#f0f",
                  "lineHeight":30, "html":"LEVEL<br>DOWN",
                  "states":{ "code":{ "name":"Sequence", "data":[ { "set":{ "visible":1 }, "playAudio":"lose", "wait":1 }, { "set":{ "visible":0 }, "wait":1, "loopTo":0 } ] } }
                },
                "into":{ "_":"this" }
              },
              { "wait":25 },
              { "as":{ "_":[ "object", "displaymessage" ] }, "remove":1 },
              { "set":{ "state":"play" } }
            ]
          }
        },
        {
          "name":"gameover",
          "code":{
            "name":"Sequence",
            "data":[
              { "publishScore":{ "_":[ "scene", "score" ] } },
              { "as":{ "_":[ "object", "challengelabel" ] }, "set":{ "state":"leave" }, "playAudio":"shut" },
              {
                "when":{ "_":[ "scene", "score", "isGreaterThan", { "_":[ "variable", "hiscore" ] } ] },
                "execute":[
                  {
                    "object":{
                      "type":"idlemessage",
                      "width":99, "height":10,
                      "zIndex":100, "x":0, "y":45,
                      "color":"#fff",
                      "font":"spectrum", "lineHeight":10, "textAlign":"center", "html":"HIGH SCORE!",
                      "states":{ "code":{ "name":"Sequence", "data":[ { "set":{ "outline":"#f00" }, "wait":1 }, { "set":{ "outline":"#00f" }, "wait":1, "loopTo":0 } ] } }
                    },
                    "into":{ "_":"this" }
                  },
                  { "as":{ "_":"variable" }, "set":{ "hiscore":{ "_":[ "scene", "score" ] } } },
                  { "as":{ "_":"storage" }, "set":{ "hiscore":{ "_":[ "scene", "score" ] } } }
                ]
              },
              { "set":{ "state":"idle" } }
            ]
          }
        },
        {
          "name":"idle",
          "code":[
            {
              "name":"Sequence",
              "data":[
                { "object":{ "type":"idlemessage", "set":{ "_":[ "stencil", "displayMessageModel" ] }, "code":"#f0f" }, "into":{ "_":"this" } },
                { "as":{ "_":[ "objectTyped", "displaymessage" ] }, "set":{ "color":"#f0f", "html":"GAME" }, "wait":25 },
                { "as":{ "_":[ "objectTyped", "displaymessage" ] }, "set":{ "color":"#f0f", "html":"OVER" }, "wait":25 },
                { "as":{ "_":[ "objectTyped", "displaymessage" ] }, "set":{ "color":"#0ff", "html":"PRESS" }, "wait":25 },
                { "as":{ "_":[ "objectTyped", "displaymessage" ] }, "set":{ "color":"#0ff", "html":"START" }, "wait":25, "loopTo":-4 }
              ]
            },
            { "name":"Execute", "data":{ "when":{ "_":[ "keyA", "isHit" ] }, "set":{ "state":"start" } } }
          ]
        },
        {
          "name":"start",
          "execute":[
            { "as":{ "_":[ "object", "displaymessage" ] }, "remove":1 },
            { "as":{ "_":[ "object", "idlemessage" ] }, "remove":1 },
            { "as":{ "_":[ "objectTyped", "timer" ] }, "set":{ "width":0 } },
            { "as":{ "_":[ "objectTyped", "level" ] }, "set":{ "html":"" } },
            { "as":{ "_":[ "object", "filler" ] }, "set":{ "level":0 } },
            { "as":{ "_":[ "object", "target" ] }, "set":{ "state":"targetup" } },
            { "as":{ "_":"scene" }, "set":{ "challengeId":-10, "levelId":0, "score":0, "timer":0 } }
          ],
          "code":{
            "name":"Sequence",
            "data":[
              {
                "object":{
                  "set":{ "_":[ "stencil", "displayMessageModel" ] },
                  "lineHeight":30, "html":"GET<br>READY",
                  "code":"#0ff",
                  "states":{ "code":{ "name":"Sequence", "data":[ { "set":{ "visible":1 }, "playAudio":"beep3", "wait":1 }, { "set":{ "visible":0 }, "wait":1, "loopTo":0 } ] } }
                },
                "into":{ "_":"this" }
              },
              { "wait":25 },
              { "as":{ "_":[ "object", "displaymessage" ] }, "remove":1 },
              { "as":{ "_":"scene" }, "set":{ "balls":150 } },
              { "set":{ "state":"play" } }
            ]
          }
        }
      ]
    },
    "displayMessageModel":{
      "type":"displaymessage",
      "width":99, "height":60,
      "zIndex":50, "x":0, "y":0,
      "font":"spectrum", "fontSize":40, "lineHeight":60, "outline":"#000", "textAlign":"center"
    },
    "filler":{
      "type":"filler",
      "image":"sprites", "tileY":3, "width":12, "height":12,
      "font":"spectrum", "lineHeight":12, "textAlign":"center",
      "animations":{ "blink":{ "frames":[ 9, 10 ], "speed":0, "loopTo":0 } },
      "zIndex":5,
      "level":0,
      "timer":0,
      "states":{
        "execute":{ "set":{ "type":{ "_":[ "filler", ".", { "_":[ "this", "fillerId" ] } ] }, "html":{ "_":[ "this", "fillerId" ] } } },
        "code":{
          "name":"Execute",
          "data":{
            "when":{ "_":[ "this", "timer" ] },
            "execute":[
              { "subtract":1, "to":{ "_":[ "this", "timer" ] } },
              { "when":{ "_":[ "this", "hit", "not" ] }, "set":{ "hit":{ "_":[ "this", "collidesWith", { "_":[ "object", "ball" ] } ] } } }
            ],
            "elseExecute":[
              {
                "when":{ "_":[ "this", "hit" ] },
                "execute":[ { "sum":{ "_":[ "this", "level" ] }, "to":{ "_":[ "scene", "score" ] } }, { "sum":1, "to":{ "_":[ "this", "level" ] } } ],
                "elseExecute":{ "subtract":1, "to":{ "_":[ "this", "level" ] } }
              },
              { "set":{ "level":{ "_":[ "this", "level", "limitValue", [ 0, 9 ] ] } } },
              {
                "when":{ "_":[ "this", "level", "isEqualTo", 9 ] },
                "set":{ "animation":"blink" },
                "elseExecute":{ "set":{ "frame":{ "_":[ "this", "level" ] }, "animation":0 } }
              },
              { "set":{ "hit":0, "timer":10 } }
            ]
          }
        }
      }
    },
    "target":{
      "type":"target",
      "width":9, "height":3,
      "zIndex":100,
      "bgcolor":"#f00",
      "state":"targetup",
      "states":[
        {
          "name":"targetup",
          "set":{ "type":[ "hitable", "targetup" ], "removeType":"targetdown", "visible":1 },
          "actions":{
            "name":"hit",
            "execute":[
              { "sum":{ "_":[ "object", "targetdown", "count", "+", 1 ] }, "to":{ "_":[ "scene", "score" ] } },
              { "set":{ "state":"targetdown" }, "playAudio":"beep2" }
            ]
          }
        },
        { "name":"targetdown", "set":{ "type":"targetdown", "removeType":[ "targetup", "hitable" ], "visible":0 } }
      ]
    },
    "#":{ "type":"wall", "width":3, "height":3, "visible":0 },
    ".":{
      "image":"sprites", "width":3, "height":3,
      "zIndex":200,
      "forceX":0,
      "radius":50,
      "timer":3.14,
      "states":[
        {
          "code":{
            "name":"Execute",
            "data":{
              "when":{ "_":[ "this", "timer", "isLessThan", 4.71 ] },
              "execute":[
                {
                  "set":{
                    "x":{ "_":[ "this", "timer", "cos", "*", { "_":[ "this", "radius" ] }, "+", 34 ] }, "y":{ "_":[ "this", "timer", "sin", "*", { "_":[ "this", "radius" ] }, "+", 68 ] }
                  }
                },
                { "sum":0.1, "to":{ "_":[ "this", "timer" ] } }
              ],
              "elseExecute":{
                "set":{
                  "forceX":{ "_":[ "randomNumber", [ 0, 10 ], "+", { "_":[ "scene", "power" ] }, "/", 10 ] }, "forceY":{ "_":[ "randomNumber", [ -10, 1 ], "/", 10 ] },
                  "state":"fall"
                }
              }
            }
          }
        },
        {
          "name":"fall",
          "set":{ "type":"ball", "collideTimer":0 },
          "code":[
            {
              "name":"Execute",
              "data":[
                { "when":{ "_":[ "this", "y", "isGreaterThan", 192 ] }, "remove":1, "playAudio":"fire" },
                {
                  "when":{ "_":[ "this", "collideTimer" ] },
                  "subtract":1,
                  "to":{ "_":[ "this", "collideTimer" ] },
                  "elseExecute":[
                    {
                      "when":{ "_":[ "this", "complexCollidesWith", { "subject":{ "_":[ "object", "ball" ] }, "notThis":1 } ] },
                      "execute":[
                        { "set":{ "swpX":{ "_":[ "this", "forceX", "*", 1.1 ] }, "swpY":{ "_":[ "this", "forceY", "*", 1.1 ] } } },
                        { "set":{ "forceX":{ "_":[ "that", "forceX", "*", 1.1 ] } } },
                        { "as":{ "_":"that" }, "set":{ "forceX":{ "_":[ "that", "swpX" ] }, "forceY":{ "_":[ "that", "swpY" ] } } }
                      ]
                    },
                    { "set":{ "collideTimer":5 } }
                  ]
                }
              ]
            },
            {
              "name":"Physics",
              "data":{
                "walls":[
                  {
                    "type":"pin",
                    "firstExecute":{
                      "when":{ "_":[ "this", "forceX", "abs", "isLessThan", 2 ] },
                      "execute":[
                        { "set":{ "y":{ "_":[ "that", "y", "-", 1 ] }, "forceX":{ "_":[ "this", "forceX", "*", 0.5 ] }, "forceY":{ "_":[ "this", "forceY", "*", 0.95 ] } } },
                        {
                          "when":{ "_":[ "randomValue", [ 0, 1 ] ] },
                          "set":{ "x":{ "_":[ "that", "x", "-", 3 ] } },
                          "elseExecute":{ "set":{ "x":{ "_":[ "that", "x", "+", 3 ] } } }
                        }
                      ],
                      "elseExecute":[
                        {
                        "when":{"_":["this","touchLeft","or",{"_":["this","touchRight"]}]},
                        "set":{"forceX":{"_":["this","forceX","*",-0.95]}}
                      },
                      {
                        "when":{"_":["this","touchUp","or",{"_":["this","touchDown"]}]},
                        "set":{"forceY":{"_":["this","forceY","*",-0.95]}}
                      }
                    ]
                    }
                  },
                  { "type":"wall", "restitutionX":1, "restitutionY":1 },
                  { "type":"hitable", "restitutionX":1, "restitutionY":1, "execute":{ "as":{ "_":"that" }, "executeAction":"hit" } },
                  {
                    "type":"slope",
                    "execute":{
                      "when":{
                        "_":[
                          { "_":[ "this", "forceX", "isLessThan", 0.5 ] },
                          "and",
                          { "_":[ "this", "forceX", "isGreaterThan", -0.5 ] },
                          "and",
                          { "_":[ "this", "forceY", "isLessThan", 0.5 ] },
                          "and",
                          { "_":[ "this", "forceY", "isGreaterThan", -0.5 ] }
                        ]
                      },
                      "set":{ "forceX":{ "_":[ "that", "pendence" ] } },
                      "elseExecute":[
                        { "set":{ "oX":{ "_":[ "this", "forceX" ] }, "oY":{ "_":[ "this", "forceY" ] } } },
                        { "set":{ "forceX":{ "_":[ "this", "oY", "*", { "_":[ "that", "mulX" ] } ] }, "forceY":{ "_":[ "this", "oX", "*", { "_":[ "that", "mulY" ] } ] } } }
                      ]
                    }
                  }
                ],
                "gravityY":0.1,
                "limitX":[ -4, 4 ],
                "limitY":[ -4, 4 ]
              }
            }
          ]
        }
      ]
    },
    "J":{ "type":"slope", "width":3, "height":3, "visible":0, "mulX":-0.9, "mulY":0.9, "pendence":-0.5 },
    "L":{ "type":"slope", "width":3, "height":3, "visible":0, "mulX":0.9, "mulY":0.9, "pendence":0.5 },
    "O":{ "type":"pin", "image":"sprites", "tileX":3, "tileY":0, "width":3, "height":3, "zIndex":100 },
    "P":{ "type":"slope", "width":3, "height":3, "visible":0, "mulX":0.9, "mulY":0.9, "pendence":0.5 },
    "T":{ "type":"slope", "width":3, "height":3, "visible":0, "mulX":-0.9, "mulY":0.9, "pendence":-0.5 }
  },
  "execute":[
    { "when":{ "_":[ "storage", "hiscore", "not" ] }, "as":{ "_":"storage" }, "set":{ "hiscore":0 } },
    { "as":{ "_":"variable" }, "set":{ "hiscore":{ "_":[ "storage", "hiscore" ] } } }
  ],
  "scenes":{
    "intro":{
      "object":[
        { "set":{ "_":[ "stencil", "target" ] }, "width":9, "height":3, "x":51, "y":135 },
        { "set":{ "_":[ "stencil", "target" ] }, "width":9, "height":3, "x":126, "y":135 },
        { "set":{ "_":[ "stencil", "target" ] }, "width":9, "height":3, "x":33, "y":51 },
        { "set":{ "_":[ "stencil", "filler" ] }, "width":12, "height":12, "x":24, "y":102, "fillerId":6 },
        { "set":{ "_":[ "stencil", "filler" ] }, "width":12, "height":12, "x":104, "y":31, "fillerId":2 },
        { "set":{ "_":[ "stencil", "filler" ] }, "width":12, "height":12, "x":67, "y":31, "fillerId":1 },
        { "set":{ "_":[ "stencil", "filler" ] }, "width":12, "height":12, "x":147, "y":102, "fillerId":3 },
        { "set":{ "_":[ "stencil", "filler" ] }, "width":12, "height":12, "x":69, "y":156, "fillerId":5 },
        { "set":{ "_":[ "stencil", "filler" ] }, "width":12, "height":12, "x":105, "y":156, "fillerId":4 },
        { "set":{ "_":[ "stencil", "bumper" ] }, "width":12, "height":12, "x":36, "y":144, "fillerId":3 },
        { "set":{ "_":[ "stencil", "bumper" ] }, "width":12, "height":12, "x":138, "y":144, "fillerId":3 },
        { "set":{ "_":[ "stencil", "bumper" ] }, "width":12, "height":12, "x":165, "y":66, "fillerId":3 },
        { "set":{ "_":[ "stencil", "bumper" ] }, "width":12, "height":12, "x":9, "y":69, "fillerId":3 },
        { "set":{ "_":[ "stencil", "target" ] }, "width":9, "height":3, "x":88, "y":147 },
        { "set":{ "_":[ "stencil", "target" ] }, "width":9, "height":3, "x":147, "y":51 }
      ],
      "set":{ "_":[ "stencil", "stageModel" ] },
      "tilemap":{
        "tileWidth":3,
        "tileHeight":3,
        "map":[
          "                                                                                     ",
          "            ###                                ###                                   ",
          "         ###                                      ###                                ",
          "        #   PPP                                TTT   #                               ",
          "      ## PPP                                      TTT ##                             ",
          "     #  P                                            T  #                            ",
          "    # PP                                              TT #                           ",
          "   # P                                                  T #                          ",
          "  # P                                                    T #                         ",
          " # #                                                      # #                        ",
          " # #                                                      # #                        ",
          " # P                          O                           T #                        ",
          "                  O         O   O         O                                          ",
          "                O   O         O         O   O                                        ",
          "                  O         O   O         O                                          ",
          "                O   O         O         O   O                                        ",
          "                  O                       O                                          ",
          "                                                                                     ",
          "                                                                                     ",
          "                                                                                     ",
          "                                                                                     ",
          "                                                                                     ",
          "            O                                   O                                    ",
          "                                                                                     ",
          "           O                                     O                                   ",
          "                                                                                     ",
          "          O O                                   O O                                  ",
          "                                                                                     ",
          "       O O O                                     O O O                               ",
          "                                                                                     ",
          "      O O O O                                   O O O O                              ",
          "                                                                                     ",
          "     O O O O                                     O O O O                             ",
          "                                                                                     ",
          "      O     O                                         O                              ",
          "                                                                                     ",
          "     O                                                 O                             ",
          "                                                                                     ",
          " # L  O     O                                   O     O   J #                        ",
          " # #                                                      # #                        ",
          " # #   O O O                                     O O O    # #                        ",
          "  # L                                                    J #                         ",
          "  # #   O O O        O O O O O  O O O O O       O O O    # #                         ",
          "  # #                                                    # #                         ",
          "   # L   O            O O O        O O O                J #                          ",
          "   # #                                                  # #                          ",
          "    # L                O O          O O                J #                           ",
          "    # #                                                # #                           ",
          "     # L                                              J #                            ",
          "     # #                                              # #                            ",
          "      # L          O                      O          J #                             ",
          "       # L       O   O                  O   O       J #                              ",
          "        # L        O                      O        J #                               ",
          "         # L     O   O                  O   O     J #                                ",
          "          # L      O                      O      J #                                 ",
          "           # LL                                JJ #                                  ",
          "            #  L                              J  #                                   ",
          "             ## LL                          JJ ##                                    ",
          "               #  LL                      JJ  #                                      ",
          "                ##  LLL                JJJ  ##                                       ",
          "                  ##   LLLL        JJJJ   ##                                         ",
          "                    ###   #        #   ###                                           ",
          "                       ####        ####                                              ",
          "                          #        #                                                 "
        ]
      }
    }
  }
}