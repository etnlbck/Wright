{
  "name":"Tank You!",
  "author":"KesieV",
  "year":2016,
  "genre":"Shoot'em Up",
  "description":"<p>Mi &egrave; capitato qualche volta di paragonare l'affetto a un titolo in borsa: ci investi, spesso rischi e a volte perdi o incassi.</p><p>Continuando questa similitudine, secondo voi dove finiscono gli amici che ti chiamavano ogni pomeriggio per giocare, ti scrivevano dopo le vacanze estive e ascoltavano le tue confidenze quando eri triste una volta che finiscono sul lastrico?</p><p>Conosco chi ha valutato che il resto della vita non fosse sufficiente a colmare il debito e ha deciso di togliersi la vita. Conosco chi ha deciso di rifarsi con la truffa ed &egrave; diventato uno yes men pieno di ambizioni. Conosco chi si &egrave; rifugiato nell'illusione che il caso crudele avesse voluto insegnargli qualcosa ed &egrave; sprofondato nel tunnel dell'eterno dubbio di s&egrave;.</p><p>Scoprii una sera di ritorno a casa, ormai molti anni fa, di essere tra questi ultimi. Sentii nettamente che una parte importante di me aveva deciso che era ora di fare economia d'affetto: nonostante portassi in petto un profondo, seppur acerbo, dolore e lo avessi condiviso con molte persone care, ero da solo, al volante e in lacrime.</p><p>Ahim&egrave; quello sfortunato momento arriv&ograve; a ridosso dell'inizio dell'et&agrave; adulta e l'aspro cinismo che lo caratterizza diede il via a un grottesco circolo vizioso. Le maschere che zompettano nel teatro della vita sollazzavano il mio nuovo corpulento e viscido senso critico: arrampicatori, bugiardi 'a fin di bene', amici con gli interessi, geni incompresi, maschilisti, idealisti, vincitori a tutti i costi s'agitavano sul palco, quasi per compiacerlo. 'Te l'avevo detto!', mi sussurrava sorridente da dentro la sua cupa nuvola di tabacco.</p><p>Nonostante i tanti anni passati insieme non sono mai riuscito a fidarmi davvero di lui. Come potevo? Aveva ragione, certo, perch&egrave; predicava l'opposto di ci&ograve; che mi aveva ferito. Ma poteva bastare? Ha davvero senso logico? E poi chi era? Come aveva fatto a prendere il controllo? E, sopratutto, perch&egrave; era l&igrave;? Rispose ai miei dubbi con una risata catarrosa. Mastic&ograve; qualcosa rumorosamente, mi gett&ograve; un'occhiata distratta dai suoi occhi minuscoli e poi scocciato: 'Non crederti speciale, giovanotto.' - disse sistemandosi il mocassino vecchio sui piedi - 'Sono l'unico che pensa a te qui dentro.' Come dargli torto? 'L&agrave; dentro' eravamo solo io e lui.</p><p>Ma la sua stoccata accese un pensiero: se non sono l'unico ad ospitare qualcun altro, allora chi c'era dentro le altre persone? Conoscevo persone che amavano l'orrore e la paura, credevano nei miraggi e vivevano guidati da decine di sistemi morali troppo diversi tra loro. Se sono cos&igrave; differenti da me e tra loro, quanto saranno diversi i loro ospiti?</p><p>Avevo la forte sensazione di aver scoperto che dall'intimo senso di giusto e sbagliato nascesse in tutti, a un certo punto, una persona diversa al loro interno, selvaggia, nascosta, grottesca, imperfetta ma sempre sincera, alla quale prestare attenzione di tanto in tanto. Lui mi ascolt&ograve; pulendosi le unghie, ma era apatico di natura e non fece eccezioni neanche questa volta. Non capiva il mio entusiasmo, non capiva perch&egrave; mi ostinassi a cercare prove dell'esistenza di un mondo chiaramente inventato di sana pianta e che avevo romanzato per farmelo piacere.</p><p>Da quel giorno ho iniziato ad ascoltarvi in silenzio. Lascio fluire ci&ograve; che dite, pensate e fate in me, affinch&egrave; possa vedervi con i miei occhi. Interpreto i vostri sguardi, le vostre mani e i vostri gesti e, fissandovi, immagino chi vi abita.</p><p>A volte lo vedo nella veranda di un ristorante in riva al mare, pieno di sogni. Lo vedo che sputa sul marciapiede, mentre ripete come un disco rotto ci&ograve; che realmente conta nella vita dall'alto della sua esperienza. Lo vedo a bordo di una nave scossa dalla tempesta delle opinioni, come un mozzo impaurito rimasto solo sul ponte guidato da un capitano muto.</p><p>Non siete voi, mi raccomando, e nemmeno come vi immagino. Non &egrave; nemmeno l'opinione che ho di voi o un mio preconcetto materializzato. E' quella persona che intravvedo in voi. A volte &egrave; peggiore di come cercate di apparire e vedo nei vostri cambi di tono la mia stessa lotta interna. A volte siete cinici e amari ma, non appena mostrate il fianco, dietro di voi appare una persona migliore. Lascio che ognuno di loro, che siate conoscenti di lunga data o distratti in fondo alla carrozza del mio stesso treno, si unisca al mio altro me stesso, presuntuoso e infastidito, perch&egrave; io non possa sentire il suo masticare nervoso.</p><p>Ed ora &egrave; un costante coro cacofonico di voci contrastanti a tenermi compagnia, che dicono tutto e l'opposto, che ascolto, valuto e uso per sopravvivere. Ogni tanto il mio caro vecchio amico ciccione fa la voce grossa e non posso ignorarlo perch&egrave;, tutto sommato, &egrave; parte di me prima di tutti gli altri - e mi ritrovo a ciondolare con la faccia scura.</p><p>Ma in questo caos, a volte, riesco ancora a sentirvi come succedeva una volta. Pu&ograve; essere una persona che amo, quel tizio conosciuto sul treno o una qualcuno in chat col quale scambio due battute.</p><p>Ed a loro dedico questo prezioso grazie, che d&agrave; quel goffo titolo a questo gioco: <a href='https://en.wikipedia.org/wiki/Battle_City_(video_game)'>Battle City</a> (1985) - da noi chiamato semplicemente <a href='https://it.wikipedia.org/wiki/Battle_City'>Tank</a> - &egrave; un gioco che, in tempi non sospetti, era gi&agrave; uno shooter con ambienti distruggibili, multiplayer e che supportava le mappe create dagli utenti gi&agrave; su NES. Insomma, era il <a href='https://en.wikipedia.org/wiki/Battlefield_(series)'>Battlefield</a> dei <i>tempi nostri</i>. Passato e futuro, distruggere e costruire, s&egrave; stesso e tutti gli altri: &egrave; proprio questa miscela perfetta che ci rende quello che siamo, no?</p><p>Inoltre &egrave; un gioco suggeritomi proprio da alcune delle persone che devo ringraziare... meglio di cos&igrave;!</p><p>Plot!</p><p>Our base is under attack, soldier! We've to defend it at all costs! Pilot your tank and destroy everything to defend the precious base! Use UP/DOWN/LEFT/RIGHT for moving and the A BUTTON for shooting. Pick up bonuses, power up your tank and beware: a single shoot to your base and it's game over!</p><p>But, wait. There is more! In edit mode you can make your own maps! Use UP/DOWN/LEFT/RIGHT for moving the cursor and the A BUTTON for placing an item. Hold down the B BUTTON for opening the tools panel and use LEFT/RIGHT for selecting an option. From left to right, you can use the rubber for removing a map element, use various terrain types for building your map, place the base, the player and enemies spawnpoints, save a map to share it or load a new one, play it once loaded or quit to the title screen. On the right side of the screen you can decide the enemy tanks order: use UP/DOWN for selecting a sequence entry and LEFT/RIGHT for selecting a tank type - then use the A BUTTON for selecting it.</p><p>Wanna play a custom map? I've made this one for you!</p><div class='code'>[Tank You!:OO~~................~~OOOO~~.s.....s.....s..~~OO~~....................~~~~....................~~........................#####.TTTT.##...##TT..T.#####TTTTTT###..##TT.T...###.TT..TT##.#.##TTT....###.TTTTTT##..###TT.T...###.TT..TT##...##TT..T..###.TT..TT##...##TT...T........................WW.....WW.WWWWWW.WW...WWWW.....WWWWWWWWWWWW...WWWWWWWWWWWWW####WWWW...WW##WWWWW##WW....WWWW...WW..#WWW#..WW....WWWW...WW...WWW...WWWWWWWWWWWWWWW...WWW...#WWWWWW##WWWWW#...###....######..#####.~~....................~~~~.....p..####........~~OO~~......#b.#......~~OOOO~~......#..#......~~OO00000220022111100333]</div><p>Let's play it! Copy the text in the box above to your clipboard, run the game and press DOWN on the title screen for entering into the edit mode. Now hold down the B BUTTON, select the 3rd icon from the right (the one with a floppy and an arrow pointing top left) and release the B BUTTON. Paste your clipboard content in the message box and... ta-da! That's my own map! Now, hold down the B BUTTON, select the 2nd icon from the right (the yellow joystick) and release the B BUTTON to play it. Good luck!</p>",
  "screenshots":[ "tankyou-1.png", "tankyou-2.png" ],
  "hardware":{
    "width":256,
    "height":192,
    "filter":"retro"
  },
  "cheats":{
    "invulnerablebase":"Invulnerable base in campaign mode (no hi-score, sorry!)",
    "level3tank":"Always level 3 tank in campaign mode (no hi-score, sorry!)",
    "unlimitedlives":"Unlimited lives in campaign mode (no hi-score, sorry!)"
  },
  "resources":{
    "spectrum":"spectrum.font",
    "sprites":"sprites.png",
    "defaultsprites":"../default/sprites.png"
  },
  "stencils":{
    "codeGetMapData":[ { "object":{ "_":[ "stencil", "mapGetter" ] } }, { "wait":1, "loop":1, "until":{ "_":[ "objectTyped", "mapgetter", "not" ] } } ],
    "codeNextStage":[
      { "sum":1, "to":{ "_":[ "variable", "stage" ] } },
      { "when":{ "_":[ "variable", "stage", "isGreaterThan", { "_":[ "variable", "stagesCount" ] } ] }, "as":{ "_":"variable" }, "set":{ "stage":1 } },
      { "as":{ "_":"variable" }, "set":{ "levelName":{ "_":[ "STAGE ", ".", { "_":[ "variable", "stage" ] } ] } } },
      { "gotoScene":{ "_":[ "variable", "stage" ] }, "withTransition":3 }
    ],
    "codeSetMapData":[ { "object":{ "_":[ "stencil", "mapSetter" ] } }, { "wait":1, "loop":1, "until":{ "_":[ "objectTyped", "mapsetter", "not" ] } } ],
    "spark":{
      "image":"defaultsprites", "tileX":64, "tileY":144, "width":16, "height":16,
      "zIndex":12, "x":{ "_":[ "this", "xCenteredWith", { "_":"that" } ] }, "y":{ "_":[ "this", "yCenteredWith", { "_":"that" } ] },
      "animations":{ "spark":{ "frames":4, "speed":2 } },
      "animation":"spark",
      "states":{ "code":{ "name":"Sequence", "data":[ { "wait":12 }, { "remove":1 } ] } }
    },
    "removeWithCloud":[
      {
        "times":20,
        "object":{ "_":[ "stencil", "smoke" ] },
        "execute":[
          { "sum":{ "_":[ "randomNumber", [ { "_":[ "this", "width", "/", -2 ] }, { "_":[ "this", "width", "/", 2 ] } ] ] }, "to":{ "_":[ "that", "x" ] } },
          { "sum":{ "_":[ "randomNumber", [ { "_":[ "this", "height", "/", -2 ] }, { "_":[ "this", "height", "/", 2 ] } ] ] }, "to":{ "_":[ "that", "y" ] } }
        ]
      },
      { "remove":1 }
    ],
    "removeWithSmoke":[ { "object":{ "set":{ "_":[ "stencil", "smoke" ] }, "forceY":-1 } }, { "remove":1 } ],
    "modelPopupLabel":{
      "width":100, "height":10,
      "zIndex":10000, "x":{ "_":[ "this", "xCenteredWith", { "_":"that" } ] }, "y":{ "_":[ "that", "y", "-", 5 ] },
      "color":"#fff",
      "font":"spectrum", "lineHeight":12, "outline":"#000", "textAlign":"center",
      "speed":0.5,
      "states":{
        "code":{
          "name":"Sequence",
          "data":[ { "subtract":{ "_":[ "this", "speed" ] }, "to":{ "_":[ "this", "y" ] }, "wait":1, "loop":1, "cycles":15 }, { "remove":1 } ]
        }
      }
    },
    "stageModel":{
      "object":[
        { "type":[ "wall", "hitable" ], "width":8, "height":208, "x":192, "y":-8 },
        { "type":[ "wall", "hitable" ], "width":8, "height":208, "x":-8, "y":-8 },
        { "type":[ "wall", "hitable" ], "width":192, "height":8, "x":0, "y":-8 },
        { "type":[ "wall", "hitable" ], "width":192, "height":8, "x":0, "y":192 },
        { "width":64, "height":192, "x":192, "y":0, "bgcolor":"#7f7f7f" },
        {
          "width":64, "height":30,
          "zIndex":10, "x":192, "y":8,
          "color":"#000",
          "font":"spectrum", "lineHeight":10, "textAlign":"center", "html":"ENEMIES LEFT"
        },
        {
          "type":"hud",
          "hudType":"label", "label":"1PL %number|variable.lives%",
          "width":64, "height":30,
          "zIndex":10, "x":192, "y":135,
          "color":"#000",
          "font":"spectrum", "lineHeight":10, "textAlign":"center"
        },
        {
          "type":"hud",
          "hudType":"label", "label":"SCORE<br>%number|variable.score|0|7%",
          "width":64, "height":30,
          "zIndex":10, "x":192, "y":155,
          "color":"#000",
          "font":"spectrum", "lineHeight":10, "textAlign":"center"
        }
      ],
      "set":{ "currentTank":0, "tankDestroyed":0 },
      "states":[
        {
          "execute":[
            { "set":{ "counter":0 } },
            {
              "times":20,
              "execute":[
                {
                  "object":{
                    "set":{ "_":[ "stencil", "leftIndicator" ] },
                    "x":{ "_":[ 215, "+", { "_":[ "scene", "counter", "%", 2, "*", 9 ] } ] }, "y":{ "_":[ 32, "+", { "_":[ "scene", "counter", "/", 2, "floor", "*", 9 ] } ] },
                    "tankId":{ "_":[ 20, "-", { "_":[ "scene", "counter" ] } ] }
                  }
                },
                { "sum":1, "to":{ "_":[ "scene", "counter" ] } }
              ]
            },
            {
              "object":{
                "type":"message",
                "width":192, "height":20,
                "zIndex":100, "x":0, "y":86,
                "bgcolor":"#fff", "color":"#000",
                "font":"spectrum", "lineHeight":10, "textAlign":"center", "html":{ "_":[ "variable", "levelName", ".", "<br>GET READY!" ] }
              }
            }
          ],
          "code":{ "name":"Sequence", "data":[ { "wait":75 }, { "as":{ "_":[ "object", "message" ] }, "remove":1 }, { "set":{ "state":"game" } } ] }
        },
        {
          "name":"game",
          "code":[
            {
              "name":"Sequence",
              "data":[
                {
                  "object":{
                    "set":{ "_":[ "stencil", "tanks", { "_":[ "scene", "tankSequence", { "_":[ "scene", "currentTank" ] } ] } ] },
                    "at":{ "_":[ "randomObject", { "_":[ "object", "spawner" ] } ] }
                  },
                  "as":{ "_":"that" },
                  "execute":{
                    "when":{
                      "_":[
                        "scene",
                        "currentTank",
                        "isEqualTo",
                        3,
                        "or",
                        { "_":[ "scene", "currentTank", "isEqualTo", 10 ] },
                        "or",
                        { "_":[ "scene", "currentTank", "isEqualTo", 17 ] }
                      ]
                    },
                    "set":{ "tileY":16, "spawnbonus":1 }
                  }
                },
                { "sum":1, "to":{ "_":[ "scene", "currentTank" ] } },
                { "wait":75 },
                { "wait":1, "loop":1, "until":{ "_":[ "object", "enemy", "count", "isLessThan", { "_":[ "object", "spawner", "count" ] } ] } },
                { "when":{ "_":[ "scene", "currentTank", "isLessThan", { "_":[ "scene", "tankSequence", "count" ] } ] }, "loopTo":0 },
                { "wait":1, "loop":1, "until":{ "_":[ "objectTyped", "enemy", "not" ] } },
                { "wait":1 },
                { "set":{ "state":"stageclear" } }
              ]
            },
            {
              "name":"Sequence",
              "data":[
                { "object":{ "set":{ "_":[ "stencil", "player" ] }, "at":{ "_":[ "objectTyped", "playerspawner" ] } } },
                { "wait":1, "loop":1, "until":{ "_":[ "objectTyped", "player", "not" ] } },
                { "wait":25 },
                { "when":{ "_":[ "variable", "lives" ] }, "loopTo":0 },
                { "gotoScene":"gameover", "withTransition":3 }
              ]
            }
          ]
        },
        {
          "name":"basehit",
          "execute":[
            { "as":{ "_":[ "object", "gameelement" ] }, "remove":1 },
            { "as":{ "_":[ "objectTyped", "base" ] }, "execute":{ "_":[ "stencil", "removeWithCloud" ] } }
          ],
          "code":{ "name":"Sequence", "data":[ { "wait":50 }, { "gotoScene":"gameover", "withTransition":3 } ] }
        },
        {
          "name":"stageclear",
          "execute":[
            { "as":{ "_":[ "object", "gameelement" ] }, "remove":1 },
            {
              "object":{
                "width":192, "height":20,
                "zIndex":100, "x":0, "y":86,
                "bgcolor":"#fff", "color":"#000",
                "font":"spectrum", "lineHeight":10, "textAlign":"center", "html":"WELL DONE!<br>STAGE CLEAR!",
                "states":{ "code":{ "name":"Sequence", "data":[ { "set":{ "color":"#f00" }, "wait":10 }, { "set":{ "color":"#000" }, "wait":10, "loopTo":0 } ] } }
              }
            }
          ],
          "code":{
            "name":"Sequence",
            "data":[
              { "wait":25 },
              { "wait":1, "loop":1, "until":{ "_":[ "keyA", "isHit" ] } },
              { "when":{ "_":[ "variable", "campaign" ] }, "execute":{ "_":[ "stencil", "codeNextStage" ] }, "elseExecute":{ "gotoScene":"gameover" } }
            ]
          }
        }
      ]
    },
    "player":{
      "type":[ "player", "gameelement" ],
      "image":"sprites", "tileX":16, "tileY":32, "width":16, "height":16,
      "zIndex":10,
      "hitbox":{ "width":14, "height":14, "x":1, "y":1 },
      "speed":1,
      "animations":{ "moving":{ "frames":2, "speed":1, "loopTo":0 }, "still":{ "frame":0 } },
      "animation":"still",
      "bulletSpeed":2,
      "damage":1,
      "health":1,
      "invulnerability":25,
      "maxPlayerBullets":1,
      "score":0,
      "states":[
        {
          "like":{ "_":[ "stencil", "behaviourTank" ] },
          "execute":{ "set":{ "_":[ "stencil", "playerlevels", { "_":[ "variable", "level" ] } ] } },
          "code":[
            {
              "name":"Execute",
              "data":[
                {
                  "when":{ "_":[ "this", "invulnerability" ] },
                  "execute":[ { "subtract":1, "to":{ "_":[ "this", "invulnerability" ] } }, { "set":{ "visible":{ "_":[ "this", "visible", "not" ] } } } ],
                  "elseExecute":{ "set":{ "visible":1 } }
                },
                {
                  "when":{ "_":[ "keyUp", "isDown" ] },
                  "set":{ "angle":0, "forceX":0, "forceY":{ "_":[ "this", "speed", "*", -1 ] }, "animation":"moving" },
                  "elseExecute":{
                    "when":{ "_":[ "keyDown", "isDown" ] },
                    "set":{ "angle":180, "forceX":0, "forceY":{ "_":[ "this", "speed" ] }, "animation":"moving" },
                    "elseExecute":{
                      "when":{ "_":[ "keyLeft", "isDown" ] },
                      "set":{ "angle":270, "forceX":{ "_":[ "this", "speed", "*", -1 ] }, "forceY":0, "animation":"moving" },
                      "elseExecute":{
                        "when":{ "_":[ "keyRight", "isDown" ] },
                        "set":{ "angle":90, "forceX":{ "_":[ "this", "speed" ] }, "forceY":0, "animation":"moving" },
                        "elseExecute":[
                          { "set":{ "animation":"still" } },
                          { "when":{ "_":[ "this", "collidesWith", { "_":[ "object", "slippery" ] }, "not" ] }, "set":{ "forceX":0, "forceY":0 } }
                        ]
                      }
                    }
                  }
                },
                {
                  "when":{ "_":[ "keyA", "isHit", "and", { "_":[ "object", "playerbullet", "count", "isLessThan", { "_":[ "this", "maxPlayerBullets" ] } ] } ] },
                  "execute":{
                    "object":{
                      "type":"playerbullet",
                      "set":{ "_":[ "stencil", "bullet" ] },
                      "angle":{ "_":[ "that", "angle" ] },
                      "speed":{ "_":[ "that", "bulletSpeed" ] },
                      "damage":{ "_":[ "that", "damage" ] },
                      "hitThem":"enemy"
                    }
                  }
                },
                {
                  "when":{ "_":[ "this", "collidesWith", { "_":[ "object", "enemy" ] }, "and", { "_":[ "this", "invulnerability", "not" ] } ] },
                  "set":{ "state":"destroyed" }
                }
              ]
            },
            { "name":"Physics", "data":{ "walls":{ "type":"wall" } } }
          ]
        },
        {
          "name":"destroyed",
          "execute":[
            {
              "when":{ "_":[ "variable", "campaign", "not", "or", { "_":[ "cheat", "unlimitedlives", "not" ] } ] },
              "subtract":1,
              "to":{ "_":[ "variable", "lives" ] }
            },
            { "when":{ "_":[ "variable", "campaign", "not", "or", { "_":[ "cheat", "level3tank", "not" ] } ] }, "as":{ "_":"variable" }, "set":{ "level":0 } },
            { "_":[ "stencil", "removeWithSmoke" ] }
          ]
        }
      ]
    },
    "playerlevels":[
      { "speed":1, "bulletSpeed":2, "damage":1, "maxPlayerBullets":1 },
      { "speed":1, "bulletSpeed":3, "damage":1, "maxPlayerBullets":1 },
      { "speed":1, "bulletSpeed":3, "damage":1, "maxPlayerBullets":2 },
      { "speed":1, "bulletSpeed":3, "damage":2, "maxPlayerBullets":2 }
    ],
    "base":{
      "states":{
        "actions":[
          {
            "name":"hit",
            "execute":{
              "when":{ "_":[ "variable", "campaign", "not", "or", { "_":[ "cheat", "invulnerablebase", "not" ] } ] },
              "as":{ "_":"scene" },
              "set":{ "state":"basehit" }
            }
          },
          {
            "name":"fortify",
            "execute":[
              {
                "as":{ "_":[ "this", "complexCollidesWith", { "subject":{ "_":[ "object", "tile" ] }, "all":1, "hitbox":{ "width":32, "height":32, "x":-8, "y":-8 } } ] },
                "remove":1
              },
              {
                "object":[
                  { "set":{ "_":[ "stencil", "#" ] }, "x":{ "_":[ "that", "x", "-", 8 ] }, "y":{ "_":[ "that", "y", "-", 8 ] } },
                  { "set":{ "_":[ "stencil", "#" ] }, "x":{ "_":[ "that", "x" ] }, "y":{ "_":[ "that", "y", "-", 8 ] } },
                  { "set":{ "_":[ "stencil", "#" ] }, "x":{ "_":[ "that", "x", "+", 8 ] }, "y":{ "_":[ "that", "y", "-", 8 ] } },
                  { "set":{ "_":[ "stencil", "#" ] }, "x":{ "_":[ "that", "x", "+", 16 ] }, "y":{ "_":[ "that", "y", "-", 8 ] } },
                  { "set":{ "_":[ "stencil", "#" ] }, "x":{ "_":[ "that", "x", "-", 8 ] }, "y":{ "_":[ "that", "y" ] } },
                  { "set":{ "_":[ "stencil", "#" ] }, "x":{ "_":[ "that", "x", "+", 16 ] }, "y":{ "_":[ "that", "y" ] } },
                  { "set":{ "_":[ "stencil", "#" ] }, "x":{ "_":[ "that", "x", "-", 8 ] }, "y":{ "_":[ "that", "y", "+", 8 ] } },
                  { "set":{ "_":[ "stencil", "#" ] }, "x":{ "_":[ "that", "x", "+", 16 ] }, "y":{ "_":[ "that", "y", "+", 8 ] } },
                  { "set":{ "_":[ "stencil", "#" ] }, "x":{ "_":[ "that", "x", "-", 8 ] }, "y":{ "_":[ "that", "y", "+", 16 ] } },
                  { "set":{ "_":[ "stencil", "#" ] }, "x":{ "_":[ "that", "x" ] }, "y":{ "_":[ "that", "y", "+", 16 ] } },
                  { "set":{ "_":[ "stencil", "#" ] }, "x":{ "_":[ "that", "x", "+", 8 ] }, "y":{ "_":[ "that", "y", "+", 16 ] } },
                  { "set":{ "_":[ "stencil", "#" ] }, "x":{ "_":[ "that", "x", "+", 16 ] }, "y":{ "_":[ "that", "y", "+", 16 ] } }
                ]
              }
            ]
          }
        ]
      }
    },
    "behaviourBlinking":{ "code":{ "name":"Sequence", "data":[ { "set":{ "border":"#f00" }, "wait":5 }, { "set":{ "border":"#fff" }, "wait":5, "loopTo":0 } ] } },
    "behaviourTank":{
      "actions":{
        "name":"hit",
        "execute":{
          "when":{ "_":[ "this", "invulnerability", "not" ] },
          "execute":[
            { "subtract":{ "_":[ "that", "damage" ] }, "to":{ "_":[ "this", "health" ] } },
            {
              "when":{ "_":[ "this", "health", "isLessThan", 1 ] },
              "execute":[
                {
                  "when":{ "_":[ "this", "score" ] },
                  "execute":[
                    { "object":{ "set":{ "_":[ "stencil", "modelPopupLabel" ] }, "html":{ "_":[ "that", "score" ] } } },
                    { "sum":{ "_":[ "this", "score" ] }, "to":{ "_":[ "variable", "score" ] } }
                  ]
                },
                { "set":{ "state":"destroyed" } }
              ]
            }
          ]
        }
      }
    },
    "behaviourTextBlinking":{ "code":{ "name":"Sequence", "data":[ { "set":{ "color":"#f00" }, "wait":5 }, { "set":{ "color":"#fff" }, "wait":5, "loopTo":0 } ] } },
    "bonus":{
      "type":[ "bonus", "gameelement" ],
      "image":"sprites", "tileY":64, "width":16, "height":16,
      "zIndex":40,
      "states":{
        "code":{
          "name":"Execute",
          "data":{
            "when":{ "_":[ "this", "collidesWith", { "_":[ "objectTyped", "player" ] } ] },
            "execute":[
              { "executeAction":"picked" },
              { "object":{ "set":{ "_":[ "stencil", "modelPopupLabel" ] }, "html":"500" } },
              { "sum":500, "to":{ "_":[ "variable", "score" ] } },
              { "remove":1 }
            ]
          }
        }
      }
    },
    "bonuses":[
      {
        "set":{ "_":[ "stencil", "bonus" ] },
        "frame":0,
        "states":{ "actions":{ "name":"picked", "execute":{ "as":{ "_":[ "objectTyped", "player" ] }, "set":{ "invulnerability":250 } } } }
      },
      {
        "set":{ "_":[ "stencil", "bonus" ] },
        "frame":1,
        "states":{ "actions":{ "name":"picked", "execute":{ "as":{ "_":[ "object", "enemy" ] }, "set":{ "state":"destroyed" } } } }
      },
      {
        "set":{ "_":[ "stencil", "bonus" ] },
        "frame":2,
        "states":{ "actions":{ "name":"picked", "execute":{ "as":{ "_":[ "objectTyped", "base" ] }, "executeAction":"fortify" } } }
      },
      {
        "set":{ "_":[ "stencil", "bonus" ] },
        "frame":3,
        "states":{
          "actions":{
            "name":"picked",
            "execute":{
              "when":{ "_":[ "variable", "level", "isLessThan", 3 ] },
              "execute":[
                { "sum":1, "to":{ "_":[ "variable", "level" ] } },
                { "as":{ "_":[ "objectTyped", "player" ] }, "set":{ "_":[ "stencil", "playerlevels", { "_":[ "variable", "level" ] } ] } }
              ]
            }
          }
        }
      },
      {
        "set":{ "_":[ "stencil", "bonus" ] },
        "frame":4,
        "states":{ "actions":{ "name":"picked", "execute":{ "sum":1, "to":{ "_":[ "variable", "lives" ] } } } }
      },
      {
        "set":{ "_":[ "stencil", "bonus" ] },
        "frame":5,
        "states":{ "actions":{ "name":"picked", "execute":{ "as":{ "_":[ "object", "enemy" ] }, "set":{ "state":"blocked" } } } }
      }
    ],
    "bullet":{
      "type":"gameelement",
      "image":"sprites", "tileY":48, "width":8, "height":8,
      "zIndex":11, "x":{ "_":[ "this", "xCenteredWith", { "_":"that" } ] }, "y":{ "_":[ "this", "yCenteredWith", { "_":"that" } ] },
      "states":[
        {
          "execute":{ "applyVector":{ "angle":{ "_":[ "this", "angle" ] }, "length":{ "_":[ "this", "speed" ] } } },
          "code":[
            {
              "name":"Execute",
              "data":[
                {
                  "when":{ "_":[ "this", "collidesWith", { "_":[ "object", "hitable" ] } ] },
                  "execute":[
                    {
                      "as":{
                        "_":[ "this", "complexCollidesWith", { "subject":{ "_":[ "object", "hitable" ] }, "all":1, "hitbox":{ "width":10, "height":10, "x":-1, "y":-1 } } ]
                      },
                      "executeAction":"hit"
                    },
                    { "set":{ "state":"exploded" } }
                  ]
                },
                {
                  "when":{ "_":[ "this", "collidesWith", { "_":[ "object", { "_":[ "this", "hitThem" ] } ] } ] },
                  "execute":[ { "as":{ "_":"that" }, "executeAction":"hit" }, { "set":{ "state":"exploded" } } ]
                }
              ]
            },
            { "name":"Physics" }
          ]
        },
        { "name":"exploded", "execute":{ "_":[ "stencil", "removeWithSmoke" ] } }
      ]
    },
    "editor":{
      "appliers":[
        0,
        { "as":{ "_":[ "this", "collidesWith", { "_":[ "object", "tile" ] } ] }, "remove":1 },
        [
          { "as":{ "_":[ "this", "collidesWith", { "_":[ "object", "tile" ] } ] }, "remove":1 },
          { "object":{ "set":{ "_":[ "stencil", "editor", "tiles", "#" ] }, "at":{ "_":"that" } } }
        ],
        [
          { "as":{ "_":[ "this", "collidesWith", { "_":[ "object", "tile" ] } ] }, "remove":1 },
          { "object":{ "set":{ "_":[ "stencil", "editor", "tiles", "~" ] }, "at":{ "_":"that" } } }
        ],
        [
          { "as":{ "_":[ "this", "collidesWith", { "_":[ "object", "tile" ] } ] }, "remove":1 },
          { "object":{ "set":{ "_":[ "stencil", "editor", "tiles", "W" ] }, "at":{ "_":"that" } } }
        ],
        [
          { "as":{ "_":[ "this", "collidesWith", { "_":[ "object", "tile" ] } ] }, "remove":1 },
          { "object":{ "set":{ "_":[ "stencil", "editor", "tiles", "O" ] }, "at":{ "_":"that" } } }
        ],
        [
          { "as":{ "_":[ "this", "collidesWith", { "_":[ "object", "tile" ] } ] }, "remove":1 },
          { "object":{ "set":{ "_":[ "stencil", "editor", "tiles", "T" ] }, "at":{ "_":"that" } } }
        ],
        {
          "when":{ "_":[ "this", "x", "isLessThan", 184, "and", { "_":[ "this", "y", "isLessThan", 184 ] } ] },
          "execute":[
            {
              "as":{ "_":[ "this", "complexCollidesWith", { "subject":{ "_":[ "object", "tile" ] }, "all":1, "hitbox":{ "width":16, "height":16, "x":0, "y":0 } } ] },
              "remove":1
            },
            { "as":{ "_":[ "object", "base" ] }, "remove":1 },
            { "object":{ "set":{ "_":[ "stencil", "editor", "tiles", "b" ] }, "at":{ "_":"that" } } }
          ]
        },
        {
          "when":{ "_":[ "this", "x", "isLessThan", 184, "and", { "_":[ "this", "y", "isLessThan", 184 ] } ] },
          "execute":[
            {
              "as":{ "_":[ "this", "complexCollidesWith", { "subject":{ "_":[ "object", "tile" ] }, "all":1, "hitbox":{ "width":16, "height":16, "x":0, "y":0 } } ] },
              "remove":1
            },
            { "as":{ "_":[ "object", "playerspawner" ] }, "remove":1 },
            { "object":{ "set":{ "_":[ "stencil", "editor", "tiles", "p" ] }, "at":{ "_":"that" } } }
          ]
        },
        {
          "when":{
            "_":[
              "this",
              "x",
              "isLessThan",
              184,
              "and",
              { "_":[ "this", "y", "isLessThan", 184 ] },
              "and",
              { "_":[ "object", "spawner", "count", "isLessThan", 4 ] }
            ]
          },
          "execute":[
            {
              "as":{ "_":[ "this", "complexCollidesWith", { "subject":{ "_":[ "object", "tile" ] }, "all":1, "hitbox":{ "width":16, "height":16, "x":0, "y":0 } } ] },
              "remove":1
            },
            { "object":{ "set":{ "_":[ "stencil", "editor", "tiles", "s" ] }, "at":{ "_":"that" } } }
          ]
        }
      ],
      "labels":[
        0,
        "Delete",
        "Draw walls",
        "Draw water",
        "Draw ice",
        "Draw steel walls",
        "Draw trees",
        "Add base",
        "Add player spawnpoint",
        "Add enemy spawnpoint",
        "Save data",
        "Load data",
        "Play",
        "Exit"
      ],
      "tiles":{
        "#":{ "type":"tile", "image":"sprites", "tileX":8, "tileY":48, "width":8, "height":8, "zIndex":1, "tileLabel":"#" },
        "O":{ "type":"tile", "image":"sprites", "tileX":32, "tileY":48, "width":8, "height":8, "zIndex":1, "tileLabel":"O" },
        "T":{ "type":"tile", "image":"sprites", "tileX":40, "tileY":48, "width":8, "height":8, "zIndex":1, "tileLabel":"T" },
        "W":{ "type":"tile", "image":"sprites", "tileX":24, "tileY":48, "width":8, "height":8, "zIndex":1, "tileLabel":"W" },
        "b":{ "type":[ "tile", "base" ], "image":"sprites", "tileX":0, "tileY":32, "width":16, "height":16, "zIndex":1, "tileLabel":"b" },
        "p":{ "type":[ "tile", "playerspawner" ], "image":"sprites", "tileX":80, "tileY":48, "width":16, "height":16, "zIndex":1, "tileLabel":"p" },
        "s":{ "type":[ "tile", "spawner" ], "image":"sprites", "tileX":64, "tileY":48, "width":16, "height":16, "zIndex":1, "tileLabel":"s" },
        "~":{ "type":"tile", "image":"sprites", "tileX":16, "tileY":48, "width":8, "height":8, "zIndex":1, "tileLabel":"~" }
      }
    },
    "leftIndicator":{
      "image":"sprites", "tileX":48, "tileY":48, "width":8, "height":8,
      "zIndex":10,
      "states":{ "code":{ "name":"Execute", "data":{ "set":{ "visible":{ "_":[ "scene", "tankDestroyed", "isLessThan", { "_":[ "this", "tankId" ] } ] } } } } }
    },
    "mapCursor":{
      "type":"cursor",
      "width":8, "height":8,
      "zIndex":30, "x":0, "y":0,
      "states":[
        {
          "like":{ "_":[ "stencil", "behaviourBlinking" ] },
          "code":{
            "name":"Sequence",
            "data":[
              { "wait":1 },
              { "when":{ "_":[ "keyUp", "isHit" ] }, "subtract":8, "to":{ "_":[ "this", "y" ] }, "set":{ "apply":1 } },
              { "when":{ "_":[ "keyDown", "isHit" ] }, "sum":8, "to":{ "_":[ "this", "y" ] }, "set":{ "apply":1 } },
              { "when":{ "_":[ "keyLeft", "isHit" ] }, "subtract":8, "to":{ "_":[ "this", "x" ] }, "set":{ "apply":1 } },
              { "when":{ "_":[ "keyRight", "isHit" ] }, "sum":8, "to":{ "_":[ "this", "x" ] }, "set":{ "apply":1 } },
              { "when":{ "_":[ "keyA", "isHit" ] }, "set":{ "apply":1 } },
              {
                "when":{ "_":[ "this", "x", "isGreaterEqualThan", 192, "or", { "_":[ "this", "x", "isLessThan", 0 ] } ] },
                "elseExecute":[
                  { "when":{ "_":[ "this", "y", "isLessThan", 0 ] }, "set":{ "y":184 } },
                  { "when":{ "_":[ "this", "y", "isGreaterEqualThan", 192 ] }, "set":{ "y":0 } },
                  {
                    "when":{ "_":[ "keyA", "isDown", "and", { "_":[ "this", "apply" ] } ] },
                    "execute":{
                      "when":{ "_":[ "stencil", "editor", "appliers", { "_":[ "variable", "currentTool" ] } ] },
                      "execute":{ "_":[ "stencil", "editor", "appliers", { "_":[ "variable", "currentTool" ] } ] }
                    }
                  },
                  { "when":{ "_":[ "keyB", "isHit" ] }, "set":{ "state":"palette" } }
                ],
                "subsequence":[ { "object":{ "_":[ "stencil", "sequenceCursor" ] } }, { "remove":1 } ]
              },
              { "wait":1, "loopTo":1 }
            ]
          }
        },
        {
          "name":"palette",
          "execute":{
            "object":[
              { "type":"tools", "width":240, "height":48, "zIndex":50, "x":8, "y":136, "bgcolor":"#000", "border":"#fff" },
              {
                "type":"tools",
                "width":224, "height":10,
                "zIndex":80, "x":16, "y":142,
                "color":"#fff",
                "font":"spectrum", "lineHeight":10,
                "states":{ "code":{ "name":"Execute", "data":{ "set":{ "html":{ "_":[ "stencil", "editor", "labels", { "_":[ "variable", "currentTool" ] } ] } } } } }
              },
              { "type":"tools", "image":"sprites", "tileY":80, "width":128, "height":16, "zIndex":60, "x":16, "y":160 },
              { "type":"tools", "image":"sprites", "tileY":96, "width":128, "height":16, "zIndex":60, "x":144, "y":160 },
              { "type":[ "tools", "toolcursor" ], "width":16, "height":16, "zIndex":80, "y":160, "states":{ "like":{ "_":[ "stencil", "behaviourBlinking" ] } } }
            ]
          },
          "code":{
            "name":"Execute",
            "data":[
              { "when":{ "_":[ "keyLeft", "isHit" ] }, "subtract":1, "to":{ "_":[ "variable", "currentTool" ] } },
              { "when":{ "_":[ "keyRight", "isHit" ] }, "sum":1, "to":{ "_":[ "variable", "currentTool" ] } },
              { "when":{ "_":[ "variable", "currentTool", "isLessThan", 1 ] }, "as":{ "_":"variable" }, "set":{ "currentTool":13 } },
              { "when":{ "_":[ "variable", "currentTool", "isGreaterThan", 13 ] }, "as":{ "_":"variable" }, "set":{ "currentTool":1 } },
              { "as":{ "_":[ "object", "toolcursor" ] }, "set":{ "x":{ "_":[ "variable", "currentTool", "*", 16 ] } } },
              {
                "when":{ "_":[ "keyB", "isUp" ] },
                "execute":[
                  { "as":{ "_":[ "object", "tools" ] }, "remove":1 },
                  {
                    "when":{ "_":[ "variable", "currentTool", "isEqualTo", 10 ] },
                    "execute":[ { "as":{ "_":"scene" }, "set":{ "state":"saveScene" } }, { "remove":1 } ],
                    "elseExecute":{
                      "when":{ "_":[ "variable", "currentTool", "isEqualTo", 11 ] },
                      "execute":[ { "as":{ "_":"scene" }, "set":{ "state":"loadScene" } }, { "remove":1 } ],
                      "elseExecute":{
                        "when":{ "_":[ "variable", "currentTool", "isEqualTo", 12 ] },
                        "execute":[ { "as":{ "_":"scene" }, "set":{ "state":"runScene" } }, { "remove":1 } ],
                        "elseExecute":{
                          "when":{ "_":[ "variable", "currentTool", "isEqualTo", 13 ] },
                          "execute":[ { "as":{ "_":"scene" }, "set":{ "state":"gotoIntro" } }, { "remove":1 } ],
                          "elseExecute":{ "set":{ "state":"default" } }
                        }
                      }
                    }
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    "mapGetter":{
      "type":"mapgetter",
      "width":1, "height":1,
      "states":{
        "code":{
          "name":"Sequence",
          "data":[
            { "as":{ "_":"variable" }, "set":{ "mapdata":"" } },
            {
              "times":576,
              "execute":[
                { "set":{ "collided":{ "_":[ "this", "collidesWith", { "_":[ "object", "tile" ] } ] } } },
                {
                  "when":{
                    "_":[
                      "this",
                      "collided",
                      "and",
                      { "_":[ "this", "collided", "x", "isEqualTo", { "_":[ "this", "x" ] } ] },
                      "and",
                      { "_":[ "this", "collided", "y", "isEqualTo", { "_":[ "this", "y" ] } ] }
                    ]
                  },
                  "execute":{ "as":{ "_":"variable" }, "set":{ "mapdata":{ "_":[ "variable", "mapdata", ".", { "_":[ "that", "collided", "tileLabel" ] } ] } } },
                  "elseExecute":{ "as":{ "_":"variable" }, "set":{ "mapdata":{ "_":[ "variable", "mapdata", ".", "." ] } } }
                },
                { "sum":8, "to":{ "_":[ "this", "x" ] } },
                { "when":{ "_":[ "this", "x", "isGreaterEqualThan", 192 ] }, "execute":[ { "set":{ "x":0 } }, { "sum":8, "to":{ "_":[ "this", "y" ] } } ] }
              ]
            },
            { "set":{ "width":192, "x":216, "y":10 } },
            {
              "times":20,
              "execute":[
                { "set":{ "collided":{ "_":[ "this", "collidesWith", { "_":[ "object", "selected" ] } ] } } },
                { "as":{ "_":"variable" }, "set":{ "mapdata":{ "_":[ "variable", "mapdata", ".", { "_":[ "that", "collided", "tileLabel" ] } ] } } },
                { "sum":9, "to":{ "_":[ "this", "y" ] } }
              ]
            },
            { "remove":1 }
          ]
        }
      }
    },
    "mapSetter":{
      "type":"mapsetter",
      "width":1, "height":1,
      "states":{
        "code":{
          "name":"Sequence",
          "data":[
            { "as":{ "_":[ "object", "tile" ] }, "remove":1 },
            { "as":{ "_":[ "object", "tankselector" ] }, "executeAction":"unselect" },
            { "set":{ "counter":0 } },
            {
              "times":576,
              "execute":[
                {
                  "when":{ "_":[ "stencil", "editor", "tiles", { "_":[ "variable", "mapdata", { "_":[ "this", "counter" ] } ] } ] },
                  "object":{
                    "set":{ "_":[ "stencil", "editor", "tiles", { "_":[ "variable", "mapdata", { "_":[ "that", "counter" ] } ] } ] },
                    "x":{ "_":[ "that", "counter", "%", 24, "*", 8 ] }, "y":{ "_":[ "that", "counter", "/", 24, "floor", "*", 8 ] }
                  }
                },
                { "sum":1, "to":{ "_":[ "this", "counter" ] } }
              ]
            },
            { "set":{ "y":10 } },
            {
              "times":20,
              "execute":[
                { "set":{ "x":{ "_":[ { "_":[ "variable", "mapdata", { "_":[ "this", "counter" ] } ] }, "*", 8, "+", 216 ] } } },
                { "as":{ "_":[ "this", "collidesWith", { "_":[ "object", "tankselector" ] } ] }, "executeAction":"select" },
                { "sum":9, "to":{ "_":[ "this", "y" ] } },
                { "sum":1, "to":{ "_":[ "this", "counter" ] } }
              ]
            },
            { "remove":1 }
          ]
        }
      }
    },
    "sequenceCursor":{
      "type":"cursor",
      "width":8, "height":8,
      "zIndex":30, "x":216, "y":10,
      "states":{
        "like":{ "_":[ "stencil", "behaviourBlinking" ] },
        "code":{
          "name":"Sequence",
          "data":[
            { "wait":1 },
            { "when":{ "_":[ "keyUp", "isHit" ] }, "subtract":9, "to":{ "_":[ "this", "y" ] } },
            { "when":{ "_":[ "keyDown", "isHit" ] }, "sum":9, "to":{ "_":[ "this", "y" ] } },
            { "when":{ "_":[ "keyLeft", "isHit" ] }, "subtract":8, "to":{ "_":[ "this", "x" ] } },
            { "when":{ "_":[ "keyRight", "isHit" ] }, "sum":8, "to":{ "_":[ "this", "x" ] } },
            { "when":{ "_":[ "this", "y", "isLessThan", 10 ] }, "set":{ "y":181 } },
            { "when":{ "_":[ "this", "y", "isGreaterEqualThan", 190 ] }, "set":{ "y":10 } },
            {
              "when":{ "_":[ "this", "x", "isLessThan", 216, "or", { "_":[ "this", "x", "isGreaterEqualThan", 248 ] } ] },
              "elseExecute":{
                "when":{ "_":[ "keyA", "isHit" ] },
                "execute":[
                  {
                    "as":{
                      "_":[ "this", "complexCollidesWith", { "subject":{ "_":[ "object", "tankselector" ] }, "all":1, "hitbox":{ "width":64, "height":8, "x":-32, "y":0 } } ]
                    },
                    "executeAction":"unselect"
                  },
                  { "as":{ "_":[ "this", "collidesWith", { "_":[ "object", "tankselector" ] } ] }, "executeAction":"select" }
                ]
              },
              "subsequence":[ { "remove":1 }, { "object":{ "_":[ "stencil", "mapCursor" ] } } ]
            },
            { "wait":1, "loopTo":1 }
          ]
        }
      }
    },
    "smoke":{
      "image":"defaultsprites", "tileX":80, "tileY":16, "width":16, "height":16,
      "zIndex":12, "x":{ "_":[ "this", "xCenteredWith", { "_":"that" } ] }, "y":{ "_":[ "this", "yCenteredWith", { "_":"that" } ] },
      "animations":{ "spark":{ "frames":4, "speed":1 } },
      "animation":"spark",
      "states":{ "code":[ { "name":"Physics" }, { "name":"Sequence", "data":[ { "wait":8 }, { "remove":1 } ] } ] }
    },
    "tank":{
      "type":[ "enemy", "gameelement" ],
      "image":"sprites", "width":16, "height":16,
      "zIndex":10,
      "hitbox":{ "width":14, "height":14, "x":1, "y":1 },
      "angle":180,
      "speed":1,
      "animations":{ "moving":{ "frames":2, "speed":1, "loopTo":0 }, "still":{ "frame":0 } },
      "animation":"moving",
      "aggressivity":50,
      "bulletSpeed":2,
      "damage":1,
      "invulnerability":0,
      "shootSpeed":[ 25, 75 ],
      "spawnbonus":0,
      "steerSpeed":25,
      "states":[
        {
          "like":{ "_":[ "stencil", "behaviourTank" ] },
          "set":{ "visible":1, "animation":"moving" },
          "execute":{ "object":{ "_":[ "stencil", "spark" ] } },
          "code":[
            {
              "name":"Sequence",
              "data":[
                {
                  "when":{ "_":[ "randomNumber", [ 0, 100 ], "isLessThan", { "_":[ "this", "aggressivity" ] } ] },
                  "set":{ "angle":{ "_":[ "this", "angleTo", { "_":[ "objectTyped", "base" ] }, "/", 90, "round", "*", 90 ] } },
                  "elseExecute":{ "set":{ "angle":{ "_":[ "randomValue", [ 0, 90, 180, 270 ] ] } } }
                },
                { "applyVector":{ "angle":{ "_":[ "this", "angle" ] }, "length":{ "_":[ "this", "speed" ] } } },
                { "wait":{ "_":[ "this", "steerSpeed" ] }, "loopTo":0 }
              ]
            },
            {
              "name":"Sequence",
              "data":[
                { "wait":{ "_":[ "randomNumber", { "_":[ "this", "shootSpeed" ] } ] } },
                {
                  "object":{
                    "set":{ "_":[ "stencil", "bullet" ] },
                    "angle":{ "_":[ "that", "angle" ] },
                    "speed":{ "_":[ "that", "bulletSpeed" ] },
                    "damage":{ "_":[ "that", "damage" ] },
                    "hitThem":"player"
                  }
                },
                { "loopTo":0 }
              ]
            },
            { "name":"Physics", "data":{ "walls":{ "type":"wall" } } }
          ]
        },
        {
          "name":"blocked",
          "like":{ "_":[ "stencil", "behaviourTank" ] },
          "set":{ "animation":"still" },
          "code":{
            "name":"Sequence",
            "data":[
              { "wait":225 },
              { "set":{ "visible":0 }, "wait":1 },
              { "set":{ "visible":1 }, "wait":1, "cycles":12, "loopTo":-1 },
              { "set":{ "state":"default" } }
            ]
          }
        },
        {
          "name":"destroyed",
          "execute":[
            { "_":[ "stencil", "removeWithCloud" ] },
            {
              "when":{ "_":[ "this", "spawnbonus" ] },
              "execute":[
                { "as":{ "_":[ "object", "bonus" ] }, "remove":1 },
                {
                  "object":{
                    "set":{ "_":[ "randomValue", { "_":[ "stencil", "bonuses" ] } ] },
                    "x":{ "_":[ "randomNumber", [ 2, 20 ], "*", 8 ] }, "y":{ "_":[ "randomNumber", [ 2, 20 ], "*", 8 ] }
                  }
                }
              ]
            },
            { "sum":1, "to":{ "_":[ "scene", "tankDestroyed" ] } }
          ]
        }
      ]
    },
    "tankSelector":{
      "type":"tankselector",
      "image":"sprites", "tileX":32, "tileY":56, "width":8, "height":8,
      "zIndex":10,
      "states":{
        "actions":[
          { "name":"select", "execute":{ "set":{ "type":"selected", "frame":1 } } },
          { "name":"unselect", "execute":{ "set":{ "removeType":"selected", "frame":0 } } }
        ]
      }
    },
    "tanks":[
      {
        "set":{ "_":[ "stencil", "tank" ] },
        "speed":0.5,
        "aggressivity":50,
        "bulletSpeed":1,
        "damage":1,
        "health":1,
        "score":100,
        "shootSpeed":[ 25, 75 ],
        "steerSpeed":25
      },
      {
        "set":{ "_":[ "stencil", "tank" ] },
        "tileX":32,
        "speed":2,
        "aggressivity":70,
        "bulletSpeed":3,
        "damage":1,
        "health":1,
        "score":200,
        "shootSpeed":[ 75, 75 ],
        "steerSpeed":10
      },
      {
        "set":{ "_":[ "stencil", "tank" ] },
        "tileX":64,
        "speed":1,
        "aggressivity":50,
        "bulletSpeed":2,
        "damage":2,
        "health":1,
        "score":300,
        "shootSpeed":[ 25, 75 ],
        "steerSpeed":25
      },
      {
        "set":{ "_":[ "stencil", "tank" ] },
        "tileX":96,
        "speed":1,
        "aggressivity":30,
        "bulletSpeed":2,
        "damage":2,
        "health":4,
        "score":400,
        "shootSpeed":[ 25, 75 ],
        "steerSpeed":25
      }
    ],
    "#":{
      "type":[ "wall", "hitable", "tile" ],
      "image":"sprites", "tileX":8, "tileY":48, "width":8, "height":8,
      "health":4,
      "states":{
        "actions":{
          "name":"hit",
          "execute":[
            { "subtract":{ "_":[ "that", "damage" ] }, "to":{ "_":[ "this", "health" ] } },
            { "when":{ "_":[ "this", "health", "isLessThan", 1 ] }, "remove":1 }
          ]
        }
      }
    },
    "O":{
      "type":[ "wall", "hitable", "tile" ],
      "image":"sprites", "tileX":32, "tileY":48, "width":8, "height":8,
      "health":4,
      "states":{
        "actions":{
          "name":"hit",
          "execute":{
            "when":{ "_":[ "that", "damage", "isGreaterThan", 1 ] },
            "execute":[
              { "subtract":{ "_":[ "that", "damage" ] }, "to":{ "_":[ "this", "health" ] } },
              { "when":{ "_":[ "this", "health", "isLessThan", 1 ] }, "remove":1 }
            ]
          }
        }
      }
    },
    "T":{ "type":"tile", "image":"sprites", "tileX":40, "tileY":48, "width":8, "height":8, "zIndex":30 },
    "W":{ "type":[ "slippery", "tile" ], "image":"sprites", "tileX":24, "tileY":48, "width":8, "height":8 },
    "b":{
      "type":[ "base", "wall", "hitable" ],
      "set":{ "_":[ "stencil", "base" ] },
      "image":"sprites", "tileX":0, "tileY":32, "width":16, "height":16,
      "zIndex":5
    },
    "p":{ "type":"playerspawner", "image":"sprites", "tileX":80, "tileY":48, "width":16, "height":16 },
    "s":{ "type":"spawner", "image":"sprites", "tileX":64, "tileY":48, "width":16, "height":16 },
    "~":{ "type":[ "wall", "tile" ], "image":"sprites", "tileX":16, "tileY":48, "width":8, "height":8 }
  },
  "execute":[
    {
      "as":{ "_":"variable" },
      "set":{
        "highscore":{ "_":[ "storage", "highscore" ] },
        "mapdata
        "stagesCount":10
      }
    },
    { "when":{ "_":[ "variable", "highscore", "not" ] }, "as":{ "_":"variable" }, "set":{ "highscore":0 } }
  ],
  "scenes":{
    "intro":{
      "object":[
        {
          "width":256, "height":30,
          "x":0, "y":169,
          "font":"spectrum", "lineHeight":10, "textAlign":"center", "html":{ "_":[ "CAMPAIGN HIGHSCORE:<br>", ".", { "_":[ "variable", "highscore" ] } ] },
          "states":{ "like":{ "_":[ "stencil", "behaviourTextBlinking" ] } }
        },
        {
          "width":256, "height":50,
          "zIndex":5, "x":0, "y":130,
          "font":"spectrum", "lineHeight":10, "outline":"#000", "textAlign":"center", "html":"Press START to for campaign.<br>- or -<br>Press DOWN for edit mode."
        }
      ],
      "states":{
        "code":{
          "name":"Execute",
          "data":{
            "when":{ "_":[ "keyA", "isHit" ] },
            "execute":[
              { "as":{ "_":"variable" }, "set":{ "campaign":1, "level":0, "lives":3, "score":0, "stage":0 } },
              { "when":{ "_":[ "cheat", "level3tank" ] }, "as":{ "_":"variable" }, "set":{ "level":3 } },
              { "_":[ "stencil", "codeNextStage" ] }
            ],
            "elseExecute":{ "when":{ "_":[ "keyDown", "isHit" ] }, "gotoScene":"editor", "withTransition":3 }
          }
        }
      },
      "tilemap":{
        "width":256, "height":192,
        "x":32, "y":15,
        "tileWidth":8,
        "tileHeight":8,
        "map":[
          "TTTTTT..TTT..TT..T.TT.TT",
          "TTTTTT.TTTTT.TT..T.TT.TT",
          "..TT...TT..T.TTT.T.TTTT.",
          "..TT...TTTTT.TT.TT.TT.TT",
          "..TT...TT..T.TT..T.TT.TT",
          "........................",
          "OO..OO#.OOOO#.OO#.OO#OO#",
          "OO..OO#OOOOOO#OO#.OO#OO#",
          ".OOOO#.OO#.OO#OO#.OO#OO#",
          "..OO#..OO#.OO#OO#.OO#OO#",
          "..OO#..OO#.OO#OO#.OO#...",
          "..OO#..OOOOOO#OOOOOO#OO#",
          "..OO#...OOOO#..OOOO#.OO#"
        ]
      }
    },
    "gameover":{
      "object":{
        "type":"score",
        "width":256, "height":30,
        "x":0, "y":162,
        "font":"spectrum", "lineHeight":30, "textAlign":"center", "html":{ "_":[ "FINAL SCORE: ", ".", { "_":[ "variable", "score" ] } ] },
        "states":{ "name":"highscore", "like":{ "_":[ "stencil", "behaviourTextBlinking" ] } }
      },
      "states":{
        "execute":{
          "when":{ "_":[ "cheat", "unlimitedlives", "or", { "_":[ "cheat", "invulnerablebase" ] }, "or", { "_":[ "cheat", "level3tank" ] }, "not" ] },
          "execute":{
            "when":{ "_":[ "variable", "campaign", "and", { "_":[ "variable", "score", "isGreaterThan", { "_":[ "variable", "highscore" ] } ] } ] },
            "execute":[
              { "as":{ "_":[ "object", "score" ] }, "set":{ "state":"highscore" } },
              { "as":{ "_":"variable" }, "set":{ "highscore":{ "_":[ "variable", "score" ] } } },
              { "as":{ "_":"storage" }, "set":{ "highscore":{ "_":[ "variable", "score" ] } } }
            ]
          }
        },
        "code":{
          "name":"Execute",
          "data":{
            "when":{ "_":[ "keyA", "isHit" ] },
            "execute":{ "when":{ "_":[ "variable", "campaign" ] }, "gotoScene":"intro", "withTransition":3, "elseExecute":{ "gotoScene":"editor", "withTransition":3 } }
          }
        }
      },
      "tilemap":{
        "width":256, "height":192,
        "x":36, "y":37,
        "tileWidth":8,
        "tileHeight":8,
        "map":[
          ".####..###..#...#.#####",
          "#.....#...#.##.##.#....",
          "#..##.#####.#.#.#.####.",
          "#...#.#...#.#...#.#....",
          ".####.#...#.#...#.#####",
          ".......................",
          ".###..#...#.#####.####.",
          "#...#.#...#.#.....#...#",
          "#...#.#...#.####..####.",
          "#...#..#.#..#.....#...#",
          ".###....#...#####.#...#"
        ]
      }
    },
    "1":{
      "set":{ "_":[ "stencil", "stageModel" ] },
      "tankSequence":[ "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "1" ],
      "tilemap":{
        "width":256, "height":192,
        "tileWidth":8,
        "tileHeight":8,
        "map":[
          "                        ",
          "                        ",
          "  ##s ##  #  #  ##s ##  ",
          "  ##  ##  #  #  ##  ##  ",
          "  ##  ##  #  #  ##  ##  ",
          "  ##  ##  #OO#  ##  ##  ",
          "  ##  ##  #OO#  ##  ##  ",
          "           s            ",
          "                        ",
          "##  ##   ##  ##   ##  ##",
          "OO  ##   ##  ##   ##  OO",
          "                        ",
          "                        ",
          "  ##  ##  ####  ##  ##  ",
          "  ##  ##  ####  ##  ##  ",
          "  ##  ##  ####  ##  ##  ",
          "  ##  ##  ####  ##  ##  ",
          "  ##  ##        ##  ##  ",
          "  ##  ##   p    ##  ##  ",
          "  ##  ##        ##  ##  ",
          "  ##  ##        ##  ##  ",
          "  ##  ##  ####  ##  ##  ",
          "          #b #          ",
          "          #  #          "
        ]
      }
    },
    "10":{
      "set":{ "_":[ "stencil", "stageModel" ] },
      "tankSequence":[ "0", "0", "0", "0", "1", "1", "1", "1", "2", "0", "2", "0", "1", "2", "3", "3", "2", "3", "3", "3" ],
      "tilemap":{
        "width":256, "height":192,
        "tileWidth":8,
        "tileHeight":8,
        "map":[
          "#######    s     #######",
          "#######          #######",
          "     ##WWWWWWWWWW##     ",
          "  s  ##WWWWWWWWWW##  s  ",
          "     ##WWWWWWWWWW##     ",
          "TTTTT##TTTTTTTTTT##TTTTT",
          "TTTTTTTTTTOOOOTTTTTTTTTT",
          "TTTTTTTTTTTTTTTTTTTTTTTT",
          "#   # ##  #  ### # # ###",
          "#   # # # # #    # #  # ",
          "#   # # # # #    # #  # ",
          "#   # ##  # # ## ###  # ",
          "# # # # # # #  # # #  # ",
          "# # # # # # #  # # #  # ",
          " # #  # # #  ### # #  # ",
          "TTTTTTTTTTTTTTTTTTTTTTTT",
          "TTTTTTTTTTOOOOTTTTTTTTTT",
          "TTTTTTTTTTTTTTTTTTTTTTTT",
          "WWWWWWWWWW    WWWWWWWWWW",
          "WW##WWWWWW p  WWWWWW##WW",
          "WW##WWWWWW    WWWWWW##WW",
          "  ##  ##  ####  ##  ##  ",
          "  ######  #b #  ######  ",
          "  ##  ##  #  #  ##  ##  "
        ]
      }
    },
    "2":{
      "set":{ "_":[ "stencil", "stageModel" ] },
      "tankSequence":[ "3", "3", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0" ],
      "tilemap":{
        "width":256, "height":192,
        "tileWidth":8,
        "tileHeight":8,
        "map":[
          "      OO    OO          ",
          "      OO    OO          ",
          "  ##       ###  ##OO##  ",
          "  ##       ###  ##OO##  ",
          "    s ##        OOs     ",
          "      ##        OO      ",
          "TT    ##   OO   ##TT##OO",
          "TT    ##   OO   ##TT##OO",
          "TTTT      #s      TT    ",
          "TTTT      #       TT    ",
          "  ######TTTTTT    TT##  ",
          "  ######TTTTTT    TT##  ",
          "      OOTT#  #  ##  ##  ",
          "      OOTT#  #  ##  ##  ",
          "OO##  ##  #  #      ##  ",
          "OO##  ##  ####      ##  ",
          "  ##  ##  ####  ######  ",
          "  ##  ##        ######  ",
          "  ##  ##   p            ",
          "  ##                    ",
          "  ##            ##  ##  ",
          "  ##      ####  ##  ##  ",
          "  ##      #b #  ######  ",
          "  ##      #  #  ######  "
        ]
      }
    },
    "3":{
      "set":{ "_":[ "stencil", "stageModel" ] },
      "tankSequence":[ "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "3", "3" ],
      "tilemap":{
        "width":256, "height":192,
        "tileWidth":8,
        "tileHeight":8,
        "map":[
          "      ##                ",
          "      ##  s             ",
          " TTTTT##            OOOO",
          "#TTTTT##                ",
          "#TTTTT      ##  ####### ",
          "TTTTTT      ##  ####### ",
          "TTTTTT########  ##   #  ",
          "TTTTTT######    ##   #  ",
          "TTT       ##         #  ",
          "TTT  s    ##      s  #  ",
          " TT       OOOOOO     #  ",
          " TT       OOOOOO    TT  ",
          "                    TT  ",
          " ##  ##         TTTTTTTT",
          "##  ####  ######TTTTTTTT",
          "##  ####  #     TTTTTTTT",
          "         ##     TTTTTTTT",
          "         ##  ###TTTTTTTT",
          "##    O      ###TTTTTT  ",
          "##    O         TTTTTT  ",
          "####  O         TTTTTT  ",
          "####  Op  ####  TTTTTT  ",
          "OO####    #b #   ##     ",
          "OO####    #  #   ##     "
        ]
      }
    },
    "4":{
      "set":{ "_":[ "stencil", "stageModel" ] },
      "tankSequence":[ "2", "2", "2", "2", "2", "2", "2", "2", "2", "2", "1", "1", "1", "1", "1", "0", "0", "3", "3", "3" ],
      "tilemap":{
        "width":256, "height":192,
        "tileWidth":8,
        "tileHeight":8,
        "map":[
          "TTTT      s         TT  ",
          "TTTT                TT  ",
          "TT   #           #    TT",
          "TT   ##   ####  ##    TT",
          "TT   #############    OO",
          "OO   #############      ",
          "     ## ###### ###  s   ",
          " s    ## #### ####      ",
          "      ### ## #####    ~~",
          "    OO##########OOO   ~~",
          "     #############      ",
          "    OO# ## ### #OOO     ",
          "     ###  #   #####     ",
          "     ##############     ",
          "     ###############    ",
          "~~   ###############    ",
          "~~   ################   ",
          "     #################  ",
          "           p          TT",
          "                      TT",
          "TT                  TTTT",
          "TT        ####      TTTT",
          "OOTT      #b #    TTTTOO",
          "OOTT      #  #    TTTTOO"
        ]
      }
    },
    "5":{
      "set":{ "_":[ "stencil", "stageModel" ] },
      "tankSequence":[ "2", "2", "2", "2", "2", "3", "3", "0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "1" ],
      "tilemap":{
        "width":256, "height":192,
        "tileWidth":8,
        "tileHeight":8,
        "map":[
          "        ##              ",
          "                        ",
          "OO  ##     s #          ",
          "OO  ##       #          ",
          "##  ######   ##  ~~~~  ~",
          "##  ######   ##  ~~~~  ~",
          "##s     ##       ~~     ",
          "                 ~~  s  ",
          "        ~~~~  ~~~~~     ",
          "    ##  ~~~~  ~~~~~     ",
          "####    ~~##  ###       ",
          "####    ~~##  ###       ",
          "        ~~          OO  ",
          "        ~~          OO  ",
          "~~~~~   ~~  OO  ##  O   ",
          "~~~~~   ~~  OO  ##  O   ",
          "                    O###",
          "     #####          O###",
          "        #########       ",
          "        ## p   ####     ",
          "######           ####   ",
          "####      ####     ##   ",
          "##        #b #          ",
          "          #  #          "
        ]
      }
    },
    "6":{
      "set":{ "_":[ "stencil", "stageModel" ] },
      "tankSequence":[ "3", "3", "2", "2", "3", "3", "3", "3", "3", "3", "3", "3", "0", "0", "0", "0", "0", "0", "0", "0" ],
      "tilemap":{
        "width":256, "height":192,
        "tileWidth":8,
        "tileHeight":8,
        "map":[
          "   ##   ##  s WWWWWW##  ",
          "   ##   ##    WWWWWW####",
          "WWWWWWO ##  OOWWWWWW####",
          "WWWWWWO ##  OOWWWWWWWWWW",
          "WWWWWWWWWWWWWW##WWWWWWWW",
          "WWWWWWWWWWWWWW## ##  s  ",
          "  s  OWWWWWW#### ##     ",
          "     OWWWWWW#### ##  OOO",
          "########WWWWWW## ##     ",
          "########WWWWWW## ##     ",
          "      ####WWWWWWWWWW####",
          "      ####WWWWWWWWWW####",
          "  ######  WWWWWWO       ",
          "  ######  WWWWWWO       ",
          "WWWWWW##WW    ####  ##  ",
          "WWWWWW##WW    ####  ##  ",
          "WWWWWWWWWW      ##  ##  ",
          "WWWWWWWWWW      ##  ##  ",
          "WWWWWWWWWOO  OO     ##  ",
          "WWWWWWWWWW p      ####  ",
          "##WWWWWWWW      ##      ",
          "##WWWWWWWW####  ##      ",
          "####O     #b #  ##  ##  ",
          "####O     #  #  ##  ##  "
        ]
      }
    },
    "7":{
      "set":{ "_":[ "stencil", "stageModel" ] },
      "tankSequence":[ "3", "3", "3", "3", "0", "0", "2", "2", "2", "2", "2", "2", "1", "1", "1", "1", "1", "1", "1", "1" ],
      "tilemap":{
        "width":256, "height":192,
        "tileWidth":8,
        "tileHeight":8,
        "map":[
          "  ##      s     OO    OO",
          "##TT##      ########  OO",
          "##TT##      ########  OO",
          "  ##TT##    ##  TT##OOOO",
          "  ##TT##    ##  TT##OOOO",
          "    ##  TTOO##TT  ##    ",
          "    ##  TTOO##TT  ##  s ",
          "s       OO  ##OO####    ",
          "        OO  ##OO####    ",
          "    ####OO##  OO        ",
          "    ####OO##  OO        ",
          "    ##  TT##OOTT        ",
          "    ##  TT##OOTT        ",
          "OOOOOOTT  ##    ####    ",
          "OOOOOOTT  ##    ####    ",
          "OO  ########    ##OOOO  ",
          "OO  ########    ##OOOO  ",
          "OO    OO          OO####",
          "OO    OO   p      OO####",
          "TTOOOOOO            ##OO",
          "TTOOOOOO            ##OO",
          "          ####        OO",
          "          #b #        OO",
          "          #  #          "
        ]
      }
    },
    "8":{
      "set":{ "_":[ "stencil", "stageModel" ] },
      "tankSequence":[ "1", "1", "1", "1", "3", "3", "3", "3", "3", "3", "3", "3", "0", "0", "0", "0", "2", "2", "2", "2" ],
      "tilemap":{
        "width":256, "height":192,
        "tileWidth":8,
        "tileHeight":8,
        "map":[
          "  ##  ##  ####  ##  ##  ",
          "  OO  OO  OOOO  OO  OO  ",
          "s          s          s ",
          "        ##    ##        ",
          "##  ##  ##    ##  ##  ##",
          "##  ###### ## ######  ##",
          "##  ##  ## ## ##  ##  ##",
          "OO  OO  OO OO OO  OO  OO",
          "        OO    OO        ",
          "TTTT    ## TT ##    TTTT",
          "TTTT    ## TT ##    TTTT",
          "TTTTTTTT###TT###TTTTTTTT",
          "TTTTTTTT## TT ##TTTTTTTT",
          "TTTTTTTTTTTTTTTTTTTTTTTT",
          "TTTTTTTTTTTTTTTTTTTTTTTT",
          "        ##TTTT##        ",
          "##  ##  ##TTTT##  ##  ##",
          "  ##  ##   TT   ##  ##  ",
          "  ##  ##   TT   ##  ##  ",
          "  ##  ##   p    ##  ##  ",
          "  ##  ##        ##  ##  ",
          "  ##  ##  ####  ##  ##  ",
          "  ##  ##  #b #  ##  ##  ",
          "          #  #          "
        ]
      }
    },
    "9":{
      "set":{ "_":[ "stencil", "stageModel" ] },
      "tankSequence":[ "1", "1", "1", "1", "1", "1", "1", "1", "0", "0", "2", "2", "3", "3", "3", "3", "3", "3", "3", "3" ],
      "tilemap":{
        "width":256, "height":192,
        "tileWidth":8,
        "tileHeight":8,
        "map":[
          "      ~~    OO  ##  ##  ",
          "      ~~  ##OO  ##  OO  ",
          "OO  ##~~  OO    ##  OO  ",
          "s   ##~~  OO    ##  ##s ",
          "    ##~~  s     ##  ##  ",
          "##  ##~~      ##    ##  ",
          "##  ##~~~~    ##        ",
          "      ~~~~    ##        ",
          "      ##~~  ~~~~~~~~  ##",
          "      ##~~  ~~~~~~~~  ##",
          "#### ###      TT  ~~  OO",
          "#### ###      TT  ~~    ",
          "##   #    OOTTTTTT~~    ",
          "     #    OOTTTTTT~~####",
          "          ##TTTTTT~~##  ",
          "  OO      ##TTTTTT~~##  ",
          "  ##      ##  TT  ~~TT  ",
          "  ##      ##  TT  ~~TT  ",
          "  ##      ######  ~~TTTT",
          "  ##  OO   p        TTTT",
          "  ##  ##            TTTT",
          "  ##  ##  ####    ~~TTTT",
          "          #b #    ~~TT  ",
          "          #  #    ~~TT  "
        ]
      }
    },
    "editor":{
      "object":[
        { "width":64, "height":192, "x":192, "y":0, "bgcolor":"#7f7f7f" },
        { "image":"sprites", "tileX":0, "tileY":56, "width":32, "height":8, "zIndex":10, "x":216, "y":0 },
        { "width":96, "height":96, "x":0, "y":0, "border":"#636363" },
        { "width":96, "height":96, "x":96, "y":0, "border":"#636363" },
        { "width":96, "height":96, "x":0, "y":96, "border":"#636363" },
        { "width":96, "height":96, "x":96, "y":96, "border":"#636363" }
      ],
      "states":[
        {
          "code":{
            "name":"Sequence",
            "data":[
              { "as":{ "_":"variable" }, "set":{ "currentTool":1 } },
              { "set":{ "counter":1 } },
              {
                "times":20,
                "execute":[
                  {
                    "object":{
                      "width":16, "height":10,
                      "zIndex":10, "x":199, "y":{ "_":[ "scene", "counter", "*", 9 ] },
                      "color":"#000",
                      "font":"spectrum", "lineHeight":10, "textAlign":"right", "html":{ "_":[ "scene", "counter" ] }
                    }
                  },
                  {
                    "object":{ "type":"e0", "set":{ "_":[ "stencil", "tankSelector" ] }, "x":216, "y":{ "_":[ "scene", "counter", "*", 9, "+", 1 ] }, "tileLabel":"0" }
                  },
                  {
                    "object":{ "type":"e1", "set":{ "_":[ "stencil", "tankSelector" ] }, "x":224, "y":{ "_":[ "scene", "counter", "*", 9, "+", 1 ] }, "tileLabel":"1" }
                  },
                  {
                    "object":{ "type":"e2", "set":{ "_":[ "stencil", "tankSelector" ] }, "x":232, "y":{ "_":[ "scene", "counter", "*", 9, "+", 1 ] }, "tileLabel":"2" }
                  },
                  {
                    "object":{ "type":"e3", "set":{ "_":[ "stencil", "tankSelector" ] }, "x":240, "y":{ "_":[ "scene", "counter", "*", 9, "+", 1 ] }, "tileLabel":"3" }
                  },
                  { "sum":1, "to":{ "_":[ "this", "counter" ] } }
                ]
              },
              { "wait":1 },
              { "as":{ "_":[ "object", "e0" ] }, "executeAction":"select" },
              { "wait":1 },
              { "subsequence":{ "_":[ "stencil", "codeSetMapData" ] } },
              { "wait":1 },
              { "set":{ "state":"edit" } }
            ]
          }
        },
        { "name":"edit", "execute":[ { "as":{ "_":[ "object", "message" ] }, "remove":1 }, { "object":{ "_":[ "stencil", "mapCursor" ] } } ] },
        {
          "name":"saveScene",
          "execute":{ "set":{ "datasetteWorking":0 } },
          "code":[
            {
              "name":"Sequence",
              "data":[
                { "as":{ "_":[ "object", "cursor" ] }, "remove":1 },
                {
                  "object":{
                    "type":"message",
                    "width":256, "height":20,
                    "zIndex":100, "x":0, "y":86,
                    "bgcolor":"#fff", "color":"#000",
                    "font":"spectrum", "lineHeight":10, "textAlign":"center", "html":"Please wait...<br>Saving custom stage..."
                  }
                },
                { "set":{ "datasetteWorking":0 } },
                { "subsequence":{ "_":[ "stencil", "codeGetMapData" ] } },
                { "wait":25 },
                { "set":{ "datasetteWorking":1 } },
                { "wait":1, "loop":1, "until":{ "_":[ "this", "datasetteWorking", "not" ] } },
                { "set":{ "state":"edit" } }
              ]
            },
            {
              "name":"Datasette",
              "data":{
                "when":{ "_":[ "this", "datasetteWorking" ] },
                "prompt":"Copy this text and share as you like!",
                "data":{ "_":[ "variable", "mapdata" ] },
                "execute":{ "set":{ "datasetteWorking":0 } }
              }
            }
          ]
        },
        {
          "name":"loadScene",
          "execute":{ "set":{ "datasetteWorking":0 } },
          "code":[
            {
              "name":"Datasette",
              "data":{
                "when":{ "_":[ "this", "datasetteWorking" ] },
                "prompt":"Paste the custom stage data here!",
                "execute":{ "set":{ "datasetteWorking":0, "loadedData":{ "_":"that" } } }
              }
            },
            {
              "name":"Sequence",
              "data":[
                {
                  "object":{
                    "type":"message",
                    "width":256, "height":20,
                    "zIndex":100, "x":0, "y":86,
                    "bgcolor":"#fff", "color":"#000",
                    "font":"spectrum", "lineHeight":10, "textAlign":"center", "html":"Please wait...<br>Loading custom stage..."
                  }
                },
                { "as":{ "_":[ "object", "cursor" ] }, "remove":1 },
                { "wait":25 },
                { "set":{ "datasetteWorking":1 } },
                { "wait":1, "loop":1, "until":{ "_":[ "this", "datasetteWorking", "not" ] } },
                {
                  "when":{ "_":[ "this", "loadedData" ] },
                  "elseExecute":{ "set":{ "state":"edit" } },
                  "subsequence":[
                    { "as":{ "_":"variable" }, "set":{ "mapdata":{ "_":[ "that", "loadedData" ] } } },
                    { "subsequence":{ "_":[ "stencil", "codeSetMapData" ] } },
                    { "set":{ "state":"edit" } }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name":"gotoIntro",
          "execute":{ "as":{ "_":[ "object", "cursor" ] }, "remove":1 },
          "code":{ "name":"Sequence", "data":[ { "subsequence":{ "_":[ "stencil", "codeGetMapData" ] } }, { "gotoScene":"intro", "withTransition":3 } ] }
        },
        {
          "name":"runScene",
          "code":{
            "name":"Sequence",
            "data":[
              { "as":{ "_":[ "object", "cursor" ] }, "remove":1 },
              { "set":{ "message":"" } },
              {
                "when":{ "_":[ "object", "spawner", "isLessThan", 1, "or", { "_":[ "object", "spawner", "isGreaterThan", 4 ] } ] },
                "set":{ "message":"Hey, where the enemies spawn?<br>Place 1-4 enemy spawnpoints!" }
              },
              {
                "when":{ "_":[ "object", "playerspawner", "count", "isNotEqualTo", 1 ] },
                "set":{ "message":"Hey, where the player starts?<br>Place 1 player spawnpoint!" }
              },
              { "when":{ "_":[ "object", "base", "count", "isNotEqualTo", 1 ] }, "set":{ "message":"Hey, where is the base?<br>Place 1 base!" } },
              {
                "when":{ "_":[ "this", "message" ] },
                "elseExecute":{ "subsequence":[ { "subsequence":{ "_":[ "stencil", "codeGetMapData" ] } }, { "gotoScene":"playCustomStage", "withTransition":3 } ] },
                "subsequence":[
                  {
                    "object":{
                      "type":"message",
                      "width":256, "height":20,
                      "zIndex":100, "x":0, "y":86,
                      "bgcolor":"#fff", "color":"#000",
                      "font":"spectrum", "lineHeight":10, "textAlign":"center", "html":{ "_":[ "that", "message" ] }
                    }
                  },
                  { "wait":125 },
                  { "set":{ "state":"edit" } }
                ]
              }
            ]
          }
        }
      ]
    },
    "playCustomStage":{
      "set":{ "_":[ "stencil", "stageModel" ] },
      "execute":[
        { "as":{ "_":"variable" }, "set":{ "campaign":0, "level":0, "lives":3, "score":0 } },
        { "as":{ "_":"variable" }, "set":{ "levelName":"CUSTOM STAGE" } },
        { "set":{ "counter":0 } },
        {
          "times":576,
          "execute":[
            {
              "when":{ "_":[ "editor", "tiles", { "_":[ "variable", "mapdata", { "_":[ "this", "counter" ] } ] } ] },
              "object":{
                "set":{ "_":[ "stencil", { "_":[ "variable", "mapdata", { "_":[ "that", "counter" ] } ] } ] },
                "x":{ "_":[ "that", "counter", "%", 24, "*", 8 ] }, "y":{ "_":[ "that", "counter", "/", 24, "floor", "*", 8 ] }
              }
            },
            { "sum":1, "to":{ "_":[ "this", "counter" ] } }
          ]
        },
        {
          "times":20,
          "execute":[
            { "as":{ "_":[ "variable", "mapdata", { "_":[ "this", "counter" ] } ] }, "pushInto":{ "_":[ "scene", "tankSequence" ] } },
            { "sum":1, "to":{ "_":[ "this", "counter" ] } }
          ]
        }
      ],
      "tankSequence":{ "_":[ "new", [] ] }
    }
  }
}