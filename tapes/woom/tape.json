{
  "name":"Woom",
  "author":"KesieV",
  "year":2017,
  "genre":"First person shooter",
  "description":"<p><a href='https://en.wikipedia.org/wiki/Owen_Flanagan'>Owen Flanagan</a>, professore di filosofia e neurobiologia alla <a href='https://en.wikipedia.org/wiki/Duke_University'>Duke University</a>, una tra le universit&agrave; migliori al mondo e tra le pi&ugrave; innovative secondo un'indagine di Reuters, ha scritto nel suo libro <i>Consciousness Reconsidered</i>: \"Le prove suggeriscono che gli uomini in ogni cultura arrivano a proiettare la propria identit&agrave; in qualche tipo di forma narrativa. <i>Noi siamo narratori incalliti.</i>\"</p><p>Noi uomini adoriamo raccontare ed ascoltare storie, costantemente ed in qualsiasi forma. Ci piace elaborare storie che fanno ridere, piangere e riflettere chi ascolta, trascinandoli in una vita che non &egrave; la loro e lasciare un segno. E studiamo, raffiniamo e mescoliamo le tecniche per farlo da cos&igrave; tanto tempo che oggi siamo in grado di generare l'effetto desiderato su una massa di persone con precisione <i>millimetrica</i>.</p><p>Prendiamo per esempio la tecnica del <a href='https://en.wikipedia.org/wiki/Hero%27s_journey'>viaggio dell'eroe</a>, che chi gioca i titoli di Wright! avr&agrave; <a href='herosjourney/'>gi&agrave; incontrato</a>. Derivante da studi antropologici partiti dal 1871, il viaggio dell'eroe &egrave; una infrastruttura narrativa derivata dall'analisi psicoanalitica della narrazione dei miti e della scoperta dei pattern che in essi si ripetono: in parole povere racconta di un <i>eroe</i> che parte all'avventura e in una crisi (interiore o non) conquista la vittora, per poi tornare a casa cambiato o trasformato.</p><p>Lo si pu&ograve; ritrovare in una quantit&agrave; imbarazzante di prodotti narrativi moderni, con menzione d'onore per i cartoni animati di <a href='https://www.youtube.com/watch?v=4V7drZMyL5M'>Walt Disney</a> ma, senza andare troppo lontani, consideriamo la sua presenza nella nostra vita di tutti i giorni... e nelle storie che inventiamo.</p><p>Persino nel racconto pi&ugrave; <i>italiano</i> del mondo, cio&egrave; quello della partita di calcio, non riusciamo ad accettare storie senza eroi che fanno cambiamenti radicali e ritornano a casa diversi: in televisione i cronisti si impegnano a trasformare in <i>arco narrativo</i> la partita in corso, immaginando lo stato interiore dei giocatori e collegando i vari momenti della partita o le statistiche storiche di giocatori e squadre in maniera avvincente, al fine di tessere il viaggio degli sfidanti, per poi inseguire i giocatori al termine della partita, per misurarne <i>il cambiamento</i> prima di uscire dallo stadio.</p><p>E, se proprio nulla di interessante &egrave; accaduto, non disdegnamo di diventare i protagonisti dell'arco narrativo... e racconteremo agli amici della <i>tensione che avevamo all'inizio della partita</i> o di quando <i>quel gol era quasi dentro, arbitro cornuto</i> o del fatto che <i>quell'amico che non &egrave; venuto a vedere la partita ma la prossima volta...</i></p><p>Sto quasi arrivando al punto... tenete duro un minuto ancora.</p><p>Secondo la Treccani, <a href='http://www.treccani.it/vocabolario/narrare/'>narrare</a> significa \"Esporre o rappresentare [...] vicende, situazioni, fatti storici e reali [...] riferendoli in modo ampio e accurato e <i>nel loro svolgimento temporale</i>\".</p><p>Sempre la Treccani, della parola <a hrf='http://www.treccani.it/vocabolario/storia/'>storia</a>, dice che &egrave; l' \"Esposizione ordinata di fatti e avvenimenti umani del passato, quali risultano da <i>un’indagine critica</i> volta ad accertare sia la <i>verità</i> di essi, sia le connessioni reciproche per cui è lecito riconoscere in essi un’unità di sviluppo (così definita, la storia si contrappone alla cronaca, che è invece esposizione, per lo più non critica, di fatti <i>nella loro semplice successione cronologica</i>)\"</p><p>Ora: se formuliamo la frase <i>'narrare una storia'</i> e sommiamo i significati delle parole gentilmente offerti dalla Treccani, non notate una certa e fastidiosamente puntializzata rilevanza del concetto di <i>ordine cronologico</i>? Molto probabilmente &egrave; proprio questa la chiave di una narrazione di qualit&agrave; e plausibile.</p><p>Ed &egrave; dove il narratore pu&ograve; colpire pi&ugrave; duro.</p><p>E' manipolando la linea temporale si raggiungono i risultati pi&ugrave; efficaci nella narrazione. La storia di un perdente che esce di casa e per caso trova la fortuna non interessa a nessuno... a meno che qualcuno non <i>inverta l'ordine cronologico dei fatti</i>, travestendo il caso fortuito in <i>destino premeditato</i> o il nostro fallito in <i>genio incompreso</i>.</p><p>Perch&egrave; siamo <i>noi umani</i> ad essere <i>narratori incalliti</i> ma la vita non &egrave; molto brava nello scriverci i testi - e allora preferiamo darle una mano, per dare a tutto una spruzzatina di <i>viaggio dell'eroe</i>, con un destino che si compie, gente che vince e mondo che cambia.</p><p>Ricordatevi di questo quando sentirete la prossima storia su <i>fatti incredibili</i>, persone che <i>cambiano il mondo</i> e, sopratutto, su come funziona il mondo dell'<i>innovazione</i>: ci sar&agrave; un motivo per cui i <a href='https://it.wikipedia.org/wiki/Ricercatore'>ricercatori</a> e i <a href='https://it.wikipedia.org/wiki/Trovatore'>trovatori</a> sono due persone nettamente distinte.</p><p>Plot!</p><p>The internet is full of articles and videos about <a href='https://www.youtube.com/watch?v=zb6Eo1D6VW8'>Wolfenstein 3D not being in 3D</a>, since it's not a true 3D game but just a plain 2D game displayed in a 3D fashion. But that's not <i>false advertising</i>... it's all about putting things in the right chronological order! The screen you're reading right now is still 2D, after all! Anyway I've wrote a very simple <a href='https://en.wikipedia.org/wiki/Ray_casting'>raycasting</a> engine using the Wright!... which is so 2D that is only capable to draw scaled sprites on the screen! So you can see with your own eyes where the trick lies <i>and</i> kill some monsters in the process!</p><p>Use UP/DOWN for moving and LEFT/RIGHT for rotating. Use the A BUTTON for firing, the B BUTTON for cycling between weapons and the C BUTTON for interacting with doors and switches. Good luck!</p>",
  "screenshots":[ "woom-1.png", "woom-2.png" ],
  "hardware":{
    "width":256,
    "height":192,
    "filter":"retro",
    "controls":"arcade",
    "fps":25
  },
  "audioChannels":{
    "sfx":{ "volume":1, "samples":[ "fire", "scream", "scream2", "beep2", "blam", "explode2", "explode", "beep3" ] },
    "music":{ "volume":0.8, "looping":1, "samples":[ "bgm1", "bgm2" ] }
  },
  "cheats":{
    "unlimitedHealth":"Unlimited health (no hi-score, sorry!)"
  },
  "resources":{
    "bar":"bar.png",
    "bgm1":"bgm1.ogg",
    "bgm2":"bgm2.ogg",
    "dither":"dither.png",
    "floor":"floor.png",
    "spectrum":"spectrum.font",
    "sprites":"sprites.png",
    "textures":"textures.png",
    "weapons":"weapons.png",
    "title":"title.png",
    "beep2":"../default/zxsounds/beep2.ogg",
    "beep3":"../default/zxsounds/beep3.ogg",
    "blam":"../default/zxsounds/blam.ogg",
    "explode":"../default/zxsounds/explode.ogg",
    "explode2":"../default/zxsounds/explode2.ogg",
    "fire":"../default/zxsounds/fire.ogg",
    "scream":"../default/zxsounds/scream.ogg",
    "scream2":"../default/zxsounds/scream2.ogg"
  },
  "stencils":{
    "codeCanFire":[
      { "as":{ "_":[ "scene", "raybullet" ] }, "set":{ "canFire":0 } },
      {
        "when":{ "_":[ "scene", "raytested" ] },
        "as":{ "_":[ "scene", "raybullet" ] },
        "execute":[
          { "as":{ "_":"scene" }, "set":{ "raytested":0 } },
          { "set":{ "distance":0, "canFire":1, "doing":1, "rayCurrentAngle":{ "_":[ "that", "aimAngle" ] } } },
          {
            "times":{ "_":[ "constant", "fireSteps" ] },
            "execute":{
              "when":{ "_":[ "this", "doing" ] },
              "execute":[
                { "set":{ "x":{ "_":[ "that", "x", "+", 3 ] }, "y":{ "_":[ "that", "y", "+", 3 ] } } },
                { "translateBy":{ "angle":{ "_":[ "this", "rayCurrentAngle" ] }, "length":{ "_":[ "this", "distance" ] } } },
                {
                  "when":{ "_":[ "this", "collidesWith", { "_":[ "objectTyped", "player" ] } ] },
                  "set":{ "canFire":2, "doing":0 },
                  "elseExecute":{ "when":{ "_":[ "this", "collidesWith", { "_":[ "object", "wall" ] } ] }, "set":{ "doing":0 } }
                },
                { "sum":{ "_":[ "constant", "tileSizeM1" ] }, "to":{ "_":[ "this", "distance" ] } }
              ]
            }
          }
        ]
      }
    ],
    "codeCheckHiscore":{
      "when":{ "_":[ "cheat", "unlimitedHealth", "not" ] },
      "execute":[
        { "publishScore":{ "_":[ "variable", "score" ] } },
        {
          "when":{ "_":[ "variable", "score", "isGreaterThan", { "_":[ "variable", "hiscore" ] } ] },
          "execute":[
            { "as":{ "_":"variable" }, "set":{ "hiscore":{ "_":[ "variable", "score" ] } } },
            { "as":{ "_":"storage" }, "set":{ "hiscore":{ "_":[ "variable", "score" ] } } }
          ]
        }
      ]
    },
    "codeEnemyFireAudio":{
      "when":{ "_":[ "this", "distanceTo", { "_":[ "objectTyped", "player" ] }, "isLessThan", { "_":[ "constant", "audioDistance" ] } ] },
      "playAudio":"fire"
    },
    "codeGotoStage":{ "gotoScene":{ "_":[ "stage", ".", { "_":[ "variable", "stage" ] } ] }, "withTransition":3 },
    "codeLineFader":[
      { "set":{ "counter":0 } },
      {
        "times":256,
        "execute":[
          {
            "object":{
              "type":"transition",
              "width":1, "height":152,
              "zIndex":10020, "x":{ "_":[ "that", "counter" ] }, "y":{ "_":{ "_":[ "randomNumber", [ -252, -162 ] ] } },
              "bgcolor":{ "_":[ "that", "faderColor" ] },
              "states":{
                "code":{
                  "name":"Execute",
                  "data":{ "when":{ "_":[ "this", "y", "isLessThan", -10 ] }, "sum":10, "to":{ "_":[ "this", "y" ] }, "elseExecute":{ "set":{ "y":0 } } }
                }
              }
            },
            "into":{ "_":"scenehud" }
          },
          { "sum":1, "to":{ "_":[ "this", "counter" ] } }
        ]
      },
      {
        "object":{
          "width":256, "height":152,
          "zIndex":10020, "x":0, "y":0,
          "faderColor":{ "_":[ "that", "faderColor" ] },
          "states":{
            "code":{
              "name":"Sequence",
              "data":[ { "wait":40 }, { "as":{ "_":[ "object", "transition" ] }, "remove":1 }, { "set":{ "bgcolor":{ "_":[ "this", "faderColor" ] } } } ]
            }
          }
        },
        "into":{ "_":"scenehud" }
      }
    ],
    "codeRemoveSprite":[ { "as":{ "_":[ "this", "texture" ] }, "remove":1 }, { "remove":1 } ],
    "codeSetWeapon":[
      {
        "as":{ "_":[ "objectTyped", "player" ] },
        "set":{
          "damage":{ "_":[ "stencil", "dataWeaponDamage", { "_":[ "variable", "currentWeapon" ] } ] },
          "weaponType":{ "_":[ "stencil", "dataWeaponType", { "_":[ "variable", "currentWeapon" ] } ] }
        }
      },
      {
        "as":{ "_":[ "objectTyped", "playerweapon" ] },
        "set":{ "tileX":{ "_":[ "this", "width", "*", { "_":[ "variable", "currentWeapon", "*", 2 ] } ] } }
      },
      { "_":[ "stencil", "codeUpdateGui" ] }
    ],
    "codeShowMessage":[
      { "as":{ "_":[ "scene", "messagebox" ] }, "set":{ "visible":1, "html":{ "_":[ "that", "message" ] } } },
      { "as":{ "_":"scene" }, "set":{ "messagetimer":75 } }
    ],
    "codeUpdateGui":[
      { "as":{ "_":[ "scene", "healthmeter" ] }, "set":{ "html":{ "_":[ "variable", "health" ] } } },
      { "as":{ "_":[ "scene", "portrait" ] }, "set":{ "frame":{ "_":[ "variable", "health", "/", 21, "floor" ] } } },
      { "as":{ "_":[ "scene", "ammometer" ] }, "set":{ "html":{ "_":[ "variable", "ammo", { "_":[ "variable", "currentWeapon" ] } ] } } },
      { "as":{ "_":[ "scene", "scoremeter" ] }, "set":{ "html":{ "_":[ "variable", "score" ] } } }
    ],
    "stageModel":{
      "blackbar":0,
      "flipHeadTimer":0,
      "isfiring":0,
      "messagetimer":0,
      "raytested":1,
      "textureAnimation":0,
      "textureTimer":0,
      "walkframe":0,
      "walktimer":0,
      "states":[
        {
          "execute":[
            { "set":{ "width":0, "height":0, "visible":0 } },
            {
              "object":[
                { "image":"floor", "width":256, "height":76, "zIndex":1, "x":0, "y":76, "bgcolor":{ "_":[ "that", "floorColor" ] } },
                { "width":256, "height":76, "zIndex":1, "x":0, "y":0, "bgcolor":{ "_":[ "that", "ceilingColor" ] } },
                { "_":[ "stencil", "playerWeapon" ] }
              ],
              "into":{ "_":"scenehud" }
            },
            { "set":{ "width":256, "height":192 } },
            { "set":{ "counter":0 } },
            { "object":{ "width":2, "height":2, "visible":0 }, "assign":{ "_":"that" }, "to":{ "_":[ "this", "raybullet" ] }, "into":{ "_":"scenehud" } },
            {
              "object":{ "image":"bar", "width":256, "height":40, "zIndex":10000, "x":0, "y":152, "bgcolor":"#00f" },
              "assign":{ "_":"that" },
              "to":{ "_":[ "this", "footerbar" ] },
              "into":{ "_":"scenehud" }
            },
            {
              "object":{ "width":60, "height":32, "zIndex":10010, "y":162, "color":"#fff", "font":"spectrum", "fontSize":40, "lineHeight":32, "textAlign":"center" },
              "assign":{ "_":"that" },
              "to":{ "_":[ "this", "healthmeter" ] },
              "into":{ "_":"scenehud" }
            },
            {
              "object":{ "width":60, "height":32, "zIndex":10010, "x":60, "y":162, "color":"#fff", "font":"spectrum", "fontSize":40, "lineHeight":32, "textAlign":"center" },
              "assign":{ "_":"that" },
              "to":{ "_":[ "this", "ammometer" ] },
              "into":{ "_":"scenehud" }
            },
            {
              "object":{
                "width":90, "height":32,
                "zIndex":10010, "x":162, "y":162,
                "color":"#fff",
                "font":"spectrum", "fontSize":40, "lineHeight":32, "textAlign":"right", "html":"0"
              },
              "assign":{ "_":"that" },
              "to":{ "_":[ "this", "scoremeter" ] },
              "into":{ "_":"scenehud" }
            },
            {
              "object":{ "width":256, "height":10, "zIndex":10030, "x":0, "y":0, "visible":0, "color":"#f00", "font":"spectrum", "lineHeight":10, "outline":"#000" },
              "assign":{ "_":"that" },
              "to":{ "_":[ "this", "messagebox" ] },
              "into":{ "_":"scenehud" }
            },
            {
              "object":{ "image":"bar", "tileY":40, "width":28, "height":40, "zIndex":10010, "x":120, "y":152 },
              "assign":{ "_":"that" },
              "to":{ "_":[ "this", "portrait" ] },
              "into":{ "_":"scenehud" }
            },
            {
              "times":{ "_":[ "constant", "rays" ] },
              "execute":[
                {
                  "object":{
                    "type":"ray",
                    "set":{ "_":[ "stencil", "raycasted" ] },
                    "rayangle":{ "_":[ { "_":[ "constant", "rayStartAngle" ] }, "+", { "_":[ "that", "counter", "*", { "_":[ "constant", "rayStepAngle" ] } ] } ] },
                    "rendersOn":{ "_":[ "rayrender-", ".", { "_":[ "that", "counter" ] } ] }
                  }
                },
                {
                  "object":{
                    "type":{ "_":[ "rayrender-", ".", { "_":[ "that", "counter" ] } ] },
                    "set":{ "_":[ "stencil", "rayrenderer" ] },
                    "width":{ "_":[ "constant", "rayRenderWidth" ] },
                    "x":{ "_":[ "that", "counter", "*", { "_":[ "constant", "rayRenderWidth" ] }, "+", { "_":[ "constant", "renderX" ] } ] }
                  },
                  "into":{ "_":"scenehud" }
                },
                { "sum":1, "to":{ "_":[ "this", "counter" ] } }
              ]
            },
            { "playAudio":{ "_":[ "scene", "music" ] } },
            { "as":{ "_":"variable" }, "set":{ "currentWeapon":0, "health":100, "keys":{ "_":[ "new", [ 1, 0, 0, 0 ] ] } } },
            { "_":[ "stencil", "codeSetWeapon" ] }
          ],
          "code":{
            "name":"Sequence",
            "data":[
              { "wait":1 },
              { "as":{ "_":[ "object", "mapmodifier" ] }, "executeAction":"apply" },
              {
                "set":{
                  "enemiesCount":{ "_":[ "object", "enemy", "count" ] },
                  "secretsCount":{ "_":[ "object", "secret", "count" ] },
                  "treasureCount":{ "_":[ "object", "treasure", "count" ] }
                }
              },
              { "set":{ "aiming":0, "raytested":1 } },
              {
                "when":{ "_":[ "this", "blackbar" ] },
                "execute":[
                  { "subtract":1, "to":{ "_":[ "this", "blackbar" ] } },
                  { "when":{ "_":[ "this", "blackbar", "not" ] }, "as":{ "_":[ "this", "footerbar" ] }, "set":{ "bgcolor":"#00f" } }
                ]
              },
              {
                "when":{ "_":[ "this", "messagetimer" ] },
                "execute":[
                  { "subtract":1, "to":{ "_":[ "this", "messagetimer" ] } },
                  { "when":{ "_":[ "this", "messagetimer", "not" ] }, "as":{ "_":[ "this", "messagebox" ] }, "set":{ "visible":0, "html":0 } }
                ]
              },
              {
                "when":{ "_":[ "this", "textureTimer" ] },
                "subtract":1,
                "to":{ "_":[ "this", "textureTimer" ] },
                "elseExecute":[
                  {
                    "when":{ "_":[ "this", "textureAnimation" ] },
                    "set":{ "textureAnimation":0 },
                    "elseExecute":{ "set":{ "textureAnimation":{ "_":[ "constant", "textureWidth" ] } } }
                  },
                  { "set":{ "textureTimer":10 } }
                ]
              },
              {
                "when":{ "_":[ "this", "walktimer" ] },
                "subtract":1,
                "to":{ "_":[ "this", "walktimer" ] },
                "elseExecute":[
                  { "set":{ "walkframe":{ "_":[ "this", "walkframe", "+", 1, "%", 2 ] }, "walktimer":5 } },
                  {
                    "when":{ "_":[ "this", "flipHeadTimer" ] },
                    "subtract":1,
                    "to":{ "_":[ "this", "flipHeadTimer" ] },
                    "elseExecute":[ { "set":{ "flipHeadTimer":5 } }, { "as":{ "_":[ "this", "portrait" ] }, "set":{ "flipX":{ "_":[ "this", "flipX", "not" ] } } } ]
                  }
                ]
              },
              { "when":{ "_":[ "this", "isfiring" ] }, "subtract":1, "to":{ "_":[ "this", "isfiring" ] } },
              {
                "times":{ "_":[ "object", "spriterendered", "count" ] },
                "execute":{
                  "as":{ "_":[ "objectTyped", "spriterendered" ] },
                  "execute":[ { "set":{ "removeType":"spriterendered", "worked":0 } }, { "as":{ "_":[ "this", "texture" ] }, "set":{ "visible":0 } } ]
                }
              },
              { "as":{ "_":[ "object", "ray" ] }, "executeAction":"cast" },
              {
                "as":{
                  "_":[
                    "objectTyped",
                    "player",
                    "complexCollidesWith",
                    {
                      "subject":{ "_":[ "object", "spritealive" ] },
                      "all":1,
                      "hitbox":{ "width":{ "_":[ "constant", "sizeLivingArea" ] }, "height":{ "_":[ "constant", "sizeLivingArea" ] }, "x":{ "_":[ "constant", "leftLivingArea" ] }, "y":{ "_":[ "constant", "leftLivingArea" ] } }
                    }
                  ]
                },
                "execute":{
                  "when":{ "_":[ "this", "distanceTo", { "_":[ "objectTyped", "player" ] }, "isGreaterThan", { "_":[ "constant", "aliveDistance" ] } ] },
                  "set":{ "state":"disabled" },
                  "elseExecute":{ "set":{ "state":"default" } }
                }
              },
              { "wait":1, "loopTo":3 }
            ]
          }
        },
        {
          "name":"dead",
          "execute":[
            { "stopChannel":"music" },
            { "as":{ "_":[ "objectTyped", "playerweapon" ] }, "set":{ "state":"dead" } },
            { "as":{ "_":[ "objectTyped", "player" ] }, "set":{ "state":"dead" } },
            { "set":{ "message":"You died!" }, "execute":{ "_":[ "stencil", "codeShowMessage" ] } },
            { "set":{ "faderColor":"#f00" }, "execute":{ "_":[ "stencil", "codeLineFader" ] } }
          ],
          "code":{
            "name":"Sequence",
            "data":[
              { "_":[ "stencil", "codeCheckHiscore" ] },
              { "wait":40 },
              { "wait":1, "loop":1, "until":{ "_":[ "keyA", "isHit" ] } },
              { "as":{ "_":"variable" }, "set":{ "score":0 } },
              { "_":[ "stencil", "codeGotoStage" ] }
            ]
          }
        },
        {
          "name":"win",
          "execute":[
            { "stopChannel":"music" },
            { "as":{ "_":[ "objectTyped", "playerweapon" ] }, "set":{ "state":"win" } },
            { "as":{ "_":[ "objectTyped", "player" ] }, "set":{ "state":"win" } },
            { "as":{ "_":[ "this", "messagebox" ] }, "remove":1 },
            { "set":{ "faderColor":"#000" }, "execute":{ "_":[ "stencil", "codeLineFader" ] } }
          ],
          "code":{
            "name":"Sequence",
            "data":[
              { "wait":40 },
              { "set":{ "bonusRatio":{ "_":[ "stencil", "dataDifficulty", { "_":[ "variable", "difficulty" ] }, "bonusRatio" ] } } },
              {
                "set":{
                  "enemiesPercent":{ "_":[ "scene", "enemiesCount", "-", { "_":[ "object", "enemy", "count" ] }, "/", { "_":[ "scene", "enemiesCount" ] }, "*", 100, "floor" ] },
                  "secretsPercent":{ "_":[ "scene", "secretsCount", "-", { "_":[ "object", "secret", "count" ] }, "/", { "_":[ "scene", "secretsCount" ] }, "*", 100, "floor" ] },
                  "treasurePercent":{ "_":[ "scene", "treasureCount", "-", { "_":[ "object", "treasure", "count" ] }, "/", { "_":[ "scene", "treasureCount" ] }, "*", 100, "floor" ] }
                }
              },
              { "when":{ "_":[ "scene", "treasureCount", "not" ] }, "set":{ "treasurePercent":100 } },
              { "when":{ "_":[ "scene", "enemiesCount", "not" ] }, "set":{ "enemiesPercent":100 } },
              { "when":{ "_":[ "scene", "secretsCount", "not" ] }, "set":{ "secretsPercent":100 } },
              {
                "object":{
                  "width":256, "height":10,
                  "zIndex":10030, "x":0, "y":4,
                  "color":"#fff",
                  "font":"spectrum", "lineHeight":10, "textAlign":"center", "html":{ "_":[ "scene", "stageName" ] }
                },
                "into":{ "_":"scenehud" },
                "playAudio":"blam"
              },
              { "wait":10 },
              {
                "object":{
                  "width":256, "height":10,
                  "zIndex":10030, "x":0, "y":14,
                  "color":"#f00",
                  "font":"spectrum", "lineHeight":10, "textAlign":"center", "html":"FINISHED"
                },
                "into":{ "_":"scenehud" },
                "playAudio":"blam"
              },
              { "wait":10 },
              {
                "object":{
                  "width":256, "height":10,
                  "zIndex":10030, "x":0, "y":44,
                  "color":"#f00",
                  "font":"spectrum", "lineHeight":10, "textAlign":"center", "html":{ "_":[ "KILLS: ", ".", { "_":[ "scene", "enemiesPercent" ] }, ".", "%" ] }
                },
                "into":{ "_":"scenehud" },
                "playAudio":"blam"
              },
              { "sum":{ "_":[ "scene", "enemiesPercent", "*", { "_":[ "this", "bonusRatio" ] }, "ceil" ] }, "to":{ "_":[ "variable", "score" ] } },
              { "_":[ "stencil", "codeUpdateGui" ] },
              { "wait":10 },
              {
                "object":{
                  "width":256, "height":10,
                  "zIndex":10030, "x":0, "y":64,
                  "color":"#f00",
                  "font":"spectrum", "lineHeight":10, "textAlign":"center", "html":{ "_":[ "TREASURE: ", ".", { "_":[ "scene", "treasurePercent" ] }, ".", "%" ] }
                },
                "into":{ "_":"scenehud" },
                "playAudio":"blam"
              },
              { "sum":{ "_":[ "scene", "treasurePercent", "*", { "_":[ "this", "bonusRatio" ] }, "ceil" ] }, "to":{ "_":[ "variable", "score" ] } },
              { "_":[ "stencil", "codeUpdateGui" ] },
              { "wait":10 },
              {
                "object":{
                  "width":256, "height":10,
                  "zIndex":10030, "x":0, "y":84,
                  "color":"#f00",
                  "font":"spectrum", "lineHeight":10, "textAlign":"center", "html":{ "_":[ "SECRET: ", ".", { "_":[ "scene", "secretsPercent" ] }, ".", "%" ] }
                },
                "into":{ "_":"scenehud" },
                "playAudio":"blam"
              },
              { "sum":{ "_":[ "scene", "secretsPercent", "*", { "_":[ "this", "bonusRatio" ] }, "ceil" ] }, "to":{ "_":[ "variable", "score" ] } },
              { "_":[ "stencil", "codeUpdateGui" ] },
              { "wait":10 },
              {
                "object":{
                  "width":256, "height":10,
                  "zIndex":10030, "x":0, "y":138,
                  "color":"#f00",
                  "font":"spectrum", "lineHeight":10, "textAlign":"center", "html":"Fire to continue"
                },
                "into":{ "_":"scenehud" },
                "playAudio":"explode"
              },
              { "wait":1, "loop":1, "until":{ "_":[ "keyA", "isHit" ] } },
              { "sum":1, "to":{ "_":[ "variable", "stage" ] } },
              { "_":[ "stencil", "codeGotoStage" ] }
            ]
          }
        }
      ]
    },
    "playerWeapon":{
      "type":"playerweapon",
      "image":"weapons", "width":80, "height":100,
      "zIndex":1010, "x":88, "y":52,
      "moveradius":0,
      "timer":0,
      "states":[
        {
          "code":{
            "name":"Execute",
            "data":[
              {
                "when":{ "_":[ "scene", "iswalking" ] },
                "execute":[
                  { "when":{ "_":[ "this", "moveradius", "isLessThan", 5 ] }, "sum":1, "to":{ "_":[ "this", "moveradius" ] } },
                  { "sum":0.2, "to":{ "_":[ "this", "timer" ] } }
                ]
              },
              {
                "when":{ "_":[ "this", "moveradius" ] },
                "execute":[
                  { "subtract":0.5, "to":{ "_":[ "this", "moveradius" ] } },
                  { "set":{ "x":{ "_":[ 88, "+", { "_":[ "this", "timer", "sin", "*", { "_":[ "this", "moveradius" ] } ] } ] } } },
                  { "set":{ "y":{ "_":[ 58, "+", { "_":[ "this", "timer", "cos", "*", { "_":[ "this", "moveradius" ] }, "abs" ] } ] } } }
                ]
              },
              { "when":{ "_":[ "scene", "isfiring" ] }, "set":{ "frame":1 }, "elseExecute":{ "set":{ "frame":0 } } }
            ]
          }
        },
        {
          "name":"dead",
          "set":{ "frame":0 },
          "code":{ "name":"Sequence", "data":[ { "sum":3, "to":{ "_":[ "this", "y" ] }, "wait":1, "loop":1, "cycles":40 }, { "remove":1 } ] }
        }
      ]
    },
    "enemyModel":{
      "type":[ "spritealive", "canmelee", "enemy", "explodable" ],
      "set":{ "_":[ "stencil", "spriteModel" ] },
      "damage":{ "_":[ 5, "*", { "_":[ "stencil", "dataDifficulty", { "_":[ "variable", "difficulty" ] }, "enemyDamageRatio" ] } ] },
      "health":3,
      "isaimable":1,
      "isdead":0,
      "isfiring":0,
      "score":20,
      "screams":[ "scream", "scream2" ],
      "textureTileX":272,
      "timer":0,
      "state":"disabled",
      "states":{
        "code":{
          "name":"Execute",
          "data":{
            "when":{ "_":[ "this", "hitTimer" ] },
            "subtract":1,
            "to":{ "_":[ "this", "hitTimer" ] },
            "set":{ "textureFrame":2 },
            "elseExecute":{
              "when":{ "_":[ "this", "isfiring" ] },
              "execute":[
                { "subtract":1, "to":{ "_":[ "this", "isfiring" ] }, "set":{ "textureFrame":3 } },
                { "when":{ "_":[ "this", "isfiring", "not" ] }, "executeAction":"hasfired" }
              ],
              "elseExecute":{
                "when":{ "_":[ "this", "isdead" ] },
                "execute":[
                  { "subtract":1, "to":{ "_":[ "this", "isdead" ] } },
                  {
                    "when":{ "_":[ "this", "isdead", "isGreaterThan", 15 ] },
                    "set":{ "textureFrame":2 },
                    "elseExecute":{ "when":{ "_":[ "this", "isdead" ] }, "set":{ "textureFrame":4 }, "elseExecute":{ "_":[ "stencil", "codeRemoveSprite" ] } }
                  }
                ],
                "elseExecute":{ "set":{ "textureFrame":{ "_":[ "scene", "walkframe" ] } } }
              }
            }
          }
        },
        "actions":{
          "name":"hit",
          "execute":{
            "when":{ "_":[ "this", "isdead", "not" ] },
            "execute":[
              { "subtract":{ "_":[ "that", "damage" ] }, "to":{ "_":[ "this", "health" ] } },
              {
                "when":{ "_":[ "this", "health", "isLessEqualThan", 0 ] },
                "execute":[
                  {
                    "set":{ "removeType":[ "enemy", "explodable" ], "forceX":0, "forceY":0, "isdead":20 },
                    "playAudio":{ "_":[ "randomValue", { "_":[ "this", "screams" ] } ] }
                  },
                  { "sum":{ "_":[ "this", "score" ] }, "to":{ "_":[ "variable", "score" ] } },
                  { "_":[ "stencil", "codeUpdateGui" ] }
                ],
                "elseExecute":{ "set":{ "hitTimer":3 } }
              }
            ]
          }
        }
      }
    },
    "dataDifficulty":[
      { "name":"Killing me softly", "frame":4, "bonusRatio":10, "enemyDamageRatio":1, "pickableAmmoRatio":1, "pickableHealthRatio":1 },
      { "name":"Mega-violence", "frame":2, "bonusRatio":15, "enemyDamageRatio":2, "pickableAmmoRatio":0.5, "pickableHealthRatio":0.5 },
      { "name":"Just die already", "frame":0, "bonusRatio":18, "enemyDamageRatio":3, "pickableAmmoRatio":0.5, "pickableHealthRatio":0.5 }
    ],
    "dataKeyNames":[ "Normal", "Red", "Green", "Blue" ],
    "dataWeaponAmmoMax":[ 0, 100, 12 ],
    "dataWeaponAmmoPacks":[ 0, 10, 3 ],
    "dataWeaponAmmoUsage":[ 0, 1, 1 ],
    "dataWeaponDamage":[ 3, 1, 10 ],
    "dataWeaponReload":[ 3, 10, 20 ],
    "dataWeaponType":[ 0, 1, 2 ],
    "raycasted":{
      "type":"ray",
      "width":2, "height":2,
      "visible":0,
      "rayCenter":{ "_":[ "new", { "x":0, "y":0 } ] },
      "textureCenter":{ "_":[ "new", { "x":0, "y":0 } ] },
      "states":{
        "execute":{
          "set":{
            "cosAngle":{ "_":[ { "_":[ "constant", "renderHeightRatio" ] }, "/", { "_":[ "this", "rayangle", "*", 0.01745, "cos" ] } ] },
            "renderer":{ "_":[ "objectTyped", { "_":[ "this", "rendersOn" ] } ] }
          }
        },
        "actions":{
          "name":"cast",
          "execute":[
            {
              "set":{
                "distance":0,
                "darken":0,
                "doing":1,
                "rayCurrentAngle":{ "_":[ "objectTyped", "player", "headAngle", "+", { "_":[ "this", "rayangle" ] } ] },
                "texture":0,
                "textureX":0
              }
            },
            {
              "times":{ "_":[ "constant", "raySteps" ] },
              "execute":{
                "when":{ "_":[ "this", "doing" ] },
                "execute":[
                  {
                    "set":{
                      "x":{ "_":[ "objectTyped", "player", "x", "+", { "_":[ "constant", "tileSizeRaycenter" ] } ] }, "y":{ "_":[ "objectTyped", "player", "y", "+", { "_":[ "constant", "tileSizeRaycenter" ] } ] }
                    }
                  },
                  { "translateBy":{ "angle":{ "_":[ "this", "rayCurrentAngle" ] }, "length":{ "_":[ "this", "distance" ] } } },
                  {
                    "when":{ "_":[ "this", "collidesWith", { "_":[ "object", "sprite" ] } ] },
                    "as":{ "_":"that" },
                    "execute":{
                      "when":{ "_":[ "this", "worked", "not" ] },
                      "execute":[
                        {
                          "set":{
                            "type":"spriterendered",
                            "distance":{ "_":[ "this", "distanceTo", { "_":[ "objectTyped", "player" ] } ] },
                            "rayangle":{ "_":[ "objectTyped", "player", "headAngle", "shortestAngleTo", { "_":[ "objectTyped", "player", "angleTo", { "_":"this" } ] } ] },
                            "worked":1
                          }
                        },
                        {
                          "set":{
                            "cosAngle":{ "_":[ { "_":[ "constant", "renderHeightRatio" ] }, "/", { "_":[ "this", "rayangle", "*", 0.01745, "cos" ] } ] },
                            "renderX":{ "_":[ "this", "rayangle", "*", { "_":[ "constant", "angleToX" ] }, "+", { "_":[ "constant", "renderCenterX" ] } ] },
                            "renderZ":{ "_":[ 1000, "-", { "_":[ "this", "distance" ] }, "floor" ] }
                          }
                        },
                        { "set":{ "renderHeight":{ "_":[ "this", "cosAngle", "/", { "_":[ "this", "distance" ] } ] } } },
                        {
                          "set":{
                            "renderX":{ "_":[ "this", "renderX", "-", { "_":[ "this", "renderHeight", "/", 2 ] } ] },
                            "textureScale":{ "_":[ "this", "renderHeight", "/", { "_":[ "constant", "textureHeight" ] } ] }
                          }
                        },
                        {
                          "as":{ "_":[ "this", "texture" ] },
                          "set":{
                            "zIndex":{ "_":[ "that", "renderZ" ] }, "x":{ "_":[ "that", "renderX", "+", { "_":[ "that", "renderHeight", "/", 2 ] } ] }, "y":{ "_":[ "constant", "renderCenterY" ] }, "frame":{ "_":[ "that", "textureFrame" ] },
                            "visible":1, "scale":{ "_":[ "that", "textureScale" ] }
                          }
                        },
                        {
                          "when":{ "_":[ "scene", "aiming", "not" ] },
                          "execute":{
                            "when":{ "_":[ "this", "isaimable" ] },
                            "execute":{
                              "when":{ "_":[ "this", "rayangle", "abs", "isLessThan", 6 ] },
                              "execute":{ "when":{ "_":[ "this", "rayangle", "abs", "isLessThan", 6 ] }, "as":{ "_":"scene" }, "set":{ "aiming":{ "_":"that" } } }
                            }
                          }
                        }
                      ]
                    }
                  },
                  {
                    "when":{ "_":[ "this", "collidesWith", { "_":[ "object", "texture" ] } ] },
                    "execute":[
                      { "set":{ "texture":{ "_":"that" } } },
                      {
                        "times":{ "_":[ "constant", "rayStep" ] },
                        "execute":{
                          "when":{ "_":[ "this", "doing" ] },
                          "execute":[
                            { "as":{ "_":[ "this", "rayCenter" ] }, "set":{ "x":{ "_":[ "that", "x" ] }, "y":{ "_":[ "that", "y" ] } } },
                            {
                              "set":{
                                "x":{ "_":[ "objectTyped", "player", "x", "+", { "_":[ "constant", "tileSizeRaycenter" ] } ] }, "y":{ "_":[ "objectTyped", "player", "y", "+", { "_":[ "constant", "tileSizeRaycenter" ] } ] }
                              }
                            },
                            { "subtract":1, "to":{ "_":[ "this", "distance" ] } },
                            { "translateBy":{ "angle":{ "_":[ "this", "rayCurrentAngle" ] }, "length":{ "_":[ "this", "distance" ] } } },
                            {
                              "when":{ "_":[ "this", "collidesWith", { "_":[ "object", "texture" ] } ] },
                              "set":{ "texture":{ "_":"that" } },
                              "elseExecute":{ "set":{ "doing":0 } }
                            }
                          ]
                        }
                      },
                      {
                        "as":{ "_":[ "this", "textureCenter" ] },
                        "set":{
                          "x":{ "_":[ "that", "texture", "x", "+", { "_":[ "constant", "tileSizeCenter" ] } ] }, "y":{ "_":[ "that", "texture", "y", "+", { "_":[ "constant", "tileSizeCenter" ] } ] }
                        }
                      },
                      { "set":{ "angleWatch":{ "_":[ "this", "textureCenter", "angleTo", { "_":[ "this", "rayCenter" ] }, "+", 45, "/", 90, "floor" ] } } },
                      {
                        "when":{ "_":[ "this", "angleWatch", "isEqualTo", 1 ] },
                        "set":{
                          "darken":2,
                          "textureId":{ "_":[ "this", "texture", "etexture" ] },
                          "textureX":{
                            "_":[
                              { "_":[ "constant", "tileSizeM1" ] },
                              "-",
                              { "_":[ "this", "rayCenter", "y", "+", { "_":[ "this", "texture", "slideY" ] }, "%", { "_":[ "constant", "tileSize" ] } ] },
                              "/",
                              { "_":[ "constant", "tileSizeM1" ] }
                            ]
                          }
                        },
                        "elseExecute":{
                          "when":{ "_":[ "this", "angleWatch", "isEqualTo", 2 ] },
                          "set":{
                            "textureId":{ "_":[ "this", "texture", "stexture" ] },
                            "textureX":{
                              "_":[
                                "this",
                                "rayCenter",
                                "x",
                                "+",
                                { "_":[ "this", "texture", "slideX" ] },
                                "%",
                                { "_":[ "constant", "tileSize" ] },
                                "/",
                                { "_":[ "constant", "tileSizeM1" ] }
                              ]
                            }
                          },
                          "elseExecute":{
                            "when":{ "_":[ "this", "angleWatch", "isEqualTo", 3 ] },
                            "set":{
                              "darken":2,
                              "textureId":{ "_":[ "this", "texture", "wtexture" ] },
                              "textureX":{
                                "_":[
                                  "this",
                                  "rayCenter",
                                  "y",
                                  "+",
                                  { "_":[ "this", "texture", "slideY" ] },
                                  "%",
                                  { "_":[ "constant", "tileSize" ] },
                                  "/",
                                  { "_":[ "constant", "tileSizeM1" ] }
                                ]
                              }
                            },
                            "elseExecute":{
                              "set":{
                                "textureId":{ "_":[ "this", "texture", "ntexture" ] },
                                "textureX":{
                                  "_":[
                                    { "_":[ "constant", "tileSizeM1" ] },
                                    "-",
                                    { "_":[ "this", "rayCenter", "x", "+", { "_":[ "this", "texture", "slideX" ] }, "%", { "_":[ "constant", "tileSize" ] } ] },
                                    "/",
                                    { "_":[ "constant", "tileSizeM1" ] }
                                  ]
                                }
                              }
                            }
                          }
                        }
                      },
                      { "when":{ "_":[ "this", "texture", "animated" ] }, "sum":{ "_":[ "scene", "textureAnimation" ] }, "to":{ "_":[ "this", "textureId" ] } }
                    ],
                    "elseExecute":{ "sum":{ "_":[ "constant", "rayStep" ] }, "to":{ "_":[ "this", "distance" ] } }
                  }
                ]
              }
            },
            {
              "when":{ "_":[ "this", "texture" ] },
              "execute":[
                { "set":{ "renderHeight":{ "_":[ "this", "cosAngle", "/", { "_":[ "this", "distance" ] } ] } } },
                {
                  "set":{
                    "textureScale":{ "_":[ "this", "renderHeight", "/", { "_":[ "constant", "textureHeight" ] } ] },
                    "textureYpos":{ "_":[ { "_":[ "constant", "renderCenterY" ] }, "-", { "_":[ "this", "renderHeight", "/", 2 ] }, "floor" ] }
                  }
                },
                {
                  "as":{ "_":[ "this", "renderer" ] },
                  "set":{
                    "height":{ "_":[ "that", "renderHeight" ] },
                    "zIndex":{ "_":[ 1000, "-", { "_":[ "that", "distance" ] }, "floor" ] }, "y":{ "_":[ "that", "textureYpos" ] },
                    "visible":1
                  }
                },
                {
                  "as":{ "_":[ "this", "renderer", "dimmer" ] },
                  "set":{
                    "tileX":{ "_":[ "that", "distance", "*", { "_":[ "constant", "distanceTodither" ] }, "floor", "+", { "_":[ "that", "darken" ] }, "*", { "_":[ "constant", "ditherWidth" ] } ] }, "height":{ "_":[ "that", "renderHeight" ] },
                    "y":{ "_":[ "that", "textureYpos", "%", 2, "*", -1 ] }
                  }
                },
                {
                  "as":{ "_":[ "this", "renderer", "texture" ] },
                  "set":{
                    "tileX":{ "_":[ "that", "textureId" ] },
                    "x":{ "_":[ { "_":[ "constant", "textureWidth" ] }, "*", { "_":[ "that", "textureScale" ] }, "-", { "_":[ "constant", "rayRenderWidthTrim" ] }, "*", { "_":[ "that", "textureX", "limitValue", [ 0, 1 ] ] }, "*", -1 ] },
                    "scale":{ "_":[ "that", "textureScale" ] }
                  }
                }
              ],
              "elseExecute":{ "as":{ "_":[ "this", "renderer" ] }, "set":{ "visible":0 } }
            }
          ]
        }
      }
    },
    "rayrenderer":{
      "execute":[
        {
          "object":{
            "type":"unoptimize",
            "image":"textures", "width":{ "_":[ "constant", "textureWidth" ] }, "height":{ "_":[ "constant", "textureHeight" ] },
            "originX":0, "originY":0
          },
          "assign":{ "_":"that" },
          "to":{ "_":[ "this", "texture" ] },
          "into":{ "_":"this" }
        },
        {
          "object":{ "image":"dither", "width":{ "_":[ "constant", "rayRenderWidth" ] }, "zIndex":1 },
          "assign":{ "_":"that" },
          "to":{ "_":[ "this", "dimmer" ] },
          "into":{ "_":"this" }
        }
      ]
    },
    "secret":{
      "type":"mapmodifier",
      "states":{
        "actions":{
          "name":"apply",
          "execute":[
            {
              "as":{ "_":[ "this", "complexCollidesWith", { "subject":{ "_":[ "object", "wall" ] }, "all":1 } ] },
              "set":{
                "type":[ "caninteract", "secret" ],
                "states":{
                  "actions":{
                    "name":"action",
                    "execute":[ { "set":{ "message":"You found a secret!" }, "execute":{ "_":[ "stencil", "codeShowMessage" ] }, "playAudio":"beep2" }, { "remove":1 } ]
                  }
                }
              }
            },
            { "remove":1 }
          ]
        }
      }
    },
    "spriteModel":{
      "type":"sprite",
      "width":{ "_":[ "constant", "tileSize" ] }, "height":{ "_":[ "constant", "tileSize" ] },
      "visible":0,
      "textureFrame":0,
      "textureTileX":0,
      "toInitialize":1,
      "worked":0,
      "states":{
        "execute":{
          "when":{ "_":[ "this", "toInitialize" ] },
          "execute":[
            {
              "object":{
                "type":"unoptimize",
                "image":"sprites", "tileX":{ "_":[ "that", "textureTileX" ] }, "width":{ "_":[ "constant", "textureHeight" ] }, "height":{ "_":[ "constant", "textureHeight" ] },
                "visible":0
              },
              "assign":{ "_":"that" },
              "to":{ "_":[ "this", "texture" ] },
              "into":{ "_":"scenehud" }
            },
            { "set":{ "toInitialize":0 } }
          ]
        }
      }
    },
    "fireRoamEnemyModel":{
      "set":{ "_":[ "stencil", "enemyModel" ] },
      "aimPrecision":[ -45, 45 ],
      "bulletSpeed":0.5,
      "bulletType":0,
      "fireTimer":30,
      "movingSpeed":0.3,
      "states":{
        "code":[
          {
            "name":"Execute",
            "data":{
              "when":{ "_":[ "this", "isdead", "not" ] },
              "execute":{
                "when":{ "_":[ "this", "fireTimer" ] },
                "execute":[
                  { "subtract":1, "to":{ "_":[ "this", "fireTimer" ] } },
                  {
                    "when":{ "_":[ "this", "fireTimer", "isEqualTo", 20 ] },
                    "set":{ "aimAngle":{ "_":[ "this", "angleTo", { "_":[ "objectTyped", "player" ] }, "+", { "_":[ "randomNumber", { "_":[ "this", "aimPrecision" ] } ] } ] } }
                  }
                ],
                "elseExecute":[
                  { "_":[ "stencil", "codeCanFire" ] },
                  {
                    "when":{ "_":[ "scene", "raybullet", "canFire" ] },
                    "execute":[
                      {
                        "when":{ "_":[ "this", "bulletType", "isEqualTo", 0 ] },
                        "execute":[
                          { "_":[ "stencil", "codeEnemyFireAudio" ] },
                          { "when":{ "_":[ "scene", "raybullet", "canFire", "isEqualTo", 2 ] }, "as":{ "_":[ "objectTyped", "player" ] }, "executeAction":"hit" },
                          { "set":{ "forceX":0, "forceY":0, "fireTimer":{ "_":[ "randomNumber", [ 25, 30 ] ] }, "isfiring":5 } }
                        ]
                      },
                      {
                        "when":{ "_":[ "this", "bulletType", "isEqualTo", 1 ] },
                        "execute":{
                          "when":{ "_":[ "scene", "raybullet", "canFire", "isEqualTo", 2 ] },
                          "execute":[
                            { "_":[ "stencil", "codeEnemyFireAudio" ] },
                            {
                              "object":{
                                "set":{ "_":[ "stencil", "fireballModel" ] },
                                "at":{ "_":"that" },
                                "execute":{ "applyVector":{ "angle":{ "_":[ "that", "aimAngle" ] }, "length":{ "_":[ "that", "bulletSpeed" ] } } },
                                "damage":{ "_":[ "that", "damage" ] },
                                "hits":"player",
                                "onExplodeHits":"player",
                                "textureTileX":192
                              }
                            },
                            { "set":{ "forceX":0, "forceY":0, "fireTimer":{ "_":[ "randomNumber", [ 25, 30 ] ] }, "isfiring":5 } }
                          ],
                          "elseExecute":{ "set":{ "fireTimer":25 }, "executeAction":"hasfired" }
                        }
                      }
                    ]
                  }
                ]
              }
            }
          },
          { "name":"Physics", "data":{ "walls":{ "type":"wall", "restitution":1 } } }
        ],
        "actions":{
          "name":"hasfired",
          "execute":{
            "when":{ "_":[ "this", "isdead", "not" ] },
            "applyVector":{ "angle":{ "_":[ "randomNumber", [ 0, 360 ] ] }, "length":{ "_":[ "this", "movingSpeed" ] } }
          }
        }
      }
    },
    "explosion":{
      "type":"spritealive",
      "set":{ "_":[ "stencil", "spriteModel" ] },
      "textureTileX":208,
      "states":[
        {
          "code":{
            "name":"Sequence",
            "data":[
              { "wait":2 },
              { "sum":{ "_":[ "constant", "textureHeight" ] }, "to":{ "_":[ "this", "texture", "tileX" ] } },
              { "cycles":4, "loopTo":0 },
              { "_":[ "stencil", "codeRemoveSprite" ] }
            ]
          }
        },
        { "name":"disabled", "execute":{ "execute":{ "_":[ "stencil", "codeRemoveSprite" ] } } }
      ]
    },
    "fireballModel":{
      "type":"spritealive",
      "set":{ "_":[ "stencil", "spriteModel" ] },
      "damage":10,
      "hits":"enemy",
      "onExplodeHits":"explodable",
      "textureTileX":176,
      "states":[
        {
          "code":[
            {
              "name":"Execute",
              "data":{
                "when":{
                  "_":[
                    "this",
                    "complexCollidesWith",
                    {
                      "subject":{ "_":[ "object", { "_":[ "this", "hits" ] } ] },
                      "hitbox":{ "width":2, "height":2, "x":{ "_":[ "constant", "tileSizeRaycenter" ] }, "y":{ "_":[ "constant", "tileSizeRaycenter" ] } }
                    }
                  ]
                },
                "executeAction":"explode"
              }
            },
            { "name":"Physics", "data":{ "walls":{ "type":"wall", "execute":{ "executeAction":"explode" } } } }
          ],
          "actions":{
            "name":"explode",
            "execute":[
              { "object":{ "set":{ "_":[ "stencil", "explosion" ] }, "at":{ "_":"that" } }, "playAudio":"explode2" },
              {
                "as":{ "_":[ "this", "complexCollidesWith", { "subject":{ "_":[ "object", { "_":[ "this", "onExplodeHits" ] } ] }, "all":1 } ] },
                "executeAction":"hit"
              },
              { "execute":{ "_":[ "stencil", "codeRemoveSprite" ] } }
            ]
          }
        },
        { "name":"disabled", "execute":{ "execute":{ "_":[ "stencil", "codeRemoveSprite" ] } } }
      ]
    },
    "pickableAmmo":{
      "set":{ "_":[ "stencil", "pickableModel" ] },
      "isWeapon":1,
      "states":{
        "actions":[
          {
            "name":"picked",
            "execute":[
              {
                "set":{
                  "toadd":{
                    "_":[
                      "stencil",
                      "dataWeaponAmmoPacks",
                      { "_":[ "this", "isWeapon" ] },
                      "*",
                      { "_":[ "stencil", "dataDifficulty", { "_":[ "variable", "difficulty" ] }, "pickableAmmoRatio" ] },
                      "floor"
                    ]
                  }
                }
              },
              { "when":{ "_":[ "this", "toadd", "not" ] }, "set":{ "toadd":1 } },
              { "sum":{ "_":[ "this", "toadd" ] }, "to":{ "_":[ "variable", "ammo", { "_":[ "this", "isWeapon" ] } ] } },
              {
                "when":{
                  "_":[ "variable", "ammo", { "_":[ "this", "isWeapon" ] }, "isGreaterThan", { "_":[ "stencil", "dataWeaponAmmoMax", { "_":[ "this", "isWeapon" ] } ] } ]
                },
                "assign":{ "_":[ "stencil", "dataWeaponAmmoMax", { "_":[ "this", "isWeapon" ] } ] },
                "to":{ "_":[ "variable", "ammo", { "_":[ "this", "isWeapon" ] } ] }
              },
              { "_":[ "stencil", "codeUpdateGui" ] }
            ]
          },
          {
            "name":"canbepicked",
            "execute":{
              "set":{
                "canBePicked":{
                  "_":[ "variable", "ammo", { "_":[ "this", "isWeapon" ] }, "isLessThan", { "_":[ "stencil", "dataWeaponAmmoMax", { "_":[ "this", "isWeapon" ] } ] } ]
                }
              }
            }
          }
        ]
      }
    },
    "pickableHealth":{
      "set":{ "_":[ "stencil", "pickableModel" ] },
      "label":"Medikit",
      "amount":20,
      "states":{
        "actions":[
          {
            "name":"picked",
            "execute":[
              { "sum":{ "_":[ "this", "amount" ] }, "to":{ "_":[ "variable", "health" ] } },
              { "when":{ "_":[ "variable", "health", "isGreaterThan", 100 ] }, "as":{ "_":"variable" }, "set":{ "health":100 } },
              { "_":[ "stencil", "codeUpdateGui" ] }
            ]
          },
          { "name":"canbepicked", "execute":{ "set":{ "canBePicked":{ "_":[ "variable", "health", "isLessThan", 100 ] } } } }
        ]
      }
    },
    "pickableModel":{
      "type":"canpick",
      "set":{ "_":[ "stencil", "spriteModel" ] },
      "label":"Item",
      "canBePicked":1,
      "states":{
        "actions":{
          "name":"pick",
          "execute":[
            { "executeAction":"canbepicked" },
            {
              "when":{ "_":[ "this", "canBePicked" ] },
              "execute":[
                { "executeAction":"picked", "playAudio":"beep2" },
                { "set":{ "message":{ "_":[ "Picked ", ".", { "_":[ "this", "label" ] }, ".", "." ] } }, "execute":{ "_":[ "stencil", "codeShowMessage" ] } },
                { "_":[ "stencil", "codeRemoveSprite" ] }
              ]
            }
          ]
        }
      }
    },
    "pickableKeyModel":{
      "set":{ "_":[ "stencil", "pickableModel" ] },
      "isKey":1,
      "states":{
        "actions":{
          "name":"picked",
          "execute":{
            "when":{ "_":[ "variable", "keys", { "_":[ "this", "isKey" ] }, "not" ] },
            "execute":[
              { "assign":1, "to":{ "_":[ "variable", "keys", { "_":[ "this", "isKey" ] } ] } },
              {
                "object":{
                  "image":"bar", "tileX":132, "tileY":40, "width":8, "height":8,
                  "zIndex":10010, "x":148, "y":{ "_":[ 146, "+", { "_":[ "that", "isKey", "*", 11 ] } ] }, "frame":{ "_":[ "that", "isKey" ] }
                },
                "into":{ "_":"scenehud" }
              }
            ]
          }
        }
      }
    },
    "pickableTreasureModel":{
      "type":"treasure",
      "set":{ "_":[ "stencil", "pickableModel" ] },
      "label":"Treasure",
      "states":{
        "actions":{ "name":"picked", "execute":[ { "sum":{ "_":[ "this", "value" ] }, "to":{ "_":[ "variable", "score" ] } }, { "_":[ "stencil", "codeUpdateGui" ] } ] }
      }
    },
    "pickableWeapon":{
      "set":{ "_":[ "stencil", "pickableModel" ] },
      "isWeapon":1,
      "states":{
        "actions":{
          "name":"picked",
          "execute":[
            {
              "when":{ "_":[ "variable", "weapons", { "_":[ "this", "isWeapon" ] }, "not" ] },
              "execute":[
                { "assign":1, "to":{ "_":[ "variable", "weapons", { "_":[ "this", "isWeapon" ] } ] } },
                { "as":{ "_":"variable" }, "set":{ "currentWeapon":{ "_":[ "that", "isWeapon" ] } } },
                { "_":[ "stencil", "codeSetWeapon" ] }
              ]
            },
            {
              "sum":{ "_":[ "stencil", "dataWeaponAmmoPacks", { "_":[ "this", "isWeapon" ] } ] },
              "to":{ "_":[ "variable", "ammo", { "_":[ "this", "isWeapon" ] } ] }
            },
            {
              "when":{
                "_":[ "variable", "ammo", { "_":[ "this", "isWeapon" ] }, "isGreaterThan", { "_":[ "stencil", "dataWeaponAmmoMax", { "_":[ "this", "isWeapon" ] } ] } ]
              },
              "assign":{ "_":[ "stencil", "dataWeaponAmmoMax", { "_":[ "this", "isWeapon" ] } ] },
              "to":{ "_":[ "variable", "ammo", { "_":[ "this", "isWeapon" ] } ] }
            },
            { "_":[ "stencil", "codeUpdateGui" ] }
          ]
        }
      }
    },
    "textureModel":{ "type":"texture", "width":{ "_":[ "constant", "tileSize" ] }, "height":{ "_":[ "constant", "tileSize" ] }, "visible":0, "slideX":0, "slideY":0 },
    "buttonModel":{
      "type":"caninteract",
      "set":{ "_":[ "stencil", "textureModel" ] },
      "buttonTexture":288,
      "orientation":0,
      "toInitialize":1,
      "toPress":1,
      "useKey":1,
      "states":{
        "execute":{
          "when":{ "_":[ "this", "toInitialize" ] },
          "execute":[
            {
              "set":{
                "buttonTexture":{ "_":[ "this", "buttonTexture", "+", { "_":[ { "_":[ "constant", "textureWidth" ] }, "*", { "_":[ "this", "useKey" ] } ] } ] },
                "toInitialize":0
              }
            },
            {
              "when":{
                "_":[
                  "this",
                  "complexCollidesWith",
                  { "subject":{ "_":[ "object", "wall" ] }, "hitbox":{ "width":{ "_":[ "constant", "buttonTester" ] }, "height":1, "x":-1, "y":1 } }
                ]
              },
              "set":{
                "type":"wall",
                "etexture":0,
                "ntexture":{ "_":[ "this", "buttonTexture" ] },
                "orientation":0,
                "stexture":{ "_":[ "this", "buttonTexture" ] },
                "wtexture":0
              },
              "elseExecute":{
                "set":{
                  "type":"wall",
                  "etexture":{ "_":[ "this", "buttonTexture" ] },
                  "ntexture":0,
                  "orientation":1,
                  "stexture":0,
                  "wtexture":{ "_":[ "this", "buttonTexture" ] }
                }
              }
            }
          ]
        },
        "actions":{
          "name":"action",
          "execute":{
            "when":{ "_":[ "this", "toPress" ] },
            "execute":[
              { "set":{ "toPress":0 }, "playAudio":"beep3" },
              { "as":{ "_":[ "object", { "_":[ "door-", ".", { "_":[ "this", "useKey" ] } ] } ] }, "remove":1 },
              {
                "when":{ "_":[ "this", "orientation" ] },
                "set":{ "removeType":"caninteract", "etexture":288, "ntexture":0, "stexture":0, "wtexture":288 },
                "elseExecute":{ "set":{ "removeType":"caninteract", "etexture":0, "ntexture":288, "stexture":288, "wtexture":0 } }
              },
              {
                "set":{ "message":{ "_":[ { "_":[ "stencil", "dataKeyNames", { "_":[ "this", "useKey" ] } ] }, ".", " doors opened." ] } },
                "execute":{ "_":[ "stencil", "codeShowMessage" ] }
              }
            ]
          }
        }
      }
    },
    "doorModel":{
      "type":[ "caninteract", "spritealive" ],
      "set":{ "_":[ "stencil", "textureModel" ] },
      "doorArea":{ "_":[ "new", {} ] },
      "doorTexture":48,
      "orientation":0,
      "position":{ "_":[ "constant", "tileSize" ] },
      "toInitialize":1,
      "useKey":0,
      "states":{
        "execute":{
          "when":{ "_":[ "this", "toInitialize" ] },
          "execute":[
            {
              "set":{
                "doorTexture":{ "_":[ "this", "doorTexture", "+", { "_":[ { "_":[ "constant", "textureWidth" ] }, "*", { "_":[ "this", "useKey" ] } ] } ] },
                "toInitialize":0
              }
            },
            {
              "as":{ "_":[ "this", "doorArea" ] },
              "set":{ "width":{ "_":[ "that", "width" ] }, "height":{ "_":[ "that", "height" ] }, "x":{ "_":[ "that", "x" ] }, "y":{ "_":[ "that", "y" ] } }
            },
            {
              "when":{
                "_":[
                  "this",
                  "complexCollidesWith",
                  { "subject":{ "_":[ "object", "wall" ] }, "hitbox":{ "width":{ "_":[ "constant", "doorTester" ] }, "height":1, "x":-1, "y":1 } }
                ]
              },
              "set":{
                "type":"wall",
                "etexture":0,
                "ntexture":{ "_":[ "this", "doorTexture" ] },
                "orientation":0,
                "stexture":{ "_":[ "this", "doorTexture" ] },
                "wtexture":0
              },
              "elseExecute":{
                "set":{
                  "type":"wall",
                  "etexture":{ "_":[ "this", "doorTexture" ] },
                  "ntexture":0,
                  "orientation":1,
                  "stexture":0,
                  "wtexture":{ "_":[ "this", "doorTexture" ] }
                }
              }
            }
          ]
        },
        "code":{
          "name":"Execute",
          "data":{
            "when":{ "_":[ "this", "opening" ] },
            "execute":[
              {
                "when":{ "_":[ "this", "position" ] },
                "subtract":{ "_":[ "constant", "doorSpeed" ] },
                "to":{ "_":[ "this", "position" ] },
                "elseExecute":{ "set":{ "opening":0 } }
              },
              { "executeAction":"update" }
            ],
            "elseExecute":{
              "when":{ "_":[ "this", "opened" ] },
              "subtract":1,
              "to":{ "_":[ "this", "opened" ] },
              "elseExecute":{
                "when":{ "_":[ "this", "closing" ] },
                "execute":[
                  {
                    "when":{ "_":[ "this", "doorArea", "collidesWith", { "_":[ "objectTyped", "player" ] } ] },
                    "set":{ "opened":10, "opening":1 },
                    "elseExecute":[
                      { "sum":{ "_":[ "constant", "doorSpeed" ] }, "to":{ "_":[ "this", "position" ] } },
                      { "when":{ "_":[ "this", "position", "isEqualTo", { "_":[ "constant", "tileSize" ] } ] }, "set":{ "closing":0 } }
                    ]
                  },
                  { "executeAction":"update" }
                ]
              }
            }
          }
        },
        "actions":[
          {
            "name":"action",
            "execute":{
              "when":{ "_":[ "variable", "keys", { "_":[ "this", "useKey" ] } ] },
              "execute":{ "set":{ "closing":1, "opened":40, "opening":1 }, "playAudio":"beep3" },
              "elseExecute":{
                "set":{ "message":{ "_":[ "Need the ", ".", { "_":[ "stencil", "dataKeyNames", { "_":[ "this", "useKey" ] } ] }, ".", " key or button." ] } },
                "execute":{ "_":[ "stencil", "codeShowMessage" ] }
              }
            }
          },
          {
            "name":"update",
            "execute":{
              "when":{ "_":[ "this", "orientation" ] },
              "execute":[
                { "set":{ "height":{ "_":[ "this", "position" ] }, "slideY":{ "_":[ 16, "-", { "_":[ "this", "position" ] } ] } } },
                {
                  "when":{ "_":[ "this", "position", "isEqualTo", { "_":[ "constant", "tileSize" ] } ] },
                  "removeType":"texture",
                  "elseExecute":{ "set":{ "type":"texture" } }
                }
              ],
              "elseExecute":[
                { "set":{ "width":{ "_":[ "this", "position" ] }, "slideX":{ "_":[ 16, "-", { "_":[ "this", "position" ] } ] } } },
                {
                  "when":{ "_":[ "this", "position", "isEqualTo", { "_":[ "constant", "tileSize" ] } ] },
                  "removeType":"texture",
                  "elseExecute":{ "set":{ "type":"texture" } }
                }
              ]
            }
          }
        ]
      }
    },
    "wallModel":{ "type":"wall", "set":{ "_":[ "stencil", "textureModel" ] } },
    "*":{
      "type":[ "player", "explodable" ],
      "width":{ "_":[ "constant", "tileSize" ] }, "height":{ "_":[ "constant", "tileSize" ] },
      "visible":0,
      "headAngle":{ "_":[ "scene", "headAngle" ] },
      "reloading":0,
      "states":{
        "code":[
          {
            "name":"Execute",
            "data":[
              { "as":{ "_":"scene" }, "set":{ "iswalking":1 } },
              { "multiply":0.5, "to":{ "_":[ "this", "forceX" ] } },
              { "multiply":0.5, "to":{ "_":[ "this", "forceY" ] } },
              { "when":{ "_":[ "keyRight", "isDown" ] }, "sum":4, "to":{ "_":[ "this", "headAngle" ] } },
              { "when":{ "_":[ "keyLeft", "isDown" ] }, "subtract":4, "to":{ "_":[ "this", "headAngle" ] } },
              {
                "when":{ "_":[ "keyUp", "isDown" ] },
                "applyVector":{ "angle":{ "_":[ "this", "headAngle" ] }, "length":1 },
                "elseExecute":{
                  "when":{ "_":[ "keyDown", "isDown" ] },
                  "applyVector":{ "angle":{ "_":[ "this", "headAngle" ] }, "length":-1 },
                  "elseExecute":{ "as":{ "_":"scene" }, "set":{ "iswalking":0 } }
                }
              },
              {
                "when":{ "_":[ "this", "reloading" ] },
                "subtract":1,
                "to":{ "_":[ "this", "reloading" ] },
                "elseExecute":{
                  "when":{ "_":[ "keyA", "isHit" ] },
                  "execute":{
                    "when":{ "_":[ "variable", "ammo", { "_":[ "variable", "currentWeapon" ] } ] },
                    "execute":[
                      {
                        "when":{ "_":[ "this", "weaponType", "isEqualTo", 0 ] },
                        "execute":[
                          { "playAudio":"fire" },
                          {
                            "as":{ "_":[ "scene", "raybullet" ] },
                            "execute":[
                              { "set":{ "x":{ "_":[ "that", "x", "+", 3 ] }, "y":{ "_":[ "that", "y", "+", 3 ] } } },
                              { "translateBy":{ "angle":{ "_":[ "that", "headAngle" ] }, "length":{ "_":[ "constant", "meleeDistance" ] } } },
                              { "set":{ "canFire":{ "_":[ "this", "collidesWith", { "_":[ "object", "canmelee" ] } ] } } }
                            ]
                          },
                          { "when":{ "_":[ "scene", "raybullet", "canFire" ] }, "as":{ "_":[ "scene", "raybullet", "canFire" ] }, "executeAction":"hit" }
                        ]
                      },
                      {
                        "when":{ "_":[ "this", "weaponType", "isEqualTo", 1 ] },
                        "execute":[ { "playAudio":"fire" }, { "as":{ "_":[ "scene", "aiming" ] }, "executeAction":"hit" } ]
                      },
                      {
                        "when":{ "_":[ "this", "weaponType", "isEqualTo", 2 ] },
                        "object":{
                          "set":{ "_":[ "stencil", "fireballModel" ] },
                          "at":{ "_":"that" },
                          "execute":{ "applyVector":{ "angle":{ "_":[ "that", "headAngle" ] }, "length":1.5 } },
                          "damage":{ "_":[ "that", "damage" ] }
                        },
                        "playAudio":"blam"
                      },
                      {
                        "subtract":{ "_":[ "stencil", "dataWeaponAmmoUsage", { "_":[ "variable", "currentWeapon" ] } ] },
                        "to":{ "_":[ "variable", "ammo", { "_":[ "variable", "currentWeapon" ] } ] }
                      },
                      { "set":{ "reloading":{ "_":[ "stencil", "dataWeaponReload", { "_":[ "variable", "currentWeapon" ] } ] } } },
                      { "_":[ "stencil", "codeUpdateGui" ] },
                      { "as":{ "_":"scene" }, "set":{ "isfiring":3 } }
                    ]
                  }
                }
              },
              {
                "when":{
                  "_":[
                    "this",
                    "complexCollidesWith",
                    {
                      "subject":{ "_":[ "object", "canpick" ] },
                      "hitbox":{ "width":2, "height":2, "x":{ "_":[ "constant", "tileSizeRaycenter" ] }, "y":{ "_":[ "constant", "tileSizeRaycenter" ] } }
                    }
                  ]
                },
                "as":{ "_":"that" },
                "executeAction":"pick"
              },
              {
                "when":{ "_":[ "keyC", "isHit" ] },
                "execute":[
                  {
                    "as":{ "_":[ "scene", "raybullet" ] },
                    "execute":[
                      { "set":{ "x":{ "_":[ "that", "x", "+", 3 ] }, "y":{ "_":[ "that", "y", "+", 3 ] } } },
                      { "translateBy":{ "angle":{ "_":[ "that", "headAngle" ] }, "length":{ "_":[ "constant", "actionDistance" ] } } },
                      { "set":{ "canFire":{ "_":[ "this", "collidesWith", { "_":[ "object", "caninteract" ] } ] } } }
                    ]
                  },
                  { "when":{ "_":[ "scene", "raybullet", "canFire" ] }, "as":{ "_":[ "scene", "raybullet", "canFire" ] }, "executeAction":"action" }
                ]
              },
              {
                "when":{ "_":[ "keyB", "isHit" ] },
                "execute":[
                  { "set":{ "doing":1 } },
                  {
                    "times":{ "_":[ "stencil", "dataWeaponDamage", "count" ] },
                    "execute":{
                      "when":{ "_":[ "this", "doing" ] },
                      "execute":[
                        {
                          "as":{ "_":"variable" },
                          "set":{ "currentWeapon":{ "_":[ "variable", "currentWeapon", "+", 1, "%", { "_":[ "stencil", "dataWeaponDamage", "count" ] } ] } }
                        },
                        { "when":{ "_":[ "variable", "weapons", { "_":[ "variable", "currentWeapon" ] } ] }, "set":{ "doing":0 } }
                      ]
                    }
                  },
                  { "_":[ "stencil", "codeSetWeapon" ] }
                ]
              },
              { "when":{ "_":[ "this", "headAngle", "isLessThan", 0 ] }, "set":{ "headAngle":{ "_":[ 360, "+", { "_":[ "this", "headAngle" ] } ] } } }
            ]
          },
          { "name":"Physics", "data":{ "walls":{ "type":"wall", "restitution":0 } } }
        ],
        "actions":{
          "name":"hit",
          "execute":[
            { "when":{ "_":[ "cheat", "unlimitedHealth", "not" ] }, "subtract":{ "_":[ "that", "damage" ] }, "to":{ "_":[ "variable", "health" ] } },
            { "when":{ "_":[ "variable", "health", "isLessThan", 0 ] }, "as":{ "_":"variable" }, "set":{ "health":0 } },
            { "as":{ "_":[ "scene", "footerbar" ] }, "set":{ "bgcolor":"#f00" }, "playAudio":"explode" },
            { "as":{ "_":"scene" }, "set":{ "blackbar":5 } },
            { "_":[ "stencil", "codeUpdateGui" ] },
            { "when":{ "_":[ "variable", "health", "not" ] }, "as":{ "_":"scene" }, "set":{ "state":"dead" }, "playAudio":"dead" }
          ]
        }
      }
    },
    "c":{
      "set":{ "_":[ "stencil", "fireRoamEnemyModel" ] },
      "bulletType":1,
      "damage":{ "_":[ 20, "*", { "_":[ "stencil", "dataDifficulty", { "_":[ "variable", "difficulty" ] }, "enemyDamageRatio" ] } ] },
      "health":10,
      "score":80,
      "textureTileX":512
    },
    "i":{
      "set":{ "_":[ "stencil", "fireRoamEnemyModel" ] },
      "aimPrecision":[ -20, 20 ],
      "bulletType":1,
      "damage":{ "_":[ 10, "*", { "_":[ "stencil", "dataDifficulty", { "_":[ "variable", "difficulty" ] }, "enemyDamageRatio" ] } ] },
      "score":40,
      "textureTileX":432
    },
    "o":{ "set":{ "_":[ "stencil", "fireRoamEnemyModel" ] } },
    "s":{ "set":{ "_":[ "stencil", "fireRoamEnemyModel" ] }, "textureTileX":352 },
    "(":{ "set":{ "_":[ "stencil", "pickableAmmo" ] }, "label":"Bullets", "isWeapon":1, "textureTileX":80 },
    ")":{ "set":{ "_":[ "stencil", "pickableAmmo" ] }, "label":"Rockets", "isWeapon":2, "textureTileX":96 },
    "+":{
      "set":{ "_":[ "stencil", "pickableHealth" ] },
      "amount":{ "_":[ 20, "*", { "_":[ "stencil", "dataDifficulty", { "_":[ "variable", "difficulty" ] }, "pickableHealthRatio" ] } ] },
      "textureTileX":112
    },
    "e":{ "set":{ "_":[ "stencil", "pickableKeyModel" ] }, "label":"Red key", "isKey":1, "textureTileX":0 },
    "f":{ "set":{ "_":[ "stencil", "pickableKeyModel" ] }, "label":"Green key", "isKey":2, "textureTileX":16 },
    "v":{ "set":{ "_":[ "stencil", "pickableKeyModel" ] }, "label":"Blue key", "isKey":3, "textureTileX":32 },
    "a":{ "value":20, "set":{ "_":[ "stencil", "pickableTreasureModel" ] }, "textureTileX":144 },
    "q":{ "value":10, "set":{ "_":[ "stencil", "pickableTreasureModel" ] }, "textureTileX":128 },
    "z":{ "value":50, "set":{ "_":[ "stencil", "pickableTreasureModel" ] }, "textureTileX":144 },
    "1":{ "set":{ "_":[ "stencil", "pickableWeapon" ] }, "label":"Gun", "isWeapon":1, "textureTileX":48 },
    "2":{ "set":{ "_":[ "stencil", "pickableWeapon" ] }, "label":"Rocket launcher", "isWeapon":2, "textureTileX":64 },
    "h":{ "set":{ "_":[ "stencil", "buttonModel" ] }, "useKey":2 },
    "n":{ "set":{ "_":[ "stencil", "buttonModel" ] }, "useKey":3 },
    "t":{ "set":{ "_":[ "stencil", "buttonModel" ] }, "useKey":1 },
    "b":{ "type":"door-3", "set":{ "_":[ "stencil", "doorModel" ] }, "useKey":3 },
    "g":{ "type":"door-2", "set":{ "_":[ "stencil", "doorModel" ] }, "useKey":2 },
    "r":{ "type":"door-1", "set":{ "_":[ "stencil", "doorModel" ] }, "useKey":1 },
    "x":{ "set":{ "_":[ "stencil", "doorModel" ] }, "doorTexture":240 },
    "|":{ "set":{ "_":[ "stencil", "doorModel" ] } },
    "#":{ "set":{ "_":[ "stencil", "wallModel" ] }, "etexture":528, "ntexture":528, "stexture":528, "wtexture":528 },
    "C":{ "set":{ "_":[ "stencil", "wallModel" ] }, "animated":1, "etexture":912, "ntexture":912, "stexture":912, "wtexture":912 },
    "D":{ "set":{ "_":[ "stencil", "wallModel" ] }, "etexture":816, "ntexture":816, "stexture":816, "wtexture":816 },
    "I":{ "set":{ "_":[ "stencil", "wallModel" ] }, "etexture":768, "ntexture":768, "stexture":768, "wtexture":768 },
    "O":{ "set":{ "_":[ "stencil", "wallModel" ] }, "etexture":864, "ntexture":864, "stexture":864, "wtexture":864 },
    "S":{ "set":{ "_":[ "stencil", "wallModel" ] }, "animated":1, "etexture":1008, "ntexture":1008, "stexture":1008, "wtexture":1008 },
    "T":{ "set":{ "_":[ "stencil", "wallModel" ] }, "etexture":624, "ntexture":672, "stexture":672, "wtexture":624 },
    "W":{ "set":{ "_":[ "stencil", "wallModel" ] }, "etexture":624, "ntexture":624, "stexture":624, "wtexture":624 },
    "X":{ "set":{ "_":[ "stencil", "wallModel" ] }, "etexture":720, "ntexture":720, "stexture":720, "wtexture":720 },
    "Y":{ "set":{ "_":[ "stencil", "wallModel" ] }, "etexture":528, "ntexture":576, "stexture":576, "wtexture":528 },
    "Z":{ "set":{ "_":[ "stencil", "wallModel" ] }, "etexture":672, "ntexture":624, "stexture":624, "wtexture":672 },
    "w":{
      "type":"caninteract",
      "set":{ "_":[ "stencil", "wallModel" ] },
      "toInitialize":1,
      "states":{
        "execute":{
          "when":{ "_":[ "this", "toInitialize" ] },
          "execute":[
            { "set":{ "toInitialize":0 } },
            {
              "when":{
                "_":[
                  "this",
                  "complexCollidesWith",
                  { "subject":{ "_":[ "object", "wall" ] }, "hitbox":{ "width":{ "_":[ "constant", "buttonTester" ] }, "height":1, "x":-1, "y":1 } }
                ]
              },
              "set":{ "type":"wall", "etexture":0, "ntexture":480, "stexture":480, "wtexture":0 },
              "elseExecute":{ "set":{ "type":"wall", "etexture":480, "ntexture":0, "stexture":0, "wtexture":480 } }
            }
          ]
        },
        "actions":{ "name":"action", "execute":{ "as":{ "_":"scene" }, "set":{ "state":"win" }, "playAudio":"explode2" } }
      }
    },
    "~":{ "set":{ "_":[ "stencil", "wallModel" ] }, "etexture":576, "ntexture":528, "stexture":528, "wtexture":576 }
  },
  "execute":[
    {
      "as":{ "_":"constant" },
      "set":{
        "ditherTones":5,
        "ditherWidth":8,
        "doorSpeed":0.5,
        "rayDistance":60,
        "rayStep":7,
        "rays":32,
        "renderHeight":152,
        "renderWidth":256,
        "sightAngle":90,
        "textureHeight":16,
        "textureWidth":48,
        "tileSize":8
      }
    },
    {
      "as":{ "_":"constant" },
      "set":{
        "actionDistance":{ "_":[ "constant", "tileSize", "+", 1 ] },
        "aliveDistance":{ "_":[ "constant", "rayDistance", "+", 10 ] },
        "audioDistance":{ "_":[ "constant", "rayDistance", "/", 2 ] },
        "disableDistance":{ "_":[ "constant", "rayDistance", "+", 20 ] },
        "distanceTodither":{ "_":[ "constant", "ditherTones", "/", { "_":[ "constant", "rayDistance" ] } ] },
        "doorTester":{ "_":[ "constant", "tileSize", "+", 2 ] },
        "meleeDistance":1,
        "rayRenderWidth":{ "_":[ "constant", "renderWidth", "/", { "_":[ "constant", "rays" ] }, "floor" ] },
        "rayStartAngle":{ "_":[ "constant", "sightAngle", "/", -2 ] },
        "rayStepAngle":{ "_":[ "constant", "sightAngle", "/", { "_":[ "constant", "rays" ] } ] },
        "raySteps":{ "_":[ "constant", "rayDistance", "/", { "_":[ "constant", "rayStep" ] } ] },
        "renderHeightRatio":{ "_":[ "constant", "renderHeight", "*", { "_":[ "constant", "renderHeight" ] }, "/", { "_":[ "constant", "rayDistance" ] } ] },
        "renderY":{ "_":[ 152, "-", { "_":[ "constant", "renderHeight" ] }, "/", 2 ] },
        "tileSizeCenter":{ "_":[ "constant", "tileSize", "-", 1, "/", 2 ] },
        "tileSizeM1":{ "_":[ "constant", "tileSize", "-", 1 ] },
        "tileSizeRaycenter":{ "_":[ "constant", "tileSize", "-", 2, "/", 2 ] }
      }
    },
    {
      "as":{ "_":"constant" },
      "set":{
        "fireSteps":{ "_":[ "constant", "aliveDistance", "/", { "_":[ "constant", "tileSizeM1" ] }, "floor" ] },
        "leftLivingArea":{ "_":[ "constant", "disableDistance", "*", -1 ] },
        "rayRenderWidthTrim":{ "_":[ "constant", "rayRenderWidth", "+", 1 ] },
        "renderCenterY":{ "_":[ "constant", "renderY", "+", { "_":[ "constant", "renderHeight", "/", 2 ] } ] },
        "renderWidth":{ "_":[ "constant", "rayRenderWidth", "*", { "_":[ "constant", "rays" ] } ] },
        "sizeLivingArea":{ "_":[ "constant", "disableDistance", "*", 2, "+", { "_":[ "constant", "tileSize" ] } ] }
      }
    },
    {
      "as":{ "_":"constant" },
      "set":{
        "angleToX":{ "_":[ "constant", "renderWidth", "/", { "_":[ "constant", "sightAngle" ] } ] },
        "renderX":{ "_":[ 256, "-", { "_":[ "constant", "renderWidth" ] }, "/", 2, "floor" ] }
      }
    },
    { "as":{ "_":"constant" }, "set":{ "renderCenterX":{ "_":[ "constant", "renderX", "+", { "_":[ "constant", "renderWidth", "/", 2 ] }, "floor" ] } } },
    { "when":{ "_":[ "storage", "hiscore", "not" ] }, "as":{ "_":"storage" }, "set":{ "hiscore":0 } },
    { "as":{ "_":"variable" }, "set":{ "hiscore":{ "_":[ "storage", "hiscore" ] } } }
  ],
  "scenes":{
    "intro":{
      "states":[
        {
          "execute":[
            {"object":{
              "x":0,"y":0,"width":256,"height":192,"image":"title"
            }},
            {"set":{"state":"intro"}}
          ]
        },
        {
          "name":"intro",
          "execute":[
            { "as":{ "_":[ "object", "intro" ] }, "remove":1 },
            {
              "object":[
                {
                  "type":"intro",
                  "box":"label", "width":256,
                  "zIndex":100, "x":0, "y":143,
                  "color":"#fff", "outline":"#000",
                  "font":"spectrum", "fontSize":20, "lineHeight":20, "textAlign":"center", "html":"PRESS START", 
                  "states":{ "code":{ "name":"Sequence", "data":[ { "set":{ "visible":0 }, "wait":20 }, { "set":{ "visible":1 }, "wait":20, "loopTo":0 } ] } }
                },
                {
                  "type":"intro",
                  "box":"label", "width":256,
                  "zIndex":100, "x":0, "y":172,
                  "color":"#fff", "outline":"#000",
                  "font":"spectrum", "fontSize":20, "lineHeight":20, "textAlign":"center", "html":{ "_":[ "HI-SCORE: ", ".", { "_":[ "variable", "hiscore" ] } ] }
                }
              ]
            }
          ],
          "code":{ "name":"Execute", "data":{ "when":{ "_":[ "keyA", "isHit" ] }, "execute":{ "set":{ "state":"difficulty" }, "playAudio":"blam" } } }
        },
        {
          "name":"difficulty",
          "execute":[
            { "as":{ "_":"variable" }, "set":{ "difficulty":1 } },
            { "as":{ "_":[ "object", "intro" ] }, "remove":1 },
            {
              "object":[
                {
                  "type":"intro",
                  "box":"label", "width":256, "height":40,
                  "zIndex":100, "x":0, "y":8,
                  "color":"#f00", "outline":"#000",
                  "font":"spectrum", "fontSize":40, "lineHeight":40, "textAlign":"center", "html":"NEW GAME"
                },
                {
                  "type":"intro",
                  "image":"bar", "tileY":40, "width":28, "height":40, "zIndex":100,
                  "x":36,
                  "states":{
                    "code":{
                      "name":"Execute",
                      "data":[
                        {
                          "set":{
                            "y":{ "_":[ 58, "+", { "_":[ "variable", "difficulty", "*", 40 ] } ] }, "frame":{ "_":[ "stencil", "dataDifficulty", { "_":[ "variable", "difficulty" ] }, "frame" ] }
                          }
                        },
                        { "when":{ "_":[ "keyUp", "isHit" ] }, "subtract":1, "to":{ "_":[ "variable", "difficulty" ] }, "playAudio":"fire" },
                        { "when":{ "_":[ "keyDown", "isHit" ] }, "sum":1, "to":{ "_":[ "variable", "difficulty" ] }, "playAudio":"fire" },
                        {
                          "when":{ "_":[ "variable", "difficulty", "isLessThan", 0 ] },
                          "as":{ "_":"variable" },
                          "set":{ "difficulty":{ "_":[ "stencil", "dataDifficulty", "count", "-", 1 ] } }
                        },
                        {
                          "when":{ "_":[ "variable", "difficulty", "isGreaterEqualThan", { "_":[ "stencil", "dataDifficulty", "count" ] } ] },
                          "as":{ "_":"variable" },
                          "set":{ "difficulty":0 }
                        }
                      ]
                    }
                  }
                }
              ]
            },
            { "set":{ "counter":0 } },
            {
              "times":{ "_":[ "stencil", "dataDifficulty", "count" ] },
              "execute":[
                {
                  "object":{
                    "type":"intro",
                    "box":"label", "width":200, "height":40,
                    "zIndex":100, "x":84, "y":{ "_":[ 58, "+", { "_":[ "that", "counter", "*", 40 ] } ] },
                    "color":"#fff", "outline":"#000",
                    "font":"spectrum", "fontSize":20, "lineHeight":40, "html":{ "_":[ "stencil", "dataDifficulty", { "_":[ "that", "counter" ] }, "name" ] }
                  }
                },
                { "sum":1, "to":{ "_":[ "this", "counter" ] } }
              ]
            }
          ],
          "code":{
            "name":"Execute",
            "data":[
              { "when":{ "_":[ "keyB", "isHit" ] }, "set":{ "playAudio":"blam", "state":"intro" } },
              {
                "when":{ "_":[ "keyA", "isHit" ] },
                "execute":[
                  {
                    "as":{ "_":"variable" },
                    "set":{ "ammo":{ "_":[ "new", [ 1, 0, 0 ] ] }, "score":0, "stage":1, "weapons":{ "_":[ "new", [ 1, 0, 0 ] ] } },
                    "playAudio":"blam"
                  },
                  { "_":[ "stencil", "codeGotoStage" ] }
                ]
              }
            ]
          }
        }
      ]
    },
    "stage1":{
      "object":[
        { "set":{ "_":[ "stencil", "secret" ] }, "width":8, "height":8, "x":208, "y":104 },
        { "set":{ "_":[ "stencil", "secret" ] }, "width":8, "height":8, "x":80, "y":40 }
      ],
      "set":{ "_":[ "stencil", "stageModel" ] },
      "ceilingColor":"#007f7f",
      "floorColor":"#7f7f7f",
      "headAngle":90,
      "music":"bgm1",
      "stageName":"The castle",
      "tilemap":{
        "tileWidth":{ "_":[ "constant", "tileSize" ] },
        "tileHeight":{ "_":[ "constant", "tileSize" ] },
        "map":[
          "      #####                                         ",
          "      #+(z#             WWTWTWWTWTWW                ",
          "      #+(z##      ######W          WWWWW            ",
          "      #+(z #      #     W o        WqqqZ            ",
          "      #+(z #      #     |   aqqa   | ozW            ",
          "     ##Y##Y##Y##  # (   W        o WaaaZ            ",
          "##n###+        ####   ##W          WWWWW            ",
          "#  o # o      o#   o  # WWWWWWWrWWWW                ",
          "# z  h     o   |     o#      W   W                  ",
          "#    #a        #      #      W o W                  ",
          "##|###aa      o########      W   W                  ",
          "#   ###Y##|##Y##             W ( W                  ",
          "~   #   #   #          WWWWWWW   WWWW               ",
          "#   #####   #          W  Z    (    Z               ",
          "~   #  o#   #          W  WWWW   WWWW               ",
          "#   | ( ~   ~          W++W  W ( W                  ",
          "#   #  z#   #          W++W  W   W                  ",
          "# ( ##### o #          WWWW #WW|WW#        ##Y###Y##",
          "#   #   #   #             ###     #####Y#Y##       #",
          "#   ######|###            #o       o#      #  +o  q#",
          "#   ##       #            ~a   a   a|      | o   oq#",
          "~    #  ( q  ~            #         ###    #    + q#",
          "# (  |       #            ###     ### #  ###       #",
          "~    # o+ (o ~              ###|###   # o# ##Y###Y##",
          "#   ##       #               #   #    #  ###      # ",
          "#   ######g###               ~ o ~    #    #   o  # ",
          "# ( #   #   #                ~ ( ~    # o  | o   ot ",
          "#   #   #   #                #   #    #    #      # ",
          "#   #   #   #            ######|#############Y###Y# ",
          "~ o #Y### o ##Y##WWWW    #+  #   #   #              ",
          "#               #  oW    #   | ( |  z#              ",
          "~      (     (  | o W    #   #   #   #              ",
          "#               #  oW    #####   #####              ",
          "#####Y####b###Y##WWWW    ##### ( #####              ",
          "        #   #            #   #   #   #              ",
          "        # z #            #* 1|   |  z#              ",
          "        #   #            #   #   #   #              ",
          "        WWxWW            #####   #####              ",
          "        W   W            #  (  (  ( o#              ",
          "        W   W            #o          #              ",
          "        WWwWW            ##Y#######Y##              "
        ]
      }
    },
    "stage2":{
      "object":[
        { "set":{ "_":[ "stencil", "secret" ] }, "width":8, "height":8, "x":432, "y":96 },
        { "set":{ "_":[ "stencil", "secret" ] }, "width":8, "height":8, "x":400, "y":120 },
        { "set":{ "_":[ "stencil", "secret" ] }, "width":8, "height":8, "x":8, "y":48 }
      ],
      "set":{ "_":[ "stencil", "stageModel" ] },
      "ceilingColor":"#000",
      "floorColor":"#00007f",
      "headAngle":0,
      "music":"bgm2",
      "stageName":"Space dock",
      "tilemap":{
        "tileWidth":{ "_":[ "constant", "tileSize" ] },
        "tileHeight":{ "_":[ "constant", "tileSize" ] },
        "map":[
          "                                       XSSCSSCCC           ",
          "                                       X    i()C           ",
          "                                       X      (X           ",
          "#w#                               XXXXXX CC XX SXXXX       ",
          "# #                               X    |   ssX |   X       ",
          "# ##Y##Y##                    XXXXX XXXX CC XX XXX X       ",
          "##S      #Y##Y#    DDDDDDD   XX  XX X  S      (X X XX      ",
          "# | c    #((((DDDD D     D XXX    X|X  S    i()X X  X      ",
          "~ C c o  #+qqqD  DDD  O  DXX   I    X  XXXXXXXXXXXX XX     ",
          "~ C c o  x    b2s|     s |(    1(   X      X+i    X  X     ",
          "# | c    #+qqqD  DDD  O  DXX    I   X      X+    )XX X     ",
          "##S      #))))DDDD D     D XXX    XXX      X+i    XX|XXXXXX",
          "  ##Y##Y##Y##Y#    DDDDDDD   XX *XX        XXXX|XXX   X   X",
          "                              XXXX            X X X   XXX X",
          "                                      XXXXXXXXX XXX   X X X",
          "                                      X+     (Xz  X  iX X X",
          "                              XXXXXXX X  cI   XXXXXX|XXXX|X",
          "                              Xa   (XXX      vX    X Xes  X",
          "                          XXXXX  i    |     c X    X X+  XX",
          "                          X   |  I  XXX  iI   X XXXX XXXXX ",
          "                          X XXXa   (X X      (X X((C S((X  ",
          "                    XCCCX X+  XXXXXXX XXXXXXXXX X  S C  X  ",
          "                    X   XXXXX X   XSCSX         X       X  ",
          "                    X i   g   X   X   X     XXXXX i   i X  ",
          "                  XXX   XXXgXXXXXXX   XXXXX X   XXXX|XXXX  ",
          "                  X |   X XsXX      i     X Xi+    XzX     ",
          "                  X X   X X XX            X X     DXrXD    ",
          "                  X XCCSX X(XX  XSSX XSCX X X  s  D   D    ",
          "                  X    (X X XI  X aX(X  X XXI     | i D    ",
          "                  XXX|XXX X  |  | cX(X+i|   |     D   D    ",
          "                  X   X   X XI  X aX(X  X XXI     DDDDD    ",
          "                  XX XX   X XX  XCSX XSCX X X  s  X        ",
          "                 XX  X    XsXX            X Xi+   X        ",
          "                 X  XX    X(XX      i     X X     X        ",
          "                 X XX     X XXXXXXX   XXXXX XXXXXXX        ",
          "                 X XDDDDDDD|DDDDDDX   X                    ",
          "                 X XD       D    DXCCSX                    ",
          "                 XsXD ODD O D DO DDDDDD                    ",
          "                 X XD   O D DsD  OD   D                    ",
          "                 X XDDD   DsD DD  | ifD                    ",
          "                 X  | DDDDD O DD OD   D                    ",
          "                 XXXD   s     D   DDDDD                    ",
          "                    DDDDDDDDDDDDDDD                        "
        ]
      }
    },
    "stage3":{
      "object":{
        "width":256, "height":1000,
        "x":0, "y":192,
        "font":"spectrum", "textAlign":"center", "html":"WOOM<br>(c) 2017<br>A tiny early FPS tribute<br><br><br>Graphics by:<br>KesieV Norimaki<br><br><br>Code by:<br>KesieV Norimaki<br><br><br>Music:<br><br>Branch Of Mind<br>by Ed Polinski<br><br>Darkness balup<br>by Fatal Snipe<br><br><br>Big thanks to:<br>Bianca<br>Il Marsicano<br>The JTTA Team<br>Stefano \"Il Kusagari\" Fioretto<br>Romolo Camplani<br>All Akihabara age friends<br><br><br><br><br>Hail to the king, baby!",
        "forceY":-0.5,
        "states":{ "code":{ "name":"Physics" } }
      },
      "execute":{ "_":[ "stencil", "codeCheckHiscore" ] },
      "playAudio":"bgm1",
      "states":{
        "code":[
          { "name":"Sequence", "data":[ { "wait":1740 }, { "gotoScene":"intro", "withTransition":3, "withChannel":"music" } ] },
          { "name":"Execute", "data":{ "when":{ "_":[ "keyA", "isHit" ] }, "gotoScene":"intro", "withTransition":3, "withChannel":"music" } }
        ]
      }
    }
  }
}