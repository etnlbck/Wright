{
  "name":"PvP",
  "author":"KesieV",
  "year":2018,
  "genre":"Arena shooter",
  "description":"<p>In 1993, Sensible Software published a game that will be remembered by Amiga and PC players for long time for its refined and fun design: the arcade strategy game <a href='https://en.wikipedia.org/wiki/Cannon_Fodder_(video_game)'>Cannon Fodder</a>. The game mood was well represented by its catchy reggae <a href='https://www.youtube.com/watch?v=wSpBmGR5r7g'>title song</a> which, suprisingly for the time, featured lyrics:</p><p><i>War!<br>Never been so much fun!<br>War!<br>Never been so much fun!<br>War!<br>Never been so much fun!<br>War!<br>Never been so much fun!<br><br>Go to your brother<br>Kill him with your gun<br>Leave him dying in his uniform<br>Dying in the sun</i></p><p>Its irreverent words suggests a common, insidious and unconfortable question. Have you ever wondered why destroying and killing <i>is so much fun</i> that's featured in almost any entertainment form?</p><p>You, as book, movie or game fan, should try to find your own answer - we are all part of this <i>perverse</i> audience. I'll share my thoughts in the meanwhile - and I'd like to proceed by elimination.</p><p>The first thing I've ruled out is the role of realism. Killing is engaging even if it's acted by adults playing <a href='https://en.wikipedia.org/wiki/Laser_tag'>laser tag</a> or <a href='https://en.wikipedia.org/wiki/Paintball'>paintball</a> or by kids playing cops and robbers. Even in less immersive versions, from the interactive board games like <a href='https://en.wikipedia.org/wiki/Chess'>chess</a> and <a href='https://en.wikipedia.org/wiki/Risk_(game)'>Risk</a> (best know in Italy with its 1968s variant <a href='https://en.wikipedia.org/wiki/RisiKo!'>RisiKo!</a>) to the passive movies or books, you can feel the thrill of annihilating your enemy and the torturing afraid of being killed.</p><p>The second thing I'd like to leave out is the cathartic effect of violence in entertainment. Don't get me wrong - In my opinion it plays a key role but I'm leaving that out because it's a <a href='https://en.wikipedia.org/wiki/Aestheticization_of_violence'>controversial topic</a> that needs way too much subjectivity in order to be dealt with. Regardless of the author intentions, the catharsis happens in the viewer, according to its culture, mind and mood. And we're <i>all different people</i>.</p><p>The third thing to rule out is the role of the attacker and the attacked. Even if they are good guys shooting at the bad guys, cruel masterminds putting its plan in motion, <a href='https://en.wikipedia.org/wiki/Gladiator'>slaves</a> or heroes fighting in the arena or a vigilante making its own law, killing is still fun to play and watch.</p><p>But what about violence as way to create and quickly solve an <i>imbalance of rights</i>?</p><p>Imagine the scene of a man walking near a bear. The bear may attack the man for food for his <i>right to live</i>. The man may react and defend himself (or run) in order to keep his <i>right to live</i>. Based on the its <i>empathy</i>, the viewer may take the part of one of the two fighters.</p><p>And, paraphrasing the inspiring series <a href='https://en.wikipedia.org/wiki/Danganronpa'>Danganrompa</a> (2010), that's the perfect time for a <i>killing</i>.</p><p>It's the perfect time to create an <i>imbalance</i> and spectacularize its resolution before the viewer eyes. Give the man a shotgun and a broken leg to the bear. Or bloody claws to the bear and a broken leg to the man. Or give a shotgun to <i>both of them</i>!</p><p>The slave will slay even his fellow prisoners for his <i>right to be free</i> and the viewer will even empathize with the murderous bad guy, since he's acting for his <i>right to realize their aspirations</i>.</p><p>So, in my humble opinion, a reason why <i>killing is fun</i> is because it's the most immediate and understandable implementation of a debate about rights. Justice and injustice, common sense and reason, philosophy and religion, even intelligence and ignorance. Everything is solved in a quick and elegant dance of bullets and blades and the judgement - right or wrong - is indisputable.</p><p>And since solving any debate peacefully always needs hours - even years - of boring and precise words, just <i>killing</i> it forever pulling a trigger is humanity's wet dream.</p><p><i>(Since killing is still not legal - or morally unaccepted - internet helped people to get creative. Today's bullets for killing ideas are short, harsh and not necessarily true sentences - but let's keep the trolling topic for another time.)</i></p><p>Plot!</p><p>Bring a friend, plug one or two gamepads and get ready for a constructive debate! In this split screen <a href='https://en.wikipedia.org/wiki/First-person_shooter'>arena shooter</a> game all you have to do is configure our dream arena, join the game, find the appropriate weapon and shot your arguments in your friend's face! It features a lot of <i>discussion</i> modes, so try them all and be constructive!</p><p>On the main menu use UP/DOWN for selecting an option and LEFT/RIGHT for changing it. A gray box will show a tip about the selected option. Once you're OK, press the A BUTTON. In the arena use UP/DOWN/LEFT/RIGHT for moving, the A BUTTON for firing and hold down the B BUTTON for strafing (i.e. locking your aim and move). On the main menu you can change the control scheme from <i>direction</i> to <i>rotation</i> - in rotation mode use LEFT/RIGHT for rotating and UP/DOWN for moving forward and backward. Use the A BUTTON for firing. Good luck and may the best wins!</p>",
  "screenshots":[ "pvp-1.png", "pvp-2.png" ],
  "hardware":{
    "width":384,
    "height":192,
    "filter":"retro",
    "controls":"twoplayers"
  },
  "audioChannels":{
    "sfx":{ "volume":1, "samples":[ "fire", "beep2", "scream", "scream2", "blam", "explode", "beep", "bigfire", "rampup" ] },
    "music":{ "volume":0.8, "looping":1, "samples":[ "bgm1", "bgm2", "bgm3", "bgmx" ] },
    "speak":{
      "volume":0.8,
      "samples":[
        "pvp",
        "fragged",
        "gameover",
        "go",
        "machinegun",
        "pistol",
        "ready",
        "set",
        "shotgun",
        "sniper",
        "wow",
        "incredible",
        "redwins",
        "bluewins",
        "drawgame"
      ]
    }
  },
  "cheats":{},
  "resources":{
    "bgm1":"bgm1.ogg",
    "bgm2":"bgm2.ogg",
    "bgm3":"bgm3.ogg",
    "bgmx":"bgmx.ogg",
    "spectrum":"spectrum.font",
    "sprites":"sprites.png",
    "title":"title.png",
    "beep":"../default/zxsounds/beep.ogg",
    "beep2":"../default/zxsounds/beep2.ogg",
    "bigfire":"../default/zxsounds/bigfire.ogg",
    "blam":"../default/zxsounds/blam.ogg",
    "bluewins":"sounds/bluewins.ogg",
    "diamonds":"textures/diamonds.png",
    "dirt":"textures/dirt.png",
    "drawgame":"sounds/drawgame.ogg",
    "explode":"../default/zxsounds/explode.ogg",
    "fire":"../default/zxsounds/fire.ogg",
    "fragged":"sounds/fragged.ogg",
    "gameover":"sounds/gameover.ogg",
    "go":"sounds/go.ogg",
    "incredible":"sounds/incredible.ogg",
    "iron":"textures/iron.png",
    "machinegun":"sounds/machinegun.ogg",
    "pistol":"sounds/pistol.ogg",
    "pvp":"sounds/pvp.ogg",
    "rampup":"../default/zxsounds/rampup.ogg",
    "ready":"sounds/ready.ogg",
    "redwins":"sounds/redwins.ogg",
    "scream":"../default/zxsounds/scream.ogg",
    "scream2":"../default/zxsounds/scream2.ogg",
    "set":"sounds/set.ogg",
    "shotgun":"sounds/shotgun.ogg",
    "sniper":"sounds/sniper.ogg",
    "wow":"sounds/wow.ogg"
  },
  "stencils":{
    "codeRemove":[ { "as":{ "_":[ "this", "mirror" ] }, "remove":1 }, { "remove":1 } ],
    "codeUpdate":{
      "as":{ "_":[ "this", "mirror" ] },
      "set":{
        "tileX":{ "_":[ "that", "tileX" ] }, "tileY":{ "_":[ "that", "tileY" ] },
        "x":{ "_":[ "that", "x" ] }, "y":{ "_":[ "that", "y" ] }, "frame":{ "_":[ "that", "frame" ] },
        "visible":{ "_":[ "that", "visible" ] }, "angle":{ "_":[ "that", "angle" ] },
        "border":{ "_":[ "that", "border" ] }, "color":{ "_":[ "that", "color" ] }
      }
    },
    "codeUpdateCrown":{
      "as":{ "_":[ "objectTyped", "crown" ] },
      "execute":[
        { "_":[ "variable", "gamemode", "decideWinner" ] },
        {
          "when":{ "_":[ "this", "winner", "isEqualTo", 1 ] },
          "set":{ "x":{ "_":[ "constant", "p1crownx" ] }, "visible":1 },
          "elseExecute":{
            "when":{ "_":[ "this", "winner", "isEqualTo", 2 ] },
            "set":{ "x":{ "_":[ "constant", "p2crownx" ] }, "visible":1 },
            "elseExecute":{ "set":{ "visible":0 } }
          }
        }
      ]
    },
    "codeWinHighestFrags":{
      "when":{ "_":[ "scene", "player1frags", "isGreaterThan", { "_":[ "scene", "player2frags" ] } ] },
      "set":{ "winner":1 },
      "elseExecute":{
        "when":{ "_":[ "scene", "player2frags", "isGreaterThan", { "_":[ "scene", "player1frags" ] } ] },
        "set":{ "winner":2 },
        "elseExecute":{ "set":{ "winner":0 } }
      }
    },
    "codeWinHighestScore":{
      "when":{ "_":[ "scene", "player1score", "isGreaterThan", { "_":[ "scene", "player2score" ] } ] },
      "set":{ "winner":1 },
      "elseExecute":{
        "when":{ "_":[ "scene", "player2score", "isGreaterThan", { "_":[ "scene", "player1score" ] } ] },
        "set":{ "winner":2 },
        "elseExecute":{ "set":{ "winner":0 } }
      }
    },
    "modelPopupLabel":{
      "width":100, "height":10,
      "zIndex":10000, "x":{ "_":[ "this", "xCenteredWith", { "_":"that" } ] }, "y":{ "_":[ "that", "y", "-", 5 ] },
      "color":"#fff",
      "font":"spectrum", "lineHeight":12, "outline":"#000", "textAlign":"center",
      "speed":0.5,
      "states":{
        "code":{
          "name":"Sequence",
          "data":[ { "subtract":{ "_":[ "this", "speed" ] }, "to":{ "_":[ "this", "y" ] }, "wait":1, "loop":1, "cycles":15 }, { "remove":1 } ]
        }
      }
    },
    "stageModel":{
      "droneSpeed":{ "_":[ "variable", "speed", "droneSpeed" ] },
      "player1frags":0,
      "player1lives":{ "_":[ "variable", "lives" ] },
      "player1score":0,
      "player1speed":{ "_":[ "variable", "speed", "base" ] },
      "player2frags":0,
      "player2lives":{ "_":[ "variable", "lives" ] },
      "player2score":0,
      "player2speed":{ "_":[ "variable", "speed", "base" ] },
      "reloadRatio":{ "_":[ "variable", "reloadRatio" ] },
      "second":25,
      "time":{ "_":[ "variable", "time" ] },
      "states":[
        {
          "execute":[
            { "_":[ "variable", "gamemode", "prepareGui" ] },
            {
              "object":[
                {
                  "type":"hud",
                  "hudType":"label", "label":"%number|scene.time|0|3%",
                  "width":{ "_":[ "constant", "fw" ] }, "height":30,
                  "zIndex":100, "x":0, "y":0,
                  "color":"#fff",
                  "font":"spectrum", "fontSize":40, "lineHeight":30, "outline":"#000", "textAlign":"center"
                },
                { "type":"crown", "image":"sprites", "tileY":50, "width":8, "height":8, "zIndex":100, "y":{ "_":[ "constant", "crownY" ] }, "visible":0 },
                { "image":"sprites", "tileY":98, "width":16, "height":16, "zIndex":99, "x":{ "_":[ "constant", "p1ciconx" ] }, "y":{ "_":[ "constant", "hudY" ] } },
                { "image":"sprites", "tileY":98, "width":16, "height":16, "zIndex":99, "x":{ "_":[ "constant", "p2ciconx" ] }, "y":{ "_":[ "constant", "hudY" ] } },
                {
                  "type":"hud",
                  "hudType":"label", "label":"%number|objectTyped.player1.health|0|3%",
                  "width":40, "height":10,
                  "zIndex":100, "x":{ "_":[ "constant", "p1clabelx" ] }, "y":{ "_":[ "constant", "hudLabelY" ] },
                  "color":"#fff",
                  "font":"spectrum", "lineHeight":10, "outline":"#000", "textAlign":"center",
                  "states":{
                    "code":{
                      "name":"Execute",
                      "data":{
                        "when":{ "_":[ "objectTyped", "player1", "health", "or", 0, "isLessThan", 30 ] },
                        "set":{ "color":"#f00" },
                        "elseExecute":{ "set":{ "color":"#fff" } }
                      }
                    }
                  }
                },
                {
                  "type":"hud",
                  "hudType":"label", "label":"%number|objectTyped.player2.health|0|3%",
                  "width":40, "height":10,
                  "zIndex":100, "x":{ "_":[ "constant", "p2clabelx" ] }, "y":{ "_":[ "constant", "hudLabelY" ] },
                  "color":"#fff",
                  "font":"spectrum", "lineHeight":10, "outline":"#000", "textAlign":"center",
                  "states":{
                    "code":{
                      "name":"Execute",
                      "data":{
                        "when":{ "_":[ "objectTyped", "player2", "health", "or", 0, "isLessThan", 30 ] },
                        "set":{ "color":"#f00" },
                        "elseExecute":{ "set":{ "color":"#fff" } }
                      }
                    }
                  }
                },
                {
                  "image":"sprites", "tileY":66, "width":16, "height":16,
                  "zIndex":100, "x":{ "_":[ "constant", "p1riconx" ] }, "y":{ "_":[ "constant", "hudY" ] },
                  "states":{ "code":{ "name":"Execute", "data":{ "set":{ "frame":{ "_":[ "objectTyped", "player1", "weaponId", "or", 0 ] } } } } }
                },
                {
                  "type":"hud",
                  "hudType":"label", "label":"%number|objectTyped.player1.ammo|0|3%",
                  "width":40, "height":10,
                  "zIndex":100, "x":{ "_":[ "constant", "p1rlabelx" ] }, "y":{ "_":[ "constant", "hudLabelY" ] },
                  "color":"#fff",
                  "font":"spectrum", "lineHeight":10, "outline":"#000", "textAlign":"center",
                  "states":{
                    "code":{
                      "name":"Execute",
                      "data":{ "when":{ "_":[ "objectTyped", "player1", "reloadTimer" ] }, "set":{ "color":"#f00" }, "elseExecute":{ "set":{ "color":"#fff" } } }
                    }
                  }
                },
                {
                  "image":"sprites", "tileY":66, "width":16, "height":16,
                  "zIndex":100, "x":{ "_":[ "constant", "p2riconx" ] }, "y":{ "_":[ "constant", "hudY" ] },
                  "states":{ "code":{ "name":"Execute", "data":{ "set":{ "frame":{ "_":[ "objectTyped", "player2", "weaponId", "or", 0 ] } } } } }
                },
                {
                  "type":"hud",
                  "hudType":"label", "label":"%number|objectTyped.player2.ammo|0|3%",
                  "width":40, "height":10,
                  "zIndex":100, "x":{ "_":[ "constant", "p2rlabelx" ] }, "y":{ "_":[ "constant", "hudLabelY" ] },
                  "color":"#fff",
                  "font":"spectrum", "lineHeight":10, "outline":"#000", "textAlign":"center",
                  "states":{
                    "code":{
                      "name":"Execute",
                      "data":{ "when":{ "_":[ "objectTyped", "player2", "reloadTimer" ] }, "set":{ "color":"#f00" }, "elseExecute":{ "set":{ "color":"#fff" } } }
                    }
                  }
                },
                {
                  "type":"map1box",
                  "width":{ "_":[ "constant", "sw" ] }, "height":{ "_":[ "constant", "sh" ] },
                  "x":{ "_":[ "constant", "s1x" ] }, "y":-1,
                  "border":"#7f7f7f"
                },
                {
                  "type":"map2box",
                  "width":{ "_":[ "constant", "sw" ] }, "height":{ "_":[ "constant", "sh" ] },
                  "x":{ "_":[ "constant", "s2x" ] }, "y":-1,
                  "border":"#7f7f7f"
                }
              ]
            },
            { "object":{ "type":"map2", "image":{ "_":[ "scene", "mapWallpaper" ] }, "x":0, "y":192 }, "into":{ "_":[ "objectTyped", "map2box" ] } },
            {
              "object":{ "type":"map1", "image":{ "_":[ "scene", "mapWallpaper" ] }, "x":0, "y":192, "tilemap":{ "_":[ "scene", "mapTilemap" ] } },
              "into":{ "_":[ "objectTyped", "map1box" ] }
            },
            { "object":{ "_":[ "scene", "mapObject" ] }, "into":{ "_":[ "objectTyped", "map1" ] } },
            {
              "as":{ "_":[ "objectTyped", "map2" ] },
              "set":{ "width":{ "_":[ "objectTyped", "map1", "width" ] }, "height":{ "_":[ "objectTyped", "map1", "height" ] } }
            }
          ],
          "code":{
            "name":"Sequence",
            "data":[
              { "wait":1 },
              { "when":{ "_":[ "variable", "gamemode", "useHill", "not" ] }, "as":{ "_":[ "objectTyped", "hill" ] }, "execute":{ "_":[ "stencil", "codeRemove" ] } },
              {
                "when":{ "_":[ "variable", "weapons" ] },
                "as":{ "_":[ "object", "weaponspawnpoint" ] },
                "set":{ "frame":{ "_":[ "variable", "weapons" ] }, "weaponId":{ "_":[ "variable", "weapons" ] } }
              },
              {
                "as":{ "_":[ "objectTyped", "map1" ] },
                "set":{
                  "x":{ "_":[ "objectTyped", "spawnpoint1", "x", "-", { "_":[ "constant", "cx" ] }, "*", -1 ] }, "y":{ "_":[ "objectTyped", "spawnpoint1", "y", "-", { "_":[ "constant", "cy" ] }, "*", -1 ] }
                }
              },
              {
                "as":{ "_":[ "objectTyped", "map2" ] },
                "set":{
                  "x":{ "_":[ "objectTyped", "spawnpoint2", "x", "-", { "_":[ "constant", "cx" ] }, "*", -1 ] }, "y":{ "_":[ "objectTyped", "spawnpoint2", "y", "-", { "_":[ "constant", "cy" ] }, "*", -1 ] }
                }
              },
              {
                "object":[
                  {
                    "type":"intro",
                    "width":{ "_":[ "constant", "fw2" ] }, "height":22,
                    "zIndex":200, "x":-1, "y":-30,
                    "bgcolor":"#000", "border":"#fff",
                    "font":"spectrum", "lineHeight":22, "textAlign":"center", "html":{ "_":[ "variable", "map", "label" ] },
                    "spin":80,
                    "states":{
                      "code":{
                        "name":"Execute",
                        "data":{
                          "when":{ "_":[ "this", "spin", "isGreaterThan", 0.1 ] },
                          "sum":{ "_":[ "this", "spin" ] },
                          "to":{ "_":[ "this", "y" ] },
                          "set":{ "spin":{ "_":[ "this", "spin", "*", 0.5 ] } }
                        }
                      }
                    }
                  },
                  {
                    "type":"intro",
                    "width":{ "_":[ "constant", "fw2" ] }, "height":22,
                    "zIndex":200, "x":-1, "y":{ "_":[ "constant", "fh" ] },
                    "bgcolor":"#000", "border":"#fff", "color":"#f0f",
                    "font":"spectrum", "lineHeight":22, "textAlign":"center", "html":{ "_":[ "variable", "gamemode", "label" ] },
                    "spin":80,
                    "states":{
                      "code":{
                        "name":"Execute",
                        "data":{
                          "when":{ "_":[ "this", "spin", "isGreaterThan", 0.1 ] },
                          "subtract":{ "_":[ "this", "spin" ] },
                          "to":{ "_":[ "this", "y" ] },
                          "set":{ "spin":{ "_":[ "this", "spin", "*", 0.5 ] } }
                        }
                      }
                    }
                  }
                ]
              },
              { "_":[ "variable", "gamemode", "onStart" ] },
              { "wait":10 },
              { "when":{ "_":[ "variable", "speak" ] }, "playAudio":"ready" },
              { "playAudio":"bigfire" },
              {
                "object":{
                  "type":"intro",
                  "width":{ "_":[ "constant", "fw" ] }, "height":40,
                  "zIndex":300, "x":0, "y":{ "_":[ "constant", "kiy" ] },
                  "scale":0,
                  "font":"spectrum", "fontSize":60, "lineHeight":40, "outline":"#000", "textAlign":"center", "html":"READY?",
                  "timer":0,
                  "states":{
                    "code":[
                      {
                        "name":"Execute",
                        "data":[
                          { "when":{ "_":[ "this", "scale", "isLessThan", 1 ] }, "sum":0.3, "to":{ "_":[ "this", "scale" ] } },
                          { "sum":0.1, "to":{ "_":[ "this", "timer" ] } },
                          { "set":{ "angle":{ "_":[ "this", "timer", "sin", "*", 10 ] } } }
                        ]
                      },
                      {
                        "name":"Sequence",
                        "data":[
                          { "set":{ "color":"#f00" }, "wait":1 },
                          { "set":{ "color":"#fff" }, "wait":1, "cycles":12, "loopTo":-1 },
                          { "when":{ "_":[ "variable", "speak" ] }, "playAudio":"set" },
                          { "set":{ "html":"SET" }, "playAudio":"bigfire" },
                          { "set":{ "color":"#00f" }, "wait":1 },
                          { "set":{ "color":"#fff" }, "wait":1, "cycles":12, "loopTo":-1 },
                          { "set":{ "html":{ "_":[ "randomValue", [ "GO!", "KILL!", "FRAG!", "FIRE!", "SPAWN!", "DIE!" ] ] } }, "playAudio":"explode" },
                          { "when":{ "_":[ "variable", "speak" ] }, "playAudio":"go" },
                          { "playAudio":{ "_":[ "variable", "bgm", "song" ] } },
                          { "set":{ "color":"#f0f" }, "wait":1 },
                          { "set":{ "color":"#fff" }, "wait":1, "cycles":12, "loopTo":-1 },
                          { "as":{ "_":[ "object", "intro" ] }, "remove":1 }
                        ]
                      }
                    ]
                  }
                }
              },
              { "wait":48 },
              { "as":{ "_":[ "object", "spawnpoint" ] }, "set":{ "state":"run" } },
              { "as":{ "_":[ "object", "hill" ] }, "set":{ "state":"run" } },
              { "_":[ "variable", "gamemode", "onFrame" ] },
              {
                "as":{ "_":[ "randomObject", { "_":[ "object", "animated" ] } ] },
                "execute":[
                  { "set":{ "angle":{ "_":[ "randomValue", [ 0, 90, 180, 270 ] ] } } },
                  { "as":{ "_":[ "this", "mirror" ] }, "set":{ "angle":{ "_":[ "that", "angle" ] } } }
                ]
              },
              {
                "when":{ "_":[ "this", "second" ] },
                "subtract":1,
                "to":{ "_":[ "this", "second" ] },
                "elseExecute":{
                  "when":{ "_":[ "this", "time" ] },
                  "subtract":1,
                  "to":{ "_":[ "this", "time" ] },
                  "set":{ "second":25 },
                  "execute":{ "_":[ "variable", "gamemode", "onSecond" ] }
                }
              },
              { "wait":1, "loopTo":-3, "until":{ "_":[ "this", "time", "not" ] } },
              { "set":{ "state":"endgame" } }
            ]
          }
        },
        {
          "name":"endgame",
          "code":{
            "name":"Sequence",
            "data":[
              { "playAudio":"explode", "stopChannel":"music" },
              { "as":{ "_":[ "object", "gameelement" ] }, "set":{ "state":"frozen" } },
              { "_":[ "variable", "gamemode", "decideWinner" ] },
              { "wait":30 },
              { "when":{ "_":[ "variable", "speak" ] }, "playAudio":"gameover", "stopChannel":"speak" },
              {
                "object":{
                  "type":"intro",
                  "width":{ "_":[ "constant", "fw" ] }, "height":40,
                  "zIndex":200, "x":0, "y":{ "_":[ "constant", "kiy" ] },
                  "scale":0,
                  "color":"#f0f",
                  "font":"spectrum", "fontSize":60, "lineHeight":40, "outline":"#000", "textAlign":"center", "html":"GAME OVER",
                  "states":{
                    "code":[
                      { "name":"Sequence", "data":[ { "set":{ "color":"#f00" }, "wait":1 }, { "set":{ "color":"#f0f" }, "wait":1, "loopTo":0 } ] },
                      {
                        "name":"Sequence",
                        "data":[
                          { "sum":0.2, "to":{ "_":[ "this", "scale" ] }, "wait":1, "loop":1, "cycles":5 },
                          { "wait":25 },
                          { "playAudio":"bigfire" },
                          {
                            "when":{ "_":[ "scene", "winner", "isEqualTo", 1 ] },
                            "execute":[
                              { "when":{ "_":[ "variable", "speak" ] }, "playAudio":"redwins" },
                              {
                                "object":[
                                  { "set":{ "_":[ "stencil", "endIndicator" ] }, "x":0, "html":"WIN", "color1":"#f00", "color2":"#7f0000", "timerSpeed":0.1 },
                                  {
                                    "set":{ "_":[ "stencil", "endIndicator" ] },
                                    "x":{ "_":[ "constant", "hfw" ] },
                                    "html":"LOSE",
                                    "color1":"#7f7f7f",
                                    "color2":"#7f7f7f",
                                    "timerSpeed":0
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "when":{ "_":[ "scene", "winner", "isEqualTo", 2 ] },
                            "execute":[
                              { "when":{ "_":[ "variable", "speak" ] }, "playAudio":"bluewins" },
                              {
                                "object":[
                                  { "set":{ "_":[ "stencil", "endIndicator" ] }, "x":0, "html":"LOSE", "color1":"#7f7f7f", "color2":"#7f7f7f", "timerSpeed":0 },
                                  { "set":{ "_":[ "stencil", "endIndicator" ] }, "x":{ "_":[ "constant", "hfw" ] }, "html":"WIN", "color1":"#0ff", "color2":"#fff", "timerSpeed":0.1 }
                                ]
                              }
                            ]
                          },
                          {
                            "when":{ "_":[ "scene", "winner", "not" ] },
                            "execute":[
                              { "when":{ "_":[ "variable", "speak" ] }, "playAudio":"drawgame" },
                              {
                                "object":[
                                  { "set":{ "_":[ "stencil", "endIndicator" ] }, "x":0, "html":"DRAW", "color1":"#7f7f7f", "color2":"#7f7f7f", "timerSpeed":0.1 },
                                  {
                                    "set":{ "_":[ "stencil", "endIndicator" ] },
                                    "x":{ "_":[ "constant", "hfw" ] },
                                    "html":"DRAW",
                                    "color1":"#7f7f7f",
                                    "color2":"#7f7f7f",
                                    "timerSpeed":-0.1
                                  }
                                ]
                              }
                            ]
                          },
                          { "subtract":0.2, "to":{ "_":[ "this", "scale" ] }, "wait":1, "loop":1, "cycles":5 },
                          { "set":{ "visible":0 } },
                          { "wait":75 },
                          { "wait":1, "loop":1, "until":{ "_":[ "keyA", "isHit", "or", { "_":[ "keyA2", "isHit" ] } ] } },
                          { "gotoScene":"menu", "withTransition":3 }
                        ]
                      }
                    ]
                  }
                },
                "playAudio":"bigfire"
              }
            ]
          }
        }
      ]
    },
    "playerModel":{
      "type":[ "gameelement", "player" ],
      "image":"sprites", "tileX":16, "width":16, "height":16,
      "zIndex":10,
      "hitbox":{ "width":12, "height":12, "x":2, "y":2 },
      "angle":0,
      "execute":{ "_":[ "stencil", "makeSplitScreen" ] },
      "speed":0,
      "aimAngle":0,
      "ammo":0,
      "animTimer":0,
      "buttoning":1,
      "dangle":0,
      "firing":0,
      "hailCount":0,
      "hailTimer":0,
      "health":{ "_":[ "variable", "health" ] },
      "hitTimer":0,
      "invulnerability":125,
      "moveAngle":0,
      "reloadTimer":0,
      "weaponData":0,
      "weaponId":0,
      "states":[
        {
          "code":[
            {
              "name":"Execute",
              "data":[
                { "executeAction":"getControls" },
                { "_":[ "this", "codeControl" ] },
                {
                  "when":{ "_":[ "this", "kFire", "isHit" ] },
                  "execute":{
                    "when":{ "_":[ "this", "firing", "not", "and", { "_":[ "this", "ammo" ] }, "and", { "_":[ "this", "weaponData" ] } ] },
                    "execute":[
                      { "set":{ "firing":1, "hailCount":0, "hailTimer":0, "reloadTimer":-1 } },
                      { "when":{ "_":[ "variable", "ammo" ] }, "subtract":1, "to":{ "_":[ "this", "ammo" ] } }
                    ],
                    "elseExecute":{ "playAudio":"fire" }
                  }
                },
                {
                  "when":{ "_":[ "this", "firing" ] },
                  "execute":{
                    "when":{ "_":[ "this", "reloadTimer", "isEqualTo", -1 ] },
                    "execute":{
                      "when":{ "_":[ "this", "hailTimer" ] },
                      "subtract":1,
                      "to":{ "_":[ "this", "hailTimer" ] },
                      "elseExecute":[
                        { "playAudio":{ "_":[ "that", "weaponData", "sfx" ] } },
                        {
                          "times":{ "_":[ "this", "weaponData", "times" ] },
                          "object":{
                            "set":{ "_":[ "stencil", "bullet" ] },
                            "tileX":{ "_":[ "that", "weaponData", "tileX" ] }, "tileY":{ "_":[ "that", "bulletTileY" ] },
                            "x":{ "_":[ "that", "x", "+", 4 ] }, "y":{ "_":[ "that", "y", "+", 4 ] },
                            "angle":{ "_":[ "that", "aimAngle", "+", { "_":[ "randomNumber", [ { "_":[ "that", "weaponData", "precision", "*", -1 ] }, { "_":[ "that", "weaponData", "precision" ] } ] ] } ] },
                            "execute":[
                              { "applyVector":{ "angle":{ "_":[ "this", "angle" ] }, "length":{ "_":[ "that", "weaponData", "speed" ] } } },
                              { "_":[ "stencil", "makeSplitScreen" ] }
                            ],
                            "coverRange":{ "_":[ "that", "weaponData", "coverRange" ] },
                            "damage":{ "_":[ "that", "weaponData", "damage" ] },
                            "fromScore":{ "_":[ "that", "myScore" ] },
                            "hits":{ "_":[ "that", "hits" ] },
                            "life":{ "_":[ "that", "weaponData", "life" ] }
                          },
                          "into":{ "_":[ "objectTyped", "map1" ] }
                        },
                        { "sum":1, "to":{ "_":[ "this", "hailCount" ] } },
                        {
                          "when":{ "_":[ "this", "hailCount", "isEqualTo", { "_":[ "this", "weaponData", "hailCount" ] } ] },
                          "execute":{
                            "when":{ "_":[ "this", "ammo" ] },
                            "set":{ "reloadTimer":{ "_":[ "this", "weaponData", "reloadTimer", "*", { "_":[ "scene", "reloadRatio" ] }, "ceil" ] } },
                            "elseExecute":{ "set":{ "firing":0, "reloadTimer":0 } }
                          },
                          "elseExecute":{ "set":{ "hailTimer":{ "_":[ "this", "weaponData", "hailTimer" ] } } }
                        }
                      ]
                    },
                    "elseExecute":{
                      "when":{ "_":[ "this", "reloadTimer" ] },
                      "subtract":1,
                      "to":{ "_":[ "this", "reloadTimer" ] },
                      "elseExecute":{ "set":{ "firing":0 }, "playAudio":"beep" }
                    }
                  }
                },
                {
                  "set":{ "angle":{ "_":[ "this", "aimAngle" ] }, "speed":{ "_":[ "this", "speed", "limitValue", { "_":[ "scene", { "_":[ "this", "maxSpeed" ] } ] } ] } }
                },
                {
                  "when":{ "_":[ "this", "invulnerability" ] },
                  "subtract":1,
                  "to":{ "_":[ "this", "invulnerability" ] },
                  "set":{ "visible":{ "_":[ "this", "visible", "not" ] } },
                  "elseExecute":{ "set":{ "visible":1 } }
                },
                {
                  "when":{ "_":[ "this", "hitTimer" ] },
                  "subtract":1,
                  "to":{ "_":[ "this", "hitTimer" ] },
                  "elseExecute":[ { "when":{ "_":[ "this", "collidesWith", { "_":[ "object", "hurt" ] } ] }, "executeAction":"hit" }, { "set":{ "hitTimer":5 } } ]
                },
                {
                  "when":{ "_":[ "this", "speed", "abs", "isGreaterThan", 0.1 ] },
                  "execute":{
                    "when":{ "_":[ "this", "animTimer" ] },
                    "subtract":1,
                    "to":{ "_":[ "this", "animTimer" ] },
                    "elseExecute":{ "set":{ "frame":{ "_":[ "this", "frame", "+", 1, "%", 4 ] }, "animTimer":2 } }
                  },
                  "elseExecute":{ "set":{ "frame":0 } }
                },
                { "applyVector":{ "angle":{ "_":[ "this", "moveAngle" ] }, "length":{ "_":[ "this", "speed" ] } } }
              ]
            },
            { "name":"Physics", "data":{ "walls":{ "type":"solid" } } },
            {
              "name":"Execute",
              "data":[
                {
                  "when":{ "_":[ "this", "buttoning" ] },
                  "execute":{
                    "when":{ "_":[ "this", "collidesWith", { "_":[ "object", "button" ] } ] },
                    "execute":[ { "set":{ "buttoning":0 } }, { "as":{ "_":"that" }, "executeAction":"press" } ]
                  },
                  "elseExecute":{ "when":{ "_":[ "this", "collidesWith", { "_":[ "object", "button" ] }, "not" ] }, "set":{ "buttoning":1 } }
                },
                { "_":[ "stencil", "codeUpdate" ] },
                { "executeAction":"centerCamera" }
              ]
            }
          ],
          "actions":{
            "name":"hit",
            "execute":{
              "when":{ "_":[ "this", "invulnerability", "not" ] },
              "execute":[
                { "_":[ "variable", "gamemode", "onHit" ] },
                { "playAudio":{ "_":[ "randomValue", [ "scream", "scream2" ] ] } },
                {
                  "object":{
                    "set":{ "_":[ "stencil", "splatModel" ] },
                    "tileY":{ "_":[ "that", "tileY" ] },
                    "x":{ "_":[ "that", "x", "+", { "_":[ "randomNumber", [ -4, 4 ] ] } ] }, "y":{ "_":[ "that", "y", "+", { "_":[ "randomNumber", [ -4, 4 ] ] } ] },
                    "execute":{ "_":[ "stencil", "makeSplitScreen" ] }
                  },
                  "into":{ "_":[ "objectTyped", "map1" ] }
                },
                { "subtract":{ "_":[ "that", "damage" ] }, "to":{ "_":[ "this", "health" ] } },
                {
                  "when":{ "_":[ "this", "health", "isLessEqualThan", 0 ] },
                  "set":{ "health":0 },
                  "execute":{ "_":[ "stencil", "codeRemove" ] },
                  "executeAction":"killed"
                }
              ]
            }
          }
        },
        { "name":"frozen", "execute":[ { "set":{ "visible":1 } }, { "_":[ "stencil", "codeUpdate" ] } ] }
      ]
    },
    "player1":{
      "type":"player1",
      "set":{ "_":[ "stencil", "playerModel" ] },
      "bulletTileY":50,
      "codeControl":{ "_":[ "stencil", "dataControls", { "_":[ "variable", "player1controls" ] }, "code" ] },
      "hits":"player2",
      "maxSpeed":"player1speed",
      "myId":"player1",
      "myLives":"player1lives",
      "myScore":"player1score",
      "mySpawnpoint":"spawnpoint1",
      "otherFrags":"player2frags",
      "otherMaxSpeed":"player2speed",
      "otherScore":"player2score",
      "otherScorebox":"scorebox2",
      "scorebox":"scorebox1",
      "states":{
        "actions":[
          {
            "name":"getControls",
            "execute":{
              "set":{
                "kAlt":{ "_":"keyB" },
                "kDown":{ "_":"keyDown" },
                "kFire":{ "_":"keyA" },
                "kLeft":{ "_":"keyLeft" },
                "kRight":{ "_":"keyRight" },
                "kUp":{ "_":"keyUp" }
              }
            }
          },
          {
            "name":"centerCamera",
            "execute":{
              "as":{ "_":[ "objectTyped", "map1" ] },
              "set":{ "x":{ "_":[ "that", "x", "-", { "_":[ "constant", "cx" ] }, "*", -1 ] }, "y":{ "_":[ "that", "y", "-", { "_":[ "constant", "cy" ] }, "*", -1 ] } }
            }
          },
          {
            "name":"killed",
            "execute":[
              { "sum":1, "to":{ "_":[ "scene", { "_":[ "this", "otherFrags" ] } ] } },
              { "subtract":1, "to":{ "_":[ "scene", { "_":[ "this", "myLives" ] } ] } },
              { "object":{ "set":{ "_":[ "stencil", "killIndicator" ] }, "x":0, "color1":"#0ff", "color2":"#fff" } },
              { "_":[ "variable", "gamemode", "onFrag" ] }
            ]
          },
          {
            "name":"say",
            "execute":{ "object":{ "set":{ "_":[ "stencil", "modelPopupLabel" ] }, "html":{ "_":[ "that", "say" ] } }, "into":{ "_":[ "objectTyped", "map1" ] } }
          }
        ]
      }
    },
    "player2":{
      "type":"player2",
      "set":{ "_":[ "stencil", "playerModel" ] },
      "tileY":16,
      "bulletTileY":58,
      "codeControl":{ "_":[ "stencil", "dataControls", { "_":[ "variable", "player2controls" ] }, "code" ] },
      "hits":"player1",
      "maxSpeed":"player2speed",
      "myId":"player2",
      "myLives":"player2lives",
      "myScore":"player2score",
      "mySpawnpoint":"spawnpoint2",
      "otherFrags":"player1frags",
      "otherMaxSpeed":"player1speed",
      "otherScore":"player1score",
      "otherScorebox":"scorebox1",
      "scorebox":"scorebox2",
      "states":{
        "actions":[
          {
            "name":"getControls",
            "execute":{
              "set":{
                "kAlt":{ "_":"keyB2" },
                "kDown":{ "_":"keyDown2" },
                "kFire":{ "_":"keyA2" },
                "kLeft":{ "_":"keyLeft2" },
                "kRight":{ "_":"keyRight2" },
                "kUp":{ "_":"keyUp2" }
              }
            }
          },
          {
            "name":"centerCamera",
            "execute":{
              "as":{ "_":[ "objectTyped", "map2" ] },
              "set":{ "x":{ "_":[ "that", "x", "-", { "_":[ "constant", "cx" ] }, "*", -1 ] }, "y":{ "_":[ "that", "y", "-", { "_":[ "constant", "cy" ] }, "*", -1 ] } }
            }
          },
          {
            "name":"killed",
            "execute":[
              { "sum":1, "to":{ "_":[ "scene", { "_":[ "this", "otherFrags" ] } ] } },
              { "subtract":1, "to":{ "_":[ "scene", { "_":[ "this", "myLives" ] } ] } },
              { "object":{ "set":{ "_":[ "stencil", "killIndicator" ] }, "x":{ "_":[ "constant", "hfw" ] }, "color1":"#f00", "color2":"#fff" } },
              { "_":[ "variable", "gamemode", "onFrag" ] }
            ]
          },
          {
            "name":"say",
            "execute":{ "object":{ "set":{ "_":[ "stencil", "modelPopupLabel" ] }, "html":{ "_":[ "that", "say" ] } }, "into":{ "_":[ "objectTyped", "map2" ] } }
          }
        ]
      }
    },
    "bullet":{
      "type":"gameelement",
      "image":"sprites", "width":8, "height":8,
      "zIndex":9,
      "hitbox":{ "width":6, "height":6, "x":1, "y":1 },
      "coverRange":0,
      "states":{
        "code":[
          { "name":"Physics", "data":{ "walls":{ "type":"bulletsolid", "execute":{ "_":[ "stencil", "codeRemove" ] } } } },
          {
            "name":"Execute",
            "data":{
              "when":{ "_":[ "this", "life" ] },
              "execute":[
                { "subtract":1, "to":{ "_":[ "this", "life" ] } },
                {
                  "when":{ "_":[ "this", "collidesWith", { "_":[ "object", "enemy" ] } ] },
                  "execute":[ { "as":{ "_":"that" }, "executeAction":"hit" }, { "_":[ "stencil", "codeRemove" ] } ],
                  "elseExecute":{
                    "when":{ "_":[ "this", "collidesWith", { "_":[ "objectTyped", { "_":[ "this", "hits" ] } ] } ] },
                    "execute":[ { "as":{ "_":"that" }, "executeAction":"hit" }, { "_":[ "stencil", "codeRemove" ] } ],
                    "elseExecute":{
                      "when":{ "_":[ "this", "coverRange" ] },
                      "subtract":1,
                      "to":{ "_":[ "this", "coverRange" ] },
                      "elseExecute":{ "when":{ "_":[ "this", "collidesWith", { "_":[ "object", "cover" ] } ] }, "execute":{ "_":[ "stencil", "codeRemove" ] } }
                    }
                  }
                },
                { "_":[ "stencil", "codeUpdate" ] }
              ],
              "elseExecute":{ "_":[ "stencil", "codeRemove" ] }
            }
          }
        ]
      }
    },
    "dataBgm":[
      { "label":"(Random)", "description":"(Randomly plays a random track.)" },
      { "label":"(No music)", "description":"(Play without music.)" },
      { "label":"Dots", "description":"Track by ch41ns4w karbo", "song":"bgm1" },
      { "label":"Bizarre Construction", "description":"Track by Ashnar/Beermans", "song":"bgm2" },
      { "label":"Damage!", "description":"Track by jeff spc", "song":"bgm3" }
    ],
    "dataControls":[
      {
        "label":"Direction",
        "code":[
          {
            "when":{ "_":[ "this", "kRight" ] },
            "execute":{
              "when":{ "_":[ "this", "kUp" ] },
              "set":{ "dangle":45, "moving":1 },
              "elseExecute":{ "when":{ "_":[ "this", "kDown" ] }, "set":{ "dangle":135, "moving":1 }, "elseExecute":{ "set":{ "dangle":90, "moving":1 } } }
            },
            "elseExecute":{
              "when":{ "_":[ "this", "kLeft" ] },
              "execute":{
                "when":{ "_":[ "this", "kUp" ] },
                "set":{ "dangle":320, "moving":1 },
                "elseExecute":{ "when":{ "_":[ "this", "kDown" ] }, "set":{ "dangle":225, "moving":1 }, "elseExecute":{ "set":{ "dangle":270, "moving":1 } } }
              },
              "elseExecute":{
                "when":{ "_":[ "this", "kUp" ] },
                "set":{ "dangle":0, "moving":1 },
                "elseExecute":{ "when":{ "_":[ "this", "kDown" ] }, "set":{ "dangle":180, "moving":1 } }
              }
            }
          },
          {
            "when":{ "_":[ "this", "moving" ] },
            "execute":[
              { "set":{ "moving":0 } },
              {
                "when":{ "_":[ "this", "moveAngle", "isNotEqualTo", { "_":[ "this", "dangle" ] } ] },
                "execute":[
                  { "set":{ "delta":{ "_":[ "this", "moveAngle", "shortestAngleTo", { "_":[ "this", "dangle" ] } ] } } },
                  {
                    "when":{ "_":[ "this", "delta", "abs", "isLessThan", 1 ] },
                    "set":{ "moveAngle":{ "_":[ "this", "dangle" ] } },
                    "elseExecute":{ "sum":{ "_":[ "this", "delta", "*", 0.4 ] }, "to":{ "_":[ "this", "moveAngle" ] } }
                  }
                ]
              },
              {
                "when":{ "_":[ "this", "kAlt", "not" ] },
                "execute":{
                  "when":{ "_":[ "this", "aimAngle", "isNotEqualTo", { "_":[ "this", "dangle" ] } ] },
                  "execute":[
                    { "set":{ "delta":{ "_":[ "this", "aimAngle", "shortestAngleTo", { "_":[ "this", "dangle" ] } ] } } },
                    {
                      "when":{ "_":[ "this", "delta", "abs", "isLessThan", 1 ] },
                      "set":{ "aimAngle":{ "_":[ "this", "dangle" ] } },
                      "elseExecute":{ "sum":{ "_":[ "this", "delta", "*", 0.4 ] }, "to":{ "_":[ "this", "aimAngle" ] } }
                    }
                  ]
                }
              },
              { "sum":1, "to":{ "_":[ "this", "speed" ] } }
            ],
            "elseExecute":{ "set":{ "speed":{ "_":[ "this", "speed", "*", 0.9 ] } } }
          }
        ],
        "description":"Use UP/DOWN/LEFT/RIGHT for moving. Hold B for strafing."
      },
      {
        "label":"Rotation",
        "code":[
          { "when":{ "_":[ "this", "kLeft" ] }, "subtract":6, "to":{ "_":[ "this", "aimAngle" ] } },
          { "when":{ "_":[ "this", "kRight" ] }, "sum":6, "to":{ "_":[ "this", "aimAngle" ] } },
          {
            "when":{ "_":[ "this", "kUp" ] },
            "sum":1,
            "to":{ "_":[ "this", "speed" ] },
            "elseExecute":{
              "when":{ "_":[ "this", "kDown" ] },
              "subtract":1,
              "to":{ "_":[ "this", "speed" ] },
              "elseExecute":{ "set":{ "speed":{ "_":[ "this", "speed", "*", 0.9 ] } } }
            }
          },
          { "set":{ "moveAngle":{ "_":[ "this", "aimAngle" ] } } }
        ],
        "description":"Use LEFT/RIGHT for rotating and UP/DOWN for moving."
      }
    ],
    "dataGameModes":[
      {
        "label":"Deathmatch",
        "decideWinner":{ "_":[ "stencil", "codeWinHighestFrags" ] },
        "description":"A classic. Who kills the other player the most, wins.",
        "onFrag":{ "_":[ "stencil", "codeUpdateCrown" ] },
        "onFrame":{},
        "onHit":{},
        "onSecond":{},
        "onStart":{},
        "prepareGui":{ "_":[ "stencil", "fragGui" ] }
      },
      {
        "label":"Last Man Standing",
        "decideWinner":{
          "when":{ "_":[ "scene", "player1lives", "isGreaterThan", { "_":[ "scene", "player2lives" ] } ] },
          "set":{ "winner":1 },
          "elseExecute":{
            "when":{ "_":[ "scene", "player2lives", "isGreaterThan", { "_":[ "scene", "player1lives" ] } ] },
            "set":{ "winner":2 },
            "elseExecute":{ "set":{ "winner":0 } }
          }
        },
        "description":"You've a stock of lives to take care of. Lose all of them and you're done. When time's up, the player with most lives wins.",
        "onFrag":[
          {
            "when":{ "_":[ "scene", "player1lives", "not", "or", { "_":[ "scene", "player2lives", "not" ] } ] },
            "as":{ "_":"scene" },
            "set":{ "state":"endgame" }
          },
          { "_":[ "stencil", "codeUpdateCrown" ] }
        ],
        "onFrame":{},
        "onHit":{},
        "onSecond":{},
        "onStart":{},
        "prepareGui":{
          "object":[
            {
              "image":"sprites", "tileX":32, "tileY":98, "width":16, "height":16,
              "zIndex":100, "x":{ "_":[ "constant", "p1liconx" ] }, "y":{ "_":[ "constant", "hudY" ] }
            },
            {
              "image":"sprites", "tileX":32, "tileY":98, "width":16, "height":16,
              "zIndex":100, "x":{ "_":[ "constant", "p2liconx" ] }, "y":{ "_":[ "constant", "hudY" ] }
            },
            {
              "type":"hud",
              "hudType":"label", "label":"%number|scene.player1lives|0|3%",
              "width":120, "height":10,
              "zIndex":100, "x":{ "_":[ "constant", "p1llabelx" ] }, "y":{ "_":[ "constant", "hudLabelY" ] },
              "color":"#fff",
              "font":"spectrum", "lineHeight":10, "outline":"#000"
            },
            {
              "type":"hud",
              "hudType":"label", "label":"%number|scene.player2lives|0|3%",
              "width":120, "height":10,
              "zIndex":100, "x":{ "_":[ "constant", "p2llabelx" ] }, "y":{ "_":[ "constant", "hudLabelY" ] },
              "color":"#fff",
              "font":"spectrum", "lineHeight":10, "outline":"#000"
            }
          ]
        }
      },
      {
        "label":"Survival",
        "decideWinner":{ "_":[ "stencil", "codeWinHighestScore" ] },
        "description":"The last killer scores a point for every second and the last victim runs faster. Go play tag!",
        "onFrag":[
          { "as":{ "_":[ "objectTyped", { "_":[ "this", "scorebox" ] } ] }, "set":{ "frame":0 } },
          { "as":{ "_":[ "objectTyped", { "_":[ "this", "otherScorebox" ] } ] }, "set":{ "frame":1 } },
          { "assign":{ "_":[ "variable", "speed", "fast" ] }, "to":{ "_":[ "scene", { "_":[ "this", "maxSpeed" ] } ] } },
          { "assign":{ "_":[ "variable", "speed", "base" ] }, "to":{ "_":[ "scene", { "_":[ "this", "otherMaxSpeed" ] } ] } },
          { "as":{ "_":"scene" }, "set":{ "scoring":{ "_":[ "that", "otherScore" ] } } }
        ],
        "onFrame":{},
        "onHit":{},
        "onSecond":[
          { "when":{ "_":[ "scene", "scoring" ] }, "sum":1, "to":{ "_":[ "scene", { "_":[ "scene", "scoring" ] } ] } },
          { "_":[ "stencil", "codeUpdateCrown" ] }
        ],
        "onStart":{},
        "prepareGui":{ "_":[ "stencil", "scoreGui" ] }
      },
      {
        "label":"King of the Hill",
        "decideWinner":{ "_":[ "stencil", "codeWinHighestScore" ] },
        "description":"Stay on the blinking area of the map and score a point for every second. Don't let the other player do the same.",
        "onFrag":{},
        "onFrame":{},
        "onHit":{},
        "onSecond":[
          { "when":{ "_":[ "objectTyped", "player1", "collidesWith", { "_":[ "objectTyped", "hill" ] } ] }, "sum":1, "to":{ "_":[ "scene", "player1score" ] } },
          { "when":{ "_":[ "objectTyped", "player2", "collidesWith", { "_":[ "objectTyped", "hill" ] } ] }, "sum":1, "to":{ "_":[ "scene", "player2score" ] } },
          { "_":[ "stencil", "codeUpdateCrown" ] }
        ],
        "onStart":{},
        "prepareGui":{ "_":[ "stencil", "scoreGui" ] },
        "useHill":1
      },
      {
        "label":"Capture the Flag",
        "decideWinner":{ "_":[ "stencil", "codeWinHighestScore" ] },
        "description":"Bring the flag to your spawnpoint to score a point. Don't get killed in the process.",
        "onFrag":{
          "when":{ "_":[ "this", "myId", "isEqualTo", { "_":[ "scene", "flagOwned" ] } ] },
          "execute":[
            { "as":{ "_":[ "objectTyped", "flag" ] }, "set":{ "at":{ "_":"that" }, "visible":1 }, "execute":{ "_":[ "stencil", "codeUpdate" ] } },
            { "as":{ "_":[ "objectTyped", "scorebox1" ] }, "set":{ "frame":0 } },
            { "as":{ "_":[ "objectTyped", "scorebox2" ] }, "set":{ "frame":0 } },
            { "set":{ "say":"FLAG LOST" }, "executeAction":"say", "playAudio":"bigfire" },
            { "as":{ "_":[ "objectTyped", { "_":[ "scene", "flagOwnedOther" ] } ] }, "set":{ "say":"FLAG LOST" }, "executeAction":"say", "playAudio":"bigfire" },
            { "as":{ "_":"scene" }, "set":{ "flagOwned":0, "flagOwnedOther":0, "flagTimer":125, "flagTo":0 } }
          ]
        },
        "onFrame":{
          "when":{ "_":[ "scene", "flagOwned" ] },
          "execute":{
            "when":{ "_":[ "this", "flagTo" ] },
            "execute":{
              "when":{ "_":[ "objectTyped", { "_":[ "this", "flagOwned" ] }, "collidesWith", { "_":[ "objectTyped", { "_":[ "this", "flagTo" ] } ] } ] },
              "execute":[
                { "as":{ "_":[ "objectTyped", { "_":[ "this", "flagOwned" ] } ] }, "set":{ "say":"SCORE!" }, "executeAction":"say", "playAudio":"bigfire" },
                { "as":{ "_":[ "objectTyped", { "_":[ "this", "flagOwnedOther" ] } ] }, "set":{ "say":"OH NO!" }, "executeAction":"say", "playAudio":"bigfire" },
                { "as":{ "_":[ "objectTyped", "scorebox1" ] }, "set":{ "frame":0 } },
                { "as":{ "_":[ "objectTyped", "scorebox2" ] }, "set":{ "frame":0 } },
                { "sum":1, "to":{ "_":[ "scene", { "_":[ "this", "flagPointTo" ] } ] } },
                { "_":[ "stencil", "codeUpdateCrown" ] },
                { "set":{ "flagTimer":75, "flagTo":0 } }
              ]
            },
            "elseExecute":{
              "when":{ "_":[ "this", "flagTimer" ] },
              "subtract":1,
              "to":{ "_":[ "this", "flagTimer" ] },
              "elseExecute":{ "set":{ "flagOwned":0, "flagOwnedOther":0 } }
            }
          },
          "elseExecute":{
            "as":{ "_":[ "objectTyped", "flag" ] },
            "execute":{
              "when":{ "_":[ "this", "collidesWith", { "_":[ "object", "player" ] } ] },
              "execute":[
                { "as":{ "_":"that" }, "set":{ "say":"GOT FLAG" }, "executeAction":"say", "playAudio":"bigfire" },
                { "as":{ "_":[ "objectTyped", { "_":[ "that", "hits" ] } ] }, "set":{ "say":"WARNING!" }, "executeAction":"say", "playAudio":"bigfire" },
                { "as":{ "_":[ "objectTyped", { "_":[ "that", "scorebox" ] } ] }, "set":{ "frame":1 } },
                { "as":{ "_":[ "objectTyped", { "_":[ "that", "otherScorebox" ] } ] }, "set":{ "frame":0 } },
                { "set":{ "visible":0 }, "execute":{ "_":[ "stencil", "codeUpdate" ] } },
                {
                  "as":{ "_":"that" },
                  "execute":{
                    "as":{ "_":"scene" },
                    "set":{
                      "flagOwned":{ "_":[ "that", "myId" ] },
                      "flagOwnedOther":{ "_":[ "that", "hits" ] },
                      "flagPointTo":{ "_":[ "that", "myScore" ] },
                      "flagTo":{ "_":[ "that", "mySpawnpoint" ] }
                    }
                  }
                }
              ],
              "elseExecute":{
                "when":{ "_":[ "scene", "flagTimer" ] },
                "execute":[
                  { "subtract":1, "to":{ "_":[ "scene", "flagTimer" ] } },
                  {
                    "when":{ "_":[ "scene", "flagTimer", "isLessThan", 25 ] },
                    "set":{ "visible":{ "_":[ "this", "visible", "not" ] } },
                    "execute":{ "_":[ "stencil", "codeUpdate" ] }
                  }
                ],
                "elseExecute":{
                  "set":{
                    "x":{ "_":[ "this", "xCenteredWith", { "_":[ "objectTyped", "hill" ] } ] }, "y":{ "_":[ "this", "yCenteredWith", { "_":[ "objectTyped", "hill" ] } ] },
                    "visible":1
                  },
                  "execute":{ "_":[ "stencil", "codeUpdate" ] }
                }
              }
            }
          }
        },
        "onHit":{},
        "onSecond":{},
        "onStart":{ "object":{ "_":[ "stencil", "flag" ] }, "into":{ "_":[ "objectTyped", "map1" ] }, "set":{ "flagOwned":0, "flagOwnedOther":0, "flagTimer":0 } },
        "prepareGui":{ "_":[ "stencil", "scoreGui" ] },
        "useHill":1
      },
      {
        "label":"Vampire",
        "decideWinner":{ "_":[ "stencil", "codeWinHighestFrags" ] },
        "description":"Like Deathmatch but shooting the opponent gives you some health back.",
        "onFrag":{ "_":[ "stencil", "codeUpdateCrown" ] },
        "onFrame":{},
        "onHit":[
          { "set":{ "recoverHp":{ "_":[ "that", "damage", "/", 2, "ceil" ] } } },
          {
            "as":{ "_":[ "objectTyped", { "_":[ "this", "hits" ] } ] },
            "execute":[
              { "sum":{ "_":[ "that", "recoverHp" ] }, "to":{ "_":[ "this", "health" ] } },
              { "when":{ "_":[ "this", "health", "isGreaterThan", { "_":[ "variable", "health" ] } ] }, "set":{ "health":{ "_":[ "variable", "health" ] } } },
              { "set":{ "say":{ "_":[ "", ".", "+", ".", { "_":[ "that", "recoverHp" ] }, ".", "HP" ] } }, "executeAction":"say" }
            ]
          }
        ],
        "onSecond":{},
        "onStart":{},
        "prepareGui":{ "_":[ "stencil", "fragGui" ] }
      },
      {
        "label":"Horde",
        "decideWinner":{ "_":[ "stencil", "codeWinHighestScore" ] },
        "description":"The arena fills up with destructable drones little by little. Earn a point for every frag - drone or player!",
        "onFrag":[ { "sum":1, "to":{ "_":[ "scene", { "_":[ "this", "otherScore" ] } ] } }, { "_":[ "stencil", "codeUpdateCrown" ] } ],
        "onFrame":{},
        "onHit":{},
        "onHordeFrag":[ { "sum":1, "to":{ "_":[ "scene", { "_":[ "that", "fromScore" ] } ] } }, { "_":[ "stencil", "codeUpdateCrown" ] } ],
        "onSecond":{
          "when":{ "_":[ "scene", "droneCount" ] },
          "execute":{
            "when":{ "_":[ "scene", "nextDroneAt" ] },
            "subtract":1,
            "to":{ "_":[ "scene", "nextDroneAt" ] },
            "elseExecute":[
              { "subtract":1, "to":{ "_":[ "this", "droneCount" ] } },
              { "object":{ "_":[ "stencil", "horde" ] }, "into":{ "_":[ "objectTyped", "map1" ] } },
              { "as":{ "_":"scene" }, "set":{ "nextDroneAt":5 } }
            ]
          }
        },
        "onStart":{ "set":{ "droneCount":30, "nextDroneAt":0 } },
        "prepareGui":{ "_":[ "stencil", "scoreGui" ] },
        "useHill":1
      },
      {
        "label":"Awkward",
        "decideWinner":{ "_":[ "stencil", "codeWinHighestFrags" ] },
        "description":"Like Deathmatch but, if nothing happens in 15 seconds, everybody goes faster and no reload time. And a nice tune by Mast/FtL plays. Inspired by Diego Aroldi.",
        "onFrag":{ "_":[ "stencil", "codeUpdateCrown" ] },
        "onFrame":{},
        "onHit":[
          { "when":{ "_":[ "scene", "fastTime", "not" ] }, "playAudio":{ "_":[ "variable", "bgm", "song" ] }, "stopChannel":"music" },
          {
            "as":{ "_":"scene" },
            "set":{
              "fastTime":15,
              "player1speed":{ "_":[ "variable", "speed", "base" ] },
              "player2speed":{ "_":[ "variable", "speed", "base" ] },
              "reloadRatio":{ "_":[ "variable", "reloadRatio" ] }
            }
          }
        ],
        "onSecond":{
          "when":{ "_":[ "this", "fastTime" ] },
          "execute":[
            { "subtract":1, "to":{ "_":[ "this", "fastTime" ] } },
            {
              "when":{ "_":[ "this", "fastTime", "not" ] },
              "execute":[
                { "assign":{ "_":[ "variable", "speed", "special" ] }, "to":{ "_":[ "scene", "player1speed" ] } },
                { "assign":{ "_":[ "variable", "speed", "special" ] }, "to":{ "_":[ "scene", "player2speed" ] } },
                {
                  "as":{ "_":"scene" },
                  "set":{ "player1speed":{ "_":[ "variable", "speed", "special" ] }, "player2speed":{ "_":[ "variable", "speed", "special" ] }, "reloadRatio":0 }
                },
                { "playAudio":"bgmx", "stopChannel":"music" }
              ]
            }
          ]
        },
        "onStart":{ "set":{ "fastTime":15 } },
        "prepareGui":{ "_":[ "stencil", "fragGui" ] }
      }
    ],
    "dataMaps":[
      { "label":"(Random)", "description":"(Play a random map.)" },
      { "label":"Storage room", "description":"Run in circle, pick weapons, kill friends. Easy peasy.", "sceneId":"storage" },
      { "label":"Office", "description":"Windows can surely stop you... but not your bullets. Surprise!", "sceneId":"office" },
      { "label":"Deck 2D", "description":"There are ramps and there is lava as you like. But smaller and in 2D.", "sceneId":"deck2d" },
      { "label":"Two lands", "description":"Two bases, two bridges, two sniper rifles and a lava lake. Good luck!", "sceneId":"twolands" },
      {
        "label":"Telluric",
        "description":"Shotgun in the face on a corridor. Teleports with nice telefrag opportunities... it's like a quake!",
        "sceneId":"telluric"
      },
      {
        "label":"Cogs",
        "description":"Do you want some cover shooting? We've got it covered! Bullets can't pass far covers... except for the sniper rifle!",
        "sceneId":"cogs"
      },
      {
        "label":"Drone factory",
        "description":"Welcome to our drone production plant! They follow players and kill them! I told you that they are indestructible?",
        "sceneId":"drones"
      },
      { "label":"Spikes", "description":"There is a grid of spikes and some switches to play with. Short-range weapons only.", "sceneId":"spikes" },
      {
        "label":"Market",
        "description":"The camper's heaven. Hide in stands and wait for your prey or search your enemy and shot him in the face.",
        "sceneId":"market"
      }
    ],
    "dataOptions":[
      {
        "label":"Map",
        "onLeft":{ "when":{ "_":[ "variable", "mapId" ] }, "subtract":1, "to":{ "_":[ "variable", "mapId" ] } },
        "onRight":{
          "when":{ "_":[ "variable", "mapId", "isLessThan", { "_":[ "stencil", "dataMaps", "count", "-", 1 ] } ] },
          "sum":1,
          "to":{ "_":[ "variable", "mapId" ] }
        },
        "optionValue":{ "set":{ "html":{ "_":[ "stencil", "dataMaps", { "_":[ "variable", "mapId" ] }, "label" ] } } },
        "tooltipValue":{ "set":{ "html":{ "_":[ "stencil", "dataMaps", { "_":[ "variable", "mapId" ] }, "description" ] } } }
      },
      {
        "label":"Game mode",
        "onLeft":{ "when":{ "_":[ "variable", "gamemodeId" ] }, "subtract":1, "to":{ "_":[ "variable", "gamemodeId" ] } },
        "onRight":{
          "when":{ "_":[ "variable", "gamemodeId", "isLessThan", { "_":[ "stencil", "dataGameModes", "count", "-", 1 ] } ] },
          "sum":1,
          "to":{ "_":[ "variable", "gamemodeId" ] }
        },
        "optionValue":{ "set":{ "html":{ "_":[ "stencil", "dataGameModes", { "_":[ "variable", "gamemodeId" ] }, "label" ] } } },
        "tooltipValue":{ "set":{ "html":{ "_":[ "stencil", "dataGameModes", { "_":[ "variable", "gamemodeId" ] }, "description" ] } } }
      },
      {
        "label":"Health",
        "onLeft":[
          { "subtract":10, "to":{ "_":[ "variable", "health" ] } },
          { "when":{ "_":[ "variable", "health", "isLessEqualThan", 0 ] }, "as":{ "_":"variable" }, "set":{ "health":1 } }
        ],
        "onRight":{
          "when":{ "_":[ "variable", "health", "isEqualTo", 1 ] },
          "as":{ "_":"variable" },
          "set":{ "health":10 },
          "elseExecute":{ "when":{ "_":[ "variable", "health", "isLessThan", 200 ] }, "sum":10, "to":{ "_":[ "variable", "health" ] } }
        },
        "optionValue":{ "set":{ "html":{ "_":[ "variable", "health", ".", "%" ] } } },
        "tooltipValue":{ "set":{ "html":"The maximum amount of health." } }
      },
      {
        "label":"Lives",
        "onLeft":{ "when":{ "_":[ "variable", "lives", "isGreaterThan", 3 ] }, "subtract":1, "to":{ "_":[ "variable", "lives" ] } },
        "onRight":{ "when":{ "_":[ "variable", "lives", "isLessThan", 20 ] }, "sum":1, "to":{ "_":[ "variable", "lives" ] } },
        "optionValue":{ "set":{ "html":{ "_":[ "variable", "lives" ] } } },
        "tooltipValue":{ "set":{ "html":"Life stock for life-based game modes (i.e. Last Man Standing)" } }
      },
      {
        "label":"Speed",
        "onLeft":{ "when":{ "_":[ "variable", "speedId" ] }, "subtract":1, "to":{ "_":[ "variable", "speedId" ] } },
        "onRight":{
          "when":{ "_":[ "variable", "speedId", "isLessThan", { "_":[ "stencil", "dataSpeed", "count", "-", 1 ] } ] },
          "sum":1,
          "to":{ "_":[ "variable", "speedId" ] }
        },
        "optionValue":{ "set":{ "html":{ "_":[ "stencil", "dataSpeed", { "_":[ "variable", "speedId" ] }, "label" ] } } },
        "tooltipValue":{ "set":{ "html":"Movement speed." } }
      },
      {
        "label":"Time",
        "onLeft":{ "when":{ "_":[ "variable", "time", "isGreaterThan", 30 ] }, "subtract":30, "to":{ "_":[ "variable", "time" ] } },
        "onRight":{ "when":{ "_":[ "variable", "time", "isLessThan", 300 ] }, "sum":30, "to":{ "_":[ "variable", "time" ] } },
        "optionValue":{ "set":{ "html":{ "_":[ "variable", "time", ".", " seconds" ] } } },
        "tooltipValue":{ "set":{ "html":"Match duration." } }
      },
      {
        "label":"Weapons",
        "onLeft":{ "when":{ "_":[ "variable", "weapons" ] }, "subtract":1, "to":{ "_":[ "variable", "weapons" ] } },
        "onRight":{
          "when":{ "_":[ "variable", "weapons", "isLessThan", { "_":[ "stencil", "dataWeapons", "count", "-", 1 ] } ] },
          "sum":1,
          "to":{ "_":[ "variable", "weapons" ] }
        },
        "optionValue":{
          "when":{ "_":[ "variable", "weapons" ] },
          "set":{ "html":{ "_":[ "stencil", "dataWeapons", { "_":[ "variable", "weapons" ] }, "label", ".", " only" ] } },
          "elseExecute":{ "set":{ "html":"(Map)" } }
        },
        "tooltipValue":{ "set":{ "html":"Weapons you'll find in the map." } }
      },
      {
        "label":"Ammo",
        "onLeft":{ "when":{ "_":[ "variable", "ammo" ] }, "subtract":0.1, "to":{ "_":[ "variable", "ammo" ] } },
        "onRight":{ "when":{ "_":[ "variable", "ammo", "isLessThan", 2 ] }, "sum":0.1, "to":{ "_":[ "variable", "ammo" ] } },
        "optionValue":{
          "when":{ "_":[ "variable", "ammo" ] },
          "set":{ "html":{ "_":[ "variable", "ammo", "*", 100, ".", "%" ] } },
          "elseExecute":{ "set":{ "html":"Unlimited" } }
        },
        "tooltipValue":{ "set":{ "html":"Ammo into each weapon box." } }
      },
      {
        "label":"Reload",
        "onLeft":{ "when":{ "_":[ "variable", "reloadRatio" ] }, "subtract":0.1, "to":{ "_":[ "variable", "reloadRatio" ] } },
        "onRight":{ "when":{ "_":[ "variable", "reloadRatio", "isLessThan", 2 ] }, "sum":0.1, "to":{ "_":[ "variable", "reloadRatio" ] } },
        "optionValue":{
          "when":{ "_":[ "variable", "reloadRatio" ] },
          "set":{ "html":{ "_":[ "variable", "reloadRatio", "*", 100, ".", "% speed" ] } },
          "elseExecute":{ "set":{ "html":"No reload time" } }
        },
        "tooltipValue":{ "set":{ "html":"Weapon reload time. The higher the slower." } }
      },
      {
        "label":"Speaker",
        "onLeft":{ "as":{ "_":"variable" }, "set":{ "speak":0 } },
        "onRight":{ "as":{ "_":"variable" }, "set":{ "speak":1 } },
        "optionValue":{ "when":{ "_":[ "variable", "speak" ] }, "set":{ "html":"Yes" }, "elseExecute":{ "set":{ "html":"No" } } },
        "tooltipValue":{ "set":{ "html":"No deathmatch is a true deathmatch without a speaker. BTW you can turn it on/off here." } }
      },
      {
        "label":"Music",
        "onLeft":{ "when":{ "_":[ "variable", "bgmId" ] }, "subtract":1, "to":{ "_":[ "variable", "bgmId" ] } },
        "onRight":{
          "when":{ "_":[ "variable", "bgmId", "isLessThan", { "_":[ "stencil", "dataBgm", "count", "-", 1 ] } ] },
          "sum":1,
          "to":{ "_":[ "variable", "bgmId" ] }
        },
        "optionValue":{ "set":{ "html":{ "_":[ "stencil", "dataBgm", { "_":[ "variable", "bgmId" ] }, "label" ] } } },
        "tooltipValue":{ "set":{ "html":{ "_":[ "stencil", "dataBgm", { "_":[ "variable", "bgmId" ] }, "description" ] } } }
      },
      {
        "label":"Control 1",
        "onLeft":{ "when":{ "_":[ "variable", "player1controls" ] }, "subtract":1, "to":{ "_":[ "variable", "player1controls" ] } },
        "onRight":{
          "when":{ "_":[ "variable", "player1controls", "isLessThan", { "_":[ "stencil", "dataControls", "count", "-", 1 ] } ] },
          "sum":1,
          "to":{ "_":[ "variable", "player1controls" ] }
        },
        "optionValue":{ "set":{ "html":{ "_":[ "stencil", "dataControls", { "_":[ "variable", "player1controls" ] }, "label" ] } } },
        "tooltipValue":{ "set":{ "html":{ "_":[ "stencil", "dataControls", { "_":[ "variable", "player1controls" ] }, "description" ] } } }
      },
      {
        "label":"Control 2",
        "onLeft":{ "when":{ "_":[ "variable", "player2controls" ] }, "subtract":1, "to":{ "_":[ "variable", "player2controls" ] } },
        "onRight":{
          "when":{ "_":[ "variable", "player2controls", "isLessThan", { "_":[ "stencil", "dataControls", "count", "-", 1 ] } ] },
          "sum":1,
          "to":{ "_":[ "variable", "player2controls" ] }
        },
        "optionValue":{ "set":{ "html":{ "_":[ "stencil", "dataControls", { "_":[ "variable", "player2controls" ] }, "label" ] } } },
        "tooltipValue":{ "set":{ "html":{ "_":[ "stencil", "dataControls", { "_":[ "variable", "player2controls" ] }, "description" ] } } }
      }
    ],
    "dataSpeed":[
      { "label":"Slow", "base":[ -2, 2 ], "droneSpeed":1, "fast":[ -3, 3 ], "special":[ -4, 4 ] },
      { "label":"Normal", "base":[ -3, 3 ], "droneSpeed":1, "fast":[ -4, 4 ], "special":[ -6, 6 ] },
      { "label":"Fast", "base":[ -4, 4 ], "droneSpeed":2, "fast":[ -5, 5 ], "special":[ -7, 7 ] },
      { "label":"Faster", "base":[ -5, 5 ], "droneSpeed":3, "fast":[ -6, 6 ], "special":[ -7, 7 ] }
    ],
    "dataWeapons":[
      0,
      {
        "times":1,
        "label":"PISTOL",
        "tileX":16,
        "speed":10,
        "ammo":20,
        "coverRange":3,
        "damage":20,
        "hailCount":1,
        "hailTimer":1,
        "life":10,
        "precision":0,
        "reloadTimer":20,
        "sfx":"blam",
        "speak":"pistol"
      },
      {
        "times":5,
        "label":"SHOTGUN",
        "tileX":24,
        "speed":14,
        "ammo":5,
        "coverRange":2,
        "damage":10,
        "hailCount":1,
        "hailTimer":1,
        "life":5,
        "precision":10,
        "reloadTimer":50,
        "sfx":"explode",
        "speak":"shotgun"
      },
      {
        "times":1,
        "label":"MACHINEGUN",
        "tileX":8,
        "speed":10,
        "ammo":5,
        "coverRange":3,
        "damage":5,
        "hailCount":10,
        "hailTimer":1,
        "life":10,
        "precision":0,
        "reloadTimer":30,
        "sfx":"blam",
        "speak":"machinegun"
      },
      {
        "times":1,
        "label":"SNIPER",
        "tileX":32,
        "speed":16,
        "ammo":8,
        "coverRange":1000,
        "damage":50,
        "hailCount":1,
        "hailTimer":1,
        "life":20,
        "precision":0,
        "reloadTimer":60,
        "sfx":"explode",
        "speak":"sniper"
      }
    ],
    "endIndicator":{
      "width":{ "_":[ "constant", "hfw" ] }, "height":40,
      "zIndex":200, "y":{ "_":[ "constant", "kiy" ] },
      "scale":0,
      "color":"#fff",
      "font":"spectrum", "fontSize":60, "lineHeight":40, "outline":"#000", "textAlign":"center",
      "timer":0,
      "states":{
        "code":[
          {
            "name":"Sequence",
            "data":[ { "set":{ "color":{ "_":[ "this", "color1" ] } }, "wait":1 }, { "set":{ "color":{ "_":[ "this", "color2" ] } }, "wait":1, "loopTo":0 } ]
          },
          {
            "name":"Execute",
            "data":[
              { "when":{ "_":[ "this", "scale", "isLessThan", 1 ] }, "sum":0.2, "to":{ "_":[ "this", "scale" ] } },
              { "sum":{ "_":[ "this", "timerSpeed" ] }, "to":{ "_":[ "this", "timer" ] } },
              { "set":{ "y":{ "_":[ "this", "timer", "sin", "*", 5, "+", { "_":[ "constant", "kiy" ] } ] } } }
            ]
          }
        ]
      }
    },
    "flag":{
      "type":"flag",
      "image":"sprites", "tileX":224, "tileY":34, "width":16, "height":16,
      "zIndex":14,
      "visible":0,
      "execute":{ "_":[ "stencil", "makeSplitScreen" ] }
    },
    "fragGui":{
      "object":[
        {
          "image":"sprites", "tileX":16, "tileY":98, "width":16, "height":16,
          "zIndex":100, "x":{ "_":[ "constant", "p1liconx" ] }, "y":{ "_":[ "constant", "hudY" ] }
        },
        {
          "image":"sprites", "tileX":16, "tileY":98, "width":16, "height":16,
          "zIndex":100, "x":{ "_":[ "constant", "p2liconx" ] }, "y":{ "_":[ "constant", "hudY" ] }
        },
        {
          "type":"hud",
          "hudType":"label", "label":"%number|scene.player1frags|0|3%",
          "width":120, "height":10,
          "zIndex":100, "x":{ "_":[ "constant", "p1llabelx" ] }, "y":{ "_":[ "constant", "hudLabelY" ] },
          "color":"#fff",
          "font":"spectrum", "lineHeight":10, "outline":"#000"
        },
        {
          "type":"hud",
          "hudType":"label", "label":"%number|scene.player2frags|0|3%",
          "width":120, "height":10,
          "zIndex":100, "x":{ "_":[ "constant", "p2llabelx" ] }, "y":{ "_":[ "constant", "hudLabelY" ] },
          "color":"#fff",
          "font":"spectrum", "lineHeight":10, "outline":"#000"
        }
      ]
    },
    "hill":{
      "type":[ "hill", "gameelement" ],
      "zIndex":30,
      "timer":0,
      "states":{
        "name":"run",
        "execute":{ "_":[ "stencil", "makeSplitScreen" ] },
        "code":{
          "name":"Execute",
          "data":[
            {
              "when":{ "_":[ "this", "timer" ] },
              "subtract":1,
              "to":{ "_":[ "this", "timer" ] },
              "elseExecute":[
                { "when":{ "_":[ "this", "border", "isEqualTo", "#fff" ] }, "set":{ "border":"#f0f" }, "elseExecute":{ "set":{ "border":"#fff" } } },
                { "set":{ "timer":25 } }
              ]
            },
            { "_":[ "stencil", "codeUpdate" ] }
          ]
        }
      }
    },
    "horde":{
      "type":"gameelement",
      "image":"sprites", "tileX":256, "tileY":34, "width":16, "height":16,
      "zIndex":60,
      "execute":{ "_":[ "stencil", "makeSplitScreen" ] },
      "damage":30,
      "states":[
        {
          "set":{
            "removeType":[ "hurt", "enemy" ],
            "x":{ "_":[ "this", "xCenteredWith", { "_":[ "objectTyped", "hill" ] } ] }, "y":{ "_":[ "this", "yCenteredWith", { "_":[ "objectTyped", "hill" ] } ] },
            "aimTimer":0,
            "health":{ "_":[ "variable", "health", "/", 2, "ceil" ] },
            "invulnerability":25
          },
          "code":[
            {
              "name":"Execute",
              "data":[
                { "sum":10, "to":{ "_":[ "this", "angle" ] } },
                {
                  "when":{ "_":[ "this", "invulnerability" ] },
                  "execute":[
                    { "subtract":1, "to":{ "_":[ "this", "invulnerability" ] }, "set":{ "visible":{ "_":[ "this", "invulnerability", "%", 2 ] } } },
                    { "when":{ "_":[ "this", "invulnerability", "not" ] }, "set":{ "type":[ "hurt", "enemy" ], "visible":1 } }
                  ]
                },
                {
                  "when":{ "_":[ "this", "aimTimer" ] },
                  "subtract":1,
                  "to":{ "_":[ "this", "aimTimer" ] },
                  "elseExecute":[
                    { "set":{ "aimTimer":{ "_":[ "randomNumber", [ 25, 75 ] ] } } },
                    {
                      "decide":[
                        {
                          "when":{ "_":[ "objectTyped", "player1" ] },
                          "options":{ "applyVector":{ "angle":{ "_":[ "this", "angleTo", { "_":[ "objectTyped", "player1" ] } ] }, "length":{ "_":[ "scene", "droneSpeed" ] } } }
                        },
                        {
                          "when":{ "_":[ "objectTyped", "player2" ] },
                          "options":{ "applyVector":{ "angle":{ "_":[ "this", "angleTo", { "_":[ "objectTyped", "player2" ] } ] }, "length":{ "_":[ "scene", "droneSpeed" ] } } }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            { "name":"Physics", "data":{} },
            { "name":"Execute", "data":{ "_":[ "stencil", "codeUpdate" ] } }
          ],
          "actions":{
            "name":"hit",
            "execute":{
              "when":{ "_":[ "this", "invulnerability", "not" ] },
              "execute":[
                { "_":[ "variable", "gamemode", "onHit" ] },
                { "playAudio":"explode" },
                { "subtract":{ "_":[ "that", "damage" ] }, "to":{ "_":[ "this", "health" ] } },
                {
                  "object":{
                    "set":{ "_":[ "stencil", "splatModel" ] },
                    "tileX":272, "tileY":34,
                    "x":{ "_":[ "that", "x", "+", { "_":[ "randomNumber", [ -4, 4 ] ] } ] }, "y":{ "_":[ "that", "y", "+", { "_":[ "randomNumber", [ -4, 4 ] ] } ] },
                    "execute":{ "_":[ "stencil", "makeSplitScreen" ] }
                  },
                  "into":{ "_":[ "objectTyped", "map1" ] }
                },
                {
                  "when":{ "_":[ "this", "health", "isLessEqualThan", 0 ] },
                  "execute":[ { "set":{ "visible":0, "state":"respawn" } }, { "execute":{ "_":[ "variable", "gamemode", "onHordeFrag" ] } }, { "_":[ "stencil", "codeUpdate" ] } ]
                }
              ]
            }
          }
        },
        {
          "name":"respawn",
          "set":{ "removeType":[ "hurt", "enemy" ] },
          "code":{ "name":"Sequence", "data":[ { "wait":50 }, { "set":{ "state":"default" } } ] }
        }
      ]
    },
    "killIndicator":{
      "width":{ "_":[ "constant", "hfw" ] }, "height":40,
      "zIndex":200, "y":{ "_":[ "constant", "kiy" ] },
      "scale":0,
      "color":"#fff",
      "font":"spectrum", "fontSize":20, "lineHeight":40, "outline":"#000", "textAlign":"center", "html":{ "_":[ "randomValue", [ "BUSTED", "KILLED", "FRAGGED", "GTFO", "NOOB", "GIT GUD", "DEAD" ] ] },
      "execute":{ "when":{ "_":[ "variable", "speak" ] }, "playAudio":{ "_":[ "randomValue", [ "fragged", "wow", "incredible" ] ] }, "stopChannel":"speak" },
      "timer":0,
      "states":{
        "code":[
          {
            "name":"Sequence",
            "data":[ { "set":{ "color":{ "_":[ "this", "color1" ] } }, "wait":1 }, { "set":{ "color":{ "_":[ "this", "color2" ] } }, "wait":1, "loopTo":0 } ]
          },
          { "name":"Execute", "data":[ { "sum":0.2, "to":{ "_":[ "this", "timer" ] } }, { "set":{ "angle":{ "_":[ "this", "timer", "sin", "*", 5 ] } } } ] },
          {
            "name":"Sequence",
            "data":[
              { "sum":0.4, "to":{ "_":[ "this", "scale" ] }, "wait":1, "loop":1, "cycles":5 },
              { "wait":25 },
              { "subtract":0.4, "to":{ "_":[ "this", "scale" ] }, "wait":1, "loop":1, "cycles":5 },
              { "remove":1 }
            ]
          }
        ]
      }
    },
    "makeSplitScreen":{
      "execute":[
        {
          "object":{
            "image":{ "_":[ "that", "image" ] }, "width":{ "_":[ "that", "width" ] }, "height":{ "_":[ "that", "height" ] },
            "zIndex":{ "_":[ "that", "zIndex" ] },
            "font":{ "_":[ "that", "font" ] }, "fontSize":{ "_":[ "that", "fontSize" ] }, "lineHeight":{ "_":[ "that", "lineHeight" ] }, "outline":{ "_":[ "that", "outline" ] }, "textAlign":{ "_":[ "that", "textAlign" ] }, "html":{ "_":[ "that", "html" ] }
          },
          "assign":{ "_":"that" },
          "to":{ "_":[ "this", "mirror" ] },
          "into":{ "_":[ "objectTyped", "map2" ] }
        },
        { "_":[ "stencil", "codeUpdate" ] }
      ]
    },
    "scoreGui":{
      "object":[
        {
          "type":"scorebox1",
          "image":"sprites", "tileX":48, "tileY":98, "width":16, "height":16,
          "zIndex":100, "x":{ "_":[ "constant", "p1liconx" ] }, "y":{ "_":[ "constant", "hudY" ] }
        },
        {
          "type":"scorebox2",
          "image":"sprites", "tileX":48, "tileY":98, "width":16, "height":16,
          "zIndex":100, "x":{ "_":[ "constant", "p2liconx" ] }, "y":{ "_":[ "constant", "hudY" ] }
        },
        {
          "type":"hud",
          "hudType":"label", "label":"%number|scene.player1score|0|3%",
          "width":120, "height":10,
          "zIndex":100, "x":{ "_":[ "constant", "p1llabelx" ] }, "y":{ "_":[ "constant", "hudLabelY" ] },
          "color":"#fff",
          "font":"spectrum", "lineHeight":10, "outline":"#000"
        },
        {
          "type":"hud",
          "hudType":"label", "label":"%number|scene.player2score|0|3%",
          "width":120, "height":10,
          "zIndex":100, "x":{ "_":[ "constant", "p2llabelx" ] }, "y":{ "_":[ "constant", "hudLabelY" ] },
          "color":"#fff",
          "font":"spectrum", "lineHeight":10, "outline":"#000"
        }
      ]
    },
    "spawnpointModel":{
      "type":[ "spawnpoint", "gameelement" ],
      "image":"sprites", "width":16, "height":16,
      "zIndex":5,
      "timer":0,
      "states":{
        "name":"run",
        "code":{
          "name":"Execute",
          "data":{
            "when":{ "_":[ "objectTyped", { "_":[ "this", "spawn" ] }, "not" ] },
            "execute":{
              "when":{ "_":[ "this", "timer" ] },
              "subtract":1,
              "to":{ "_":[ "this", "timer" ] },
              "elseExecute":{
                "object":{ "set":{ "_":[ "stencil", { "_":[ "that", "spawn" ] } ] }, "at":{ "_":"that" } },
                "into":{ "_":[ "objectTyped", "map1" ] },
                "set":{ "timer":75 }
              }
            }
          }
        }
      }
    },
    "spikeModel":{
      "type":"spike",
      "states":{
        "execute":{ "executeAction":"update" },
        "actions":[
          { "name":"switch", "execute":[ { "set":{ "up":{ "_":[ "this", "up", "not" ] } } }, { "executeAction":"update" } ] },
          {
            "name":"update",
            "execute":[
              { "when":{ "_":[ "this", "up" ] }, "set":{ "type":"hurt", "tileX":176 }, "elseExecute":{ "set":{ "removeType":"hurt", "tileX":160 } } },
              { "_":[ "stencil", "codeUpdate" ] }
            ]
          }
        ]
      }
    },
    "splatModel":{
      "image":"sprites", "tileX":80, "width":16, "height":16,
      "zIndex":3,
      "angle":{ "_":[ "randomNumber", [ 0, 360 ] ] },
      "states":{ "code":{ "name":"Sequence", "data":[ { "wait":50 }, { "_":[ "stencil", "codeRemove" ] } ] } }
    },
    "teleportModel":{
      "type":"button",
      "damage":1000,
      "states":{
        "actions":{
          "name":"press",
          "execute":[
            {
              "as":{ "_":"that" },
              "set":{ "at":{ "_":[ "objectTyped", { "_":[ "that", "teleportTo" ] } ] }, "forceX":0, "forceY":0, "speed":0 },
              "playAudio":"rampup"
            },
            { "when":{ "_":[ "that", "collidesWith", { "_":[ "objectTyped", { "_":[ "that", "hits" ] } ] } ] }, "as":{ "_":"that" }, "executeAction":"hit" }
          ]
        }
      }
    },
    "weaponSpawnModel":{
      "type":[ "spawnpoint", "weaponspawnpoint", "gameelement" ],
      "image":"sprites", "tileY":82, "width":16, "height":16,
      "zIndex":5,
      "hitbox":{ "width":8, "height":8, "x":4, "y":4 },
      "visible":0,
      "timer":0,
      "timerFloat":0,
      "states":{
        "name":"run",
        "execute":{ "set":{ "oy":{ "_":[ "this", "y" ] } } },
        "code":{
          "name":"Execute",
          "data":{
            "when":{ "_":[ "this", "timer" ] },
            "execute":{
              "when":{ "_":[ "this", "collidesWith", { "_":[ "object", "player" ] }, "not" ] },
              "subtract":1,
              "to":{ "_":[ "this", "timer" ] },
              "set":{ "visible":0 }
            },
            "elseExecute":[
              { "sum":0.1, "to":{ "_":[ "this", "timerFloat" ] }, "set":{ "visible":1 } },
              { "set":{ "y":{ "_":[ "this", "timerFloat", "sin", "*", 3, "+", { "_":[ "this", "oy" ] } ] } } },
              {
                "when":{ "_":[ "this", "collidesWith", { "_":[ "object", "player" ] } ] },
                "execute":[
                  { "set":{ "visible":0, "timer":125 } },
                  {
                    "when":{ "_":[ "variable", "speak" ] },
                    "playAudio":{ "_":[ "stencil", "dataWeapons", { "_":[ "this", "weaponId" ] }, "speak" ] },
                    "stopChannel":"speak"
                  },
                  { "playAudio":"beep2" },
                  {
                    "as":{ "_":"that" },
                    "set":{
                      "ammo":{ "_":[ "stencil", "dataWeapons", { "_":[ "that", "weaponId" ] }, "ammo", "*", { "_":[ "variable", "ammo" ] }, "ceil" ] },
                      "firing":0,
                      "hailCount":0,
                      "hailTimer":0,
                      "reloadTimer":0,
                      "say":{ "_":[ "stencil", "dataWeapons", { "_":[ "that", "weaponId" ] }, "label" ] },
                      "weaponData":{ "_":[ "stencil", "dataWeapons", { "_":[ "that", "weaponId" ] } ] },
                      "weaponId":{ "_":[ "that", "weaponId" ] }
                    },
                    "executeAction":"say"
                  },
                  { "when":{ "_":[ "that", "ammo", "not" ] }, "as":{ "_":"that" }, "set":{ "ammo":1 } }
                ]
              },
              { "_":[ "stencil", "codeUpdate" ] }
            ]
          }
        }
      }
    },
    "#":{
      "type":[ "solid", "bulletsolid" ],
      "image":"sprites", "tileY":34, "width":16, "height":16,
      "zIndex":50,
      "execute":{ "_":[ "stencil", "makeSplitScreen" ] }
    },
    "-":{
      "type":"solid",
      "image":"sprites", "tileX":48, "tileY":34, "width":16, "height":16,
      "zIndex":50,
      "execute":{ "_":[ "stencil", "makeSplitScreen" ] }
    },
    "=":{
      "type":[ "hurt", "animated" ],
      "image":"sprites", "tileX":64, "tileY":34, "width":16, "height":16,
      "execute":{ "_":[ "stencil", "makeSplitScreen" ] },
      "damage":10
    },
    "@":{
      "type":[ "hurt", "bulletsolid", "gameelement" ],
      "image":"sprites", "tileX":192, "tileY":34, "width":16, "height":16,
      "zIndex":60,
      "execute":{ "_":[ "stencil", "makeSplitScreen" ] },
      "damage":30,
      "origin":{ "_":[ "new", {} ] },
      "states":{
        "execute":{ "as":{ "_":[ "this", "origin" ] }, "set":{ "x":{ "_":[ "that", "x" ] }, "y":{ "_":[ "that", "y" ] } } },
        "code":{
          "name":"Execute",
          "data":[
            {
              "when":{
                "_":[
                  "objectTyped",
                  "player1",
                  "and",
                  { "_":[ "objectTyped", "player1", "invulnerability", "not" ] },
                  "and",
                  { "_":[ "this", "distanceTo", { "_":[ "objectTyped", "player1" ] }, "isLessThan", 60 ] }
                ]
              },
              "set":{ "dest":{ "_":[ "objectTyped", "player1" ] } },
              "elseExecute":{
                "when":{
                  "_":[
                    "objectTyped",
                    "player2",
                    "and",
                    { "_":[ "objectTyped", "player2", "invulnerability", "not" ] },
                    "and",
                    { "_":[ "this", "distanceTo", { "_":[ "objectTyped", "player2" ] }, "isLessThan", 60 ] }
                  ]
                },
                "set":{ "dest":{ "_":[ "objectTyped", "player2" ] } },
                "elseExecute":{ "set":{ "dest":{ "_":[ "this", "origin" ] } } }
              }
            },
            {
              "when":{ "_":[ "this", "x", "-", { "_":[ "this", "dest", "x" ] }, "abs", "isLessThan", { "_":[ "scene", "droneSpeed" ] } ] },
              "set":{ "x":{ "_":[ "this", "dest", "x" ] } },
              "elseExecute":{
                "when":{ "_":[ "this", "x", "isLessThan", { "_":[ "this", "dest", "x" ] } ] },
                "sum":{ "_":[ "scene", "droneSpeed" ] },
                "to":{ "_":[ "this", "x" ] },
                "elseExecute":{ "subtract":{ "_":[ "scene", "droneSpeed" ] }, "to":{ "_":[ "this", "x" ] } }
              }
            },
            {
              "when":{ "_":[ "this", "y", "-", { "_":[ "this", "dest", "y" ] }, "abs", "isLessThan", { "_":[ "scene", "droneSpeed" ] } ] },
              "set":{ "y":{ "_":[ "this", "dest", "y" ] } },
              "elseExecute":{
                "when":{ "_":[ "this", "y", "isLessThan", { "_":[ "this", "dest", "y" ] } ] },
                "sum":{ "_":[ "scene", "droneSpeed" ] },
                "to":{ "_":[ "this", "y" ] },
                "elseExecute":{ "subtract":{ "_":[ "scene", "droneSpeed" ] }, "to":{ "_":[ "this", "y" ] } }
              }
            },
            { "set":{ "angle":{ "_":[ "this", "angleTo", { "_":[ "this", "dest" ] } ] } } },
            { "_":[ "stencil", "codeUpdate" ] }
          ]
        }
      }
    },
    "I":{
      "type":"solid",
      "image":"sprites", "tileX":32, "tileY":34, "width":16, "height":16,
      "zIndex":50,
      "execute":{ "_":[ "stencil", "makeSplitScreen" ] }
    },
    "L":{ "image":"sprites", "tileX":240, "tileY":34, "width":16, "height":16, "zIndex":20, "execute":{ "_":[ "stencil", "makeSplitScreen" ] } },
    "O":{
      "type":"button",
      "image":"sprites", "tileX":144, "tileY":34, "width":16, "height":16,
      "zIndex":2,
      "execute":{ "_":[ "stencil", "makeSplitScreen" ] },
      "states":{ "actions":{ "name":"press", "execute":[ { "playAudio":"fire" }, { "as":{ "_":[ "object", "spike" ] }, "executeAction":"switch" } ] } }
    },
    "X":{
      "type":[ "solid", "cover" ],
      "image":"sprites", "tileX":208, "tileY":34, "width":16, "height":16,
      "zIndex":2,
      "execute":{ "_":[ "stencil", "makeSplitScreen" ] }
    },
    "Z":{
      "type":[ "solid", "bulletsolid" ],
      "image":"sprites", "tileY":114, "width":16, "height":16,
      "zIndex":50, "frame":{ "_":[ "scene", "mapSkin" ] },
      "execute":{ "_":[ "stencil", "makeSplitScreen" ] }
    },
    "1":{ "type":"spawnpoint1", "set":{ "_":[ "stencil", "spawnpointModel" ] }, "execute":{ "_":[ "stencil", "makeSplitScreen" ] }, "spawn":"player1" },
    "2":{
      "type":"spawnpoint2",
      "set":{ "_":[ "stencil", "spawnpointModel" ] },
      "tileY":16,
      "execute":{ "_":[ "stencil", "makeSplitScreen" ] },
      "spawn":"player2"
    },
    "^":{
      "type":"button",
      "set":{ "_":[ "stencil", "spikeModel" ] },
      "image":"sprites", "tileX":176, "tileY":34, "width":16, "height":16,
      "zIndex":2,
      "execute":{ "_":[ "stencil", "makeSplitScreen" ] },
      "damage":20,
      "up":1
    },
    "v":{
      "type":"button",
      "set":{ "_":[ "stencil", "spikeModel" ] },
      "image":"sprites", "tileX":160, "tileY":34, "width":16, "height":16,
      "zIndex":2,
      "execute":{ "_":[ "stencil", "makeSplitScreen" ] },
      "damage":20,
      "up":0
    },
    "A":{
      "type":"teleportA",
      "set":{ "_":[ "stencil", "teleportModel" ] },
      "image":"sprites", "tileX":80, "tileY":34, "width":16, "height":16,
      "zIndex":2,
      "execute":{ "_":[ "stencil", "makeSplitScreen" ] },
      "teleportTo":"teleportB"
    },
    "B":{
      "type":"teleportB",
      "set":{ "_":[ "stencil", "teleportModel" ] },
      "image":"sprites", "tileX":96, "tileY":34, "width":16, "height":16,
      "zIndex":2,
      "execute":{ "_":[ "stencil", "makeSplitScreen" ] },
      "teleportTo":"teleportA"
    },
    "C":{
      "type":"teleportC",
      "set":{ "_":[ "stencil", "teleportModel" ] },
      "image":"sprites", "tileX":112, "tileY":34, "width":16, "height":16,
      "zIndex":2,
      "execute":{ "_":[ "stencil", "makeSplitScreen" ] },
      "teleportTo":"teleportD"
    },
    "D":{
      "type":"teleportD",
      "set":{ "_":[ "stencil", "teleportModel" ] },
      "image":"sprites", "tileX":128, "tileY":34, "width":16, "height":16,
      "zIndex":2,
      "execute":{ "_":[ "stencil", "makeSplitScreen" ] },
      "teleportTo":"teleportC"
    },
    "a":{ "set":{ "_":[ "stencil", "weaponSpawnModel" ] }, "frame":1, "execute":{ "_":[ "stencil", "makeSplitScreen" ] }, "weaponId":1 },
    "b":{ "set":{ "_":[ "stencil", "weaponSpawnModel" ] }, "frame":2, "execute":{ "_":[ "stencil", "makeSplitScreen" ] }, "weaponId":2 },
    "c":{ "set":{ "_":[ "stencil", "weaponSpawnModel" ] }, "frame":3, "execute":{ "_":[ "stencil", "makeSplitScreen" ] }, "weaponId":3 },
    "d":{ "set":{ "_":[ "stencil", "weaponSpawnModel" ] }, "frame":4, "execute":{ "_":[ "stencil", "makeSplitScreen" ] }, "weaponId":4 }
  },
  "execute":[
    {
      "as":{ "_":"constant" },
      "set":{
        "crownY":{ "_":[ "scene", "height", "-", 28 ] },
        "fh":{ "_":[ "scene", "height" ] },
        "footerY":{ "_":[ "scene", "height", "-", 14 ] },
        "fw":{ "_":[ "scene", "width" ] },
        "fw2":{ "_":[ "scene", "width", "+", 2 ] },
        "hfh":{ "_":[ "scene", "height", "/", 2 ] },
        "hfw":{ "_":[ "scene", "width", "/", 2 ] },
        "hudLabelY":{ "_":[ "scene", "height", "-", 14 ] },
        "hudY":{ "_":[ "scene", "height", "-", 20 ] },
        "kiy":{ "_":[ "scene", "height", "-", 40, "/", 2, "floor" ] },
        "p1ciconx":{ "_":[ "scene", "width", "*", 0.25, "-", 8, "floor" ] },
        "p1clabelx":{ "_":[ "scene", "width", "*", 0.25, "-", 20, "floor" ] },
        "p1crownx":8,
        "p1liconx":4,
        "p1llabelx":20,
        "p1riconx":{ "_":[ "scene", "width", "/", 2, "-", 20, "floor" ] },
        "p1rlabelx":{ "_":[ "scene", "width", "/", 2, "-", 53, "floor" ] },
        "p2ciconx":{ "_":[ "scene", "width", "*", 0.75, "-", 8, "floor" ] },
        "p2clabelx":{ "_":[ "scene", "width", "*", 0.75, "-", 20, "floor" ] },
        "p2crownx":{ "_":[ "scene", "width", "/", 2, "+", 8, "floor" ] },
        "p2liconx":{ "_":[ "scene", "width", "/", 2, "+", 4, "floor" ] },
        "p2llabelx":{ "_":[ "scene", "width", "/", 2, "+", 20, "floor" ] },
        "p2riconx":{ "_":[ "scene", "width", "-", 20 ] },
        "p2rlabelx":{ "_":[ "scene", "width", "-", 53 ] },
        "s1x":-1,
        "sh":{ "_":[ "scene", "height", "+", 2 ] },
        "sw":{ "_":[ "scene", "width", "/", 2, "+", 1 ] }
      }
    },
    {
      "as":{ "_":"constant" },
      "set":{
        "cx":{ "_":[ "constant", "sw", "-", 16, "/", 2 ] },
        "cy":{ "_":[ "scene", "height", "-", 16, "/", 2 ] },
        "s2x":{ "_":[ "constant", "sw", "-", 1 ] }
      }
    },
    {
      "when":{ "_":[ "storage", "played" ] },
      "as":{ "_":"variable" },
      "set":{
        "ammo":{ "_":[ "storage", "ammo" ] },
        "bgmId":{ "_":[ "storage", "bgmId" ] },
        "gamemodeId":{ "_":[ "storage", "gamemodeId" ] },
        "health":{ "_":[ "storage", "health" ] },
        "lives":{ "_":[ "storage", "lives" ] },
        "mapId":{ "_":[ "storage", "mapId" ] },
        "played":1,
        "player1controls":{ "_":[ "storage", "player1controls" ] },
        "player2controls":{ "_":[ "storage", "player2controls" ] },
        "reloadRatio":{ "_":[ "storage", "reloadRatio" ] },
        "speak":{ "_":[ "storage", "speak" ] },
        "speedId":{ "_":[ "storage", "speedId" ] },
        "time":{ "_":[ "storage", "time" ] },
        "weapons":{ "_":[ "storage", "weapons" ] }
      },
      "elseExecute":{
        "as":{ "_":"variable" },
        "set":{
          "ammo":1,
          "bgmId":0,
          "gamemodeId":0,
          "health":100,
          "lives":5,
          "mapId":0,
          "player1controls":0,
          "player2controls":0,
          "reloadRatio":1,
          "speak":1,
          "speedId":1,
          "time":180,
          "weapons":0
        }
      }
    }
  ],
  "scenes":{
    "intro":{
      "object":[
        {
          "box":"label", "width":{ "_":[ "constant", "fw" ] }, "height":10,
          "zIndex":100, "x":0, "y":{ "_":[ { "_":[ "constant", "fh" ] }, "-", 30 ] },
          "color":"#fff",
          "font":"spectrum", "fontSize":20, "lineHeight":10, "outline":"#000", "textAlign":"center", "html":"PRESS START",
          "states":{ "code":{ "name":"Sequence", "data":[ { "set":{ "visible":0 }, "wait":10 }, { "set":{ "visible":1 }, "wait":10, "loopTo":0 } ] } }
        },
        {
          "type":[ "letter1", "letter" ],
          "image":"title", "width":60, "height":143,
          "x":-60, "y":{ "_":[ { "_":[ "constant", "fh" ] }, "-", 143, "/", 2, "floor" ] },
          "range":20,
          "timer":0,
          "states":{
            "code":{
              "name":"Execute",
              "data":[
                { "sum":0.1, "to":{ "_":[ "this", "timer" ] } },
                { "sum":2, "to":{ "_":[ "this", "range" ] } },
                { "set":{ "x":{ "_":[ "this", "timer", "sin", "*", { "_":[ "this", "range" ] }, "-", 60 ] }, "angle":{ "_":[ "this", "timer", "sin", "*", 20 ] } } }
              ]
            }
          }
        },
        {
          "type":[ "letter2", "letter" ],
          "image":"title", "width":60, "height":143,
          "x":{ "_":[ "constant", "fw" ] }, "y":{ "_":[ { "_":[ "constant", "fh" ] }, "-", 143, "/", 2, "floor" ] },
          "flipX":1,
          "range":20,
          "timer":0,
          "states":{
            "code":{
              "name":"Execute",
              "data":[
                { "subtract":0.1, "to":{ "_":[ "this", "timer" ] } },
                { "sum":2, "to":{ "_":[ "this", "range" ] } },
                {
                  "set":{
                    "x":{ "_":[ "this", "timer", "sin", "*", { "_":[ "this", "range" ] }, "+", { "_":[ "constant", "fw" ] } ] },
                    "angle":{ "_":[ "this", "timer", "sin", "*", -20 ] }
                  }
                }
              ]
            }
          }
        }
      ],
      "states":{
        "code":[
          {
            "name":"Sequence",
            "data":[
              { "wait":1, "loop":1, "until":{ "_":[ "objectTyped", "letter1", "x", "+", 60, "isGreaterThan", { "_":[ "objectTyped", "letter2", "x" ] } ] } },
              { "as":{ "_":[ "object", "letter" ] }, "set":{ "visible":0, "state":"frozen" } },
              {
                "object":{
                  "type":"blink",
                  "width":{ "_":[ "constant", "fw" ] }, "height":{ "_":[ "constant", "fh" ] },
                  "zIndex":10, "x":0, "y":0,
                  "bgcolor":"#fff",
                  "states":{
                    "code":{
                      "name":"Sequence",
                      "data":[ { "set":{ "bgcolor":"#f00", "playAudio":"explode" }, "wait":1 }, { "set":{ "bgcolor":"#fff" }, "wait":1, "loopTo":0 } ]
                    }
                  }
                }
              },
              { "wait":6 },
              { "as":{ "_":[ "object", "blink" ] }, "remove":1 },
              { "as":{ "_":[ "objectTyped", "letter2" ] }, "set":{ "x":{ "_":[ { "_":[ "constant", "hfw" ] }, "-", 90 ] }, "visible":1, "angle":0 } },
              { "as":{ "_":[ "objectTyped", "letter1" ] }, "set":{ "x":{ "_":[ { "_":[ "constant", "hfw" ] }, "+", 30 ] }, "visible":1, "angle":0 } },
              {
                "object":{
                  "type":"v",
                  "image":"title", "tileX":60, "width":60, "height":143,
                  "x":{ "_":[ { "_":[ "constant", "hfw" ] }, "-", 30 ] }, "y":{ "_":[ "objectTyped", "letter1", "y" ] }
                }
              },
              { "wait":25 },
              {
                "object":{
                  "image":"title", "tileY":143, "width":140, "height":17,
                  "zIndex":5, "x":{ "_":[ { "_":[ "constant", "hfw" ] }, "-", 70 ] }, "y":{ "_":[ { "_":[ "constant", "hfh" ] }, "-", 8 ] },
                  "scale":0,
                  "timer":0,
                  "states":{
                    "code":[
                      { "name":"Sequence", "data":{ "sum":0.2, "to":{ "_":[ "this", "scale" ] }, "wait":1, "loop":1, "cycles":5 } },
                      {
                        "name":"Execute",
                        "data":[
                          { "sum":0.1, "to":{ "_":[ "this", "timer" ] } },
                          { "set":{ "y":{ "_":[ "this", "timer", "sin", "*", 6, "+", { "_":[ "constant", "hfh" ] }, "-", 8 ] } } }
                        ]
                      }
                    ]
                  }
                },
                "playAudio":"rampup"
              },
              { "wait":5 },
              { "sum":1, "to":{ "_":[ "objectTyped", "letter1", "y" ] } },
              { "subtract":1, "to":{ "_":[ "objectTyped", "letter2", "y" ] } },
              { "sum":1, "to":{ "_":[ "objectTyped", "v", "x" ] } },
              { "wait":1 },
              { "subtract":1, "to":{ "_":[ "objectTyped", "letter1", "y" ] } },
              { "sum":1, "to":{ "_":[ "objectTyped", "letter2", "y" ] } },
              { "subtract":1, "to":{ "_":[ "objectTyped", "v", "x" ] } },
              { "wait":1, "cycles":5, "loopTo":-7 },
              { "playAudio":"pvp" }
            ]
          },
          {
            "name":"Execute",
            "data":{ "when":{ "_":[ "keyA", "isHit", "or", { "_":[ "keyA2", "isHit" ] } ] }, "gotoScene":"menu", "withTransition":3, "playAudio":"bigfire" }
          }
        ]
      }
    },
    "menu":{
      "object":[
        { "width":90, "height":{ "_":[ "constant", "fh" ] }, "x":0, "y":0, "bgcolor":"#00f" },
        {
          "width":{ "_":[ "constant", "fw" ] }, "height":10,
          "zIndex":20, "x":0, "y":{ "_":[ "constant", "footerY" ] },
          "bgcolor":"#f0f", "color":"#000",
          "font":"spectrum", "lineHeight":10, "textAlign":"center", "html":"Press A BUTTON to start!"
        },
        { "type":"selector", "width":{ "_":[ "constant", "fw" ] }, "height":10, "zIndex":5, "x":0, "y":0, "bgcolor":"#f00" },
        {
          "type":"tooltip",
          "width":{ "_":[ { "_":[ "constant", "fw" ] }, "-", 106 ] }, "height":55,
          "zIndex":30, "x":95,
          "bgcolor":"#7f7f7f", "border":"#7f7f7f", "color":"#000",
          "font":"spectrum", "lineHeight":10
        }
      ],
      "optionId":0,
      "states":{
        "execute":[
          [
            { "set":{ "counter":0 } },
            {
              "times":{ "_":[ "stencil", "dataOptions", "count" ] },
              "execute":[
                {
                  "object":{
                    "width":82, "height":10,
                    "zIndex":10, "x":8, "y":{ "_":[ "that", "counter", "*", 10, "+", 10 ] },
                    "color":"#fff",
                    "font":"spectrum", "lineHeight":10, "outline":"#000", "html":{ "_":[ "stencil", "dataOptions", { "_":[ "that", "counter" ] }, "label" ] }
                  }
                },
                { "sum":1, "to":{ "_":[ "this", "counter" ] } }
              ]
            }
          ],
          { "executeAction":"updateMenu" }
        ],
        "code":{
          "name":"Execute",
          "data":[
            {
              "when":{ "_":[ "keyUp", "isHit", "or", { "_":[ "keyUp2", "isHit" ] } ] },
              "execute":[
                { "subtract":1, "to":{ "_":[ "this", "optionId" ] } },
                { "when":{ "_":[ "this", "optionId", "isLessThan", 0 ] }, "set":{ "optionId":{ "_":[ "stencil", "dataOptions", "count", "-", 1 ] } } },
                { "executeAction":"updateTooltip", "playAudio":"fire" }
              ]
            },
            {
              "when":{ "_":[ "keyDown", "isHit", "or", { "_":[ "keyDown2", "isHit" ] } ] },
              "execute":[
                { "sum":1, "to":{ "_":[ "this", "optionId" ] } },
                { "when":{ "_":[ "this", "optionId", "isGreaterEqualThan", { "_":[ "stencil", "dataOptions", "count" ] } ] }, "set":{ "optionId":0 } },
                { "executeAction":"updateTooltip", "playAudio":"fire" }
              ]
            },
            {
              "when":{ "_":[ "keyRight", "isHit", "or", { "_":[ "keyRight2", "isHit" ] } ] },
              "execute":[ { "_":[ "stencil", "dataOptions", { "_":[ "this", "optionId" ] }, "onRight" ] }, { "executeAction":"updateMenu", "playAudio":"beep" } ]
            },
            {
              "when":{ "_":[ "keyLeft", "isHit", "or", { "_":[ "keyLeft2", "isHit" ] } ] },
              "execute":[ { "_":[ "stencil", "dataOptions", { "_":[ "this", "optionId" ] }, "onLeft" ] }, { "executeAction":"updateMenu", "playAudio":"beep" } ]
            },
            { "when":{ "_":[ "keyA2", "isHit", "or", { "_":[ "keyA", "isHit" ] } ] }, "executeAction":"start" },
            { "when":{ "_":[ "keyB2", "isHit", "or", { "_":[ "keyB", "isHit" ] } ] }, "gotoScene":"intro", "withTransition":3, "playAudio":"bigfire" },
            { "as":{ "_":[ "objectTyped", "selector" ] }, "set":{ "y":{ "_":[ "scene", "optionId", "*", 10, "+", 10 ] } } }
          ]
        },
        "actions":[
          {
            "name":"updateTooltip",
            "execute":{
              "as":{ "_":[ "objectTyped", "tooltip" ] },
              "execute":[
                { "set":{ "y":{ "_":[ "that", "optionId", "*", 10, "+", 24 ] } } },
                { "_":[ "stencil", "dataOptions", { "_":[ "that", "optionId" ] }, "tooltipValue" ] },
                { "when":{ "_":[ "this", "y", "isGreaterThan", { "_":[ "constant", "hfh" ] } ] }, "subtract":63, "to":{ "_":[ "this", "y" ] } }
              ]
            }
          },
          {
            "name":"updateMenu",
            "execute":[
              { "as":{ "_":[ "object", "option" ] }, "remove":1 },
              { "set":{ "counter":0 } },
              {
                "times":{ "_":[ "stencil", "dataOptions", "count" ] },
                "execute":[
                  {
                    "object":{
                      "type":"option",
                      "width":{ "_":[ "constant", "fw" ] }, "height":10,
                      "zIndex":10, "x":95, "y":{ "_":[ "that", "counter", "*", 10, "+", 10 ] },
                      "color":"#fff",
                      "font":"spectrum", "lineHeight":10, "outline":"#000",
                      "execute":{ "_":[ "stencil", "dataOptions", { "_":[ "that", "counter" ] }, "optionValue" ] }
                    }
                  },
                  { "sum":1, "to":{ "_":[ "this", "counter" ] } }
                ]
              },
              { "executeAction":"updateTooltip" }
            ]
          },
          {
            "name":"start",
            "execute":[
              { "playAudio":"bigfire" },
              {
                "as":{ "_":"storage" },
                "set":{
                  "ammo":{ "_":[ "variable", "ammo" ] },
                  "bgmId":{ "_":[ "variable", "bgmId" ] },
                  "gamemodeId":{ "_":[ "variable", "gamemodeId" ] },
                  "health":{ "_":[ "variable", "health" ] },
                  "lives":{ "_":[ "variable", "lives" ] },
                  "mapId":{ "_":[ "variable", "mapId" ] },
                  "played":1,
                  "player1controls":{ "_":[ "variable", "player1controls" ] },
                  "player2controls":{ "_":[ "variable", "player2controls" ] },
                  "reloadRatio":{ "_":[ "variable", "reloadRatio" ] },
                  "speak":{ "_":[ "variable", "speak" ] },
                  "speedId":{ "_":[ "variable", "speedId" ] },
                  "time":{ "_":[ "variable", "time" ] },
                  "weapons":{ "_":[ "variable", "weapons" ] }
                }
              },
              {
                "as":{ "_":"variable" },
                "set":{
                  "speed":{ "_":[ "stencil", "dataSpeed", { "_":[ "variable", "speedId" ] } ] },
                  "gamemode":{ "_":[ "stencil", "dataGameModes", { "_":[ "variable", "gamemodeId" ] } ] }
                }
              },
              {
                "when":{ "_":[ "variable", "mapId" ] },
                "as":{ "_":"variable" },
                "set":{ "map":{ "_":[ "stencil", "dataMaps", { "_":[ "variable", "mapId" ] } ] } },
                "elseExecute":{
                  "as":{ "_":"variable" },
                  "set":{ "map":{ "_":[ "stencil", "dataMaps", { "_":[ "randomNumber", [ 1, { "_":[ "stencil", "dataMaps", "count", "-", 1 ] } ] ] } ] } }
                }
              },
              {
                "when":{ "_":[ "variable", "bgmId" ] },
                "as":{ "_":"variable" },
                "set":{ "bgm":{ "_":[ "stencil", "dataBgm", { "_":[ "variable", "bgmId" ] } ] } },
                "elseExecute":{
                  "as":{ "_":"variable" },
                  "set":{ "bgm":{ "_":[ "stencil", "dataBgm", { "_":[ "randomNumber", [ 2, { "_":[ "stencil", "dataBgm", "count", "-", 1 ] } ] ] } ] } }
                }
              },
              { "gotoScene":{ "_":[ "variable", "map", "sceneId" ] }, "withTransition":3 }
            ]
          }
        ]
      }
    }
  }
}